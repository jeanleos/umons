// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_resource_rf_leq_nin_ap_fixed_ap_fixed_16_6_5_3_0_config18_mult_0_0_HH_
#define _dense_resource_rf_leq_nin_ap_fixed_ap_fixed_16_6_5_3_0_config18_mult_0_0_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_axi_mux_727_16_1_1.h"
#include "myproject_axi_mul_mul_16s_11s_26_3_1.h"
#include "dense_resource_rf_leq_nin_ap_fixed_ap_fixed_16_6_5_3_0_config18_mult_0_0_w18_V.h"

namespace ap_rtl {

struct dense_resource_rf_leq_nin_ap_fixed_ap_fixed_16_6_5_3_0_config18_mult_0_0 : public sc_module {
    // Port declarations 79
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > kernel_data_V_5_0;
    sc_in< sc_lv<16> > kernel_data_V_5_1;
    sc_in< sc_lv<16> > kernel_data_V_5_2;
    sc_in< sc_lv<16> > kernel_data_V_5_3;
    sc_in< sc_lv<16> > kernel_data_V_5_4;
    sc_in< sc_lv<16> > kernel_data_V_5_5;
    sc_in< sc_lv<16> > kernel_data_V_5_6;
    sc_in< sc_lv<16> > kernel_data_V_5_7;
    sc_in< sc_lv<16> > kernel_data_V_5_8;
    sc_in< sc_lv<16> > kernel_data_V_5_9;
    sc_in< sc_lv<16> > kernel_data_V_5_10;
    sc_in< sc_lv<16> > kernel_data_V_5_11;
    sc_in< sc_lv<16> > kernel_data_V_5_12;
    sc_in< sc_lv<16> > kernel_data_V_5_13;
    sc_in< sc_lv<16> > kernel_data_V_5_14;
    sc_in< sc_lv<16> > kernel_data_V_5_15;
    sc_in< sc_lv<16> > kernel_data_V_5_16;
    sc_in< sc_lv<16> > kernel_data_V_5_17;
    sc_in< sc_lv<16> > kernel_data_V_5_18;
    sc_in< sc_lv<16> > kernel_data_V_5_19;
    sc_in< sc_lv<16> > kernel_data_V_5_20;
    sc_in< sc_lv<16> > kernel_data_V_5_21;
    sc_in< sc_lv<16> > kernel_data_V_5_22;
    sc_in< sc_lv<16> > kernel_data_V_5_23;
    sc_in< sc_lv<16> > kernel_data_V_5_24;
    sc_in< sc_lv<16> > kernel_data_V_5_25;
    sc_in< sc_lv<16> > kernel_data_V_5_26;
    sc_in< sc_lv<16> > kernel_data_V_5_27;
    sc_in< sc_lv<16> > kernel_data_V_5_28;
    sc_in< sc_lv<16> > kernel_data_V_5_29;
    sc_in< sc_lv<16> > kernel_data_V_5_30;
    sc_in< sc_lv<16> > kernel_data_V_5_31;
    sc_in< sc_lv<16> > kernel_data_V_5_32;
    sc_in< sc_lv<16> > kernel_data_V_5_33;
    sc_in< sc_lv<16> > kernel_data_V_5_34;
    sc_in< sc_lv<16> > kernel_data_V_5_35;
    sc_in< sc_lv<16> > kernel_data_V_5_36;
    sc_in< sc_lv<16> > kernel_data_V_5_37;
    sc_in< sc_lv<16> > kernel_data_V_5_38;
    sc_in< sc_lv<16> > kernel_data_V_5_39;
    sc_in< sc_lv<16> > kernel_data_V_5_40;
    sc_in< sc_lv<16> > kernel_data_V_5_41;
    sc_in< sc_lv<16> > kernel_data_V_5_42;
    sc_in< sc_lv<16> > kernel_data_V_5_43;
    sc_in< sc_lv<16> > kernel_data_V_5_44;
    sc_in< sc_lv<16> > kernel_data_V_5_45;
    sc_in< sc_lv<16> > kernel_data_V_5_46;
    sc_in< sc_lv<16> > kernel_data_V_5_47;
    sc_in< sc_lv<16> > kernel_data_V_5_48;
    sc_in< sc_lv<16> > kernel_data_V_5_49;
    sc_in< sc_lv<16> > kernel_data_V_5_50;
    sc_in< sc_lv<16> > kernel_data_V_5_51;
    sc_in< sc_lv<16> > kernel_data_V_5_52;
    sc_in< sc_lv<16> > kernel_data_V_5_53;
    sc_in< sc_lv<16> > kernel_data_V_5_54;
    sc_in< sc_lv<16> > kernel_data_V_5_55;
    sc_in< sc_lv<16> > kernel_data_V_5_56;
    sc_in< sc_lv<16> > kernel_data_V_5_57;
    sc_in< sc_lv<16> > kernel_data_V_5_58;
    sc_in< sc_lv<16> > kernel_data_V_5_59;
    sc_in< sc_lv<16> > kernel_data_V_5_60;
    sc_in< sc_lv<16> > kernel_data_V_5_61;
    sc_in< sc_lv<16> > kernel_data_V_5_62;
    sc_in< sc_lv<16> > kernel_data_V_5_63;
    sc_in< sc_lv<16> > kernel_data_V_5_64;
    sc_in< sc_lv<16> > kernel_data_V_5_65;
    sc_in< sc_lv<16> > kernel_data_V_5_66;
    sc_in< sc_lv<16> > kernel_data_V_5_67;
    sc_in< sc_lv<16> > kernel_data_V_5_68;
    sc_in< sc_lv<16> > kernel_data_V_5_69;
    sc_in< sc_lv<16> > kernel_data_V_5_70;
    sc_in< sc_lv<16> > kernel_data_V_5_71;
    sc_out< sc_lv<16> > ap_return;


    // Module declarations
    dense_resource_rf_leq_nin_ap_fixed_ap_fixed_16_6_5_3_0_config18_mult_0_0(sc_module_name name);
    SC_HAS_PROCESS(dense_resource_rf_leq_nin_ap_fixed_ap_fixed_16_6_5_3_0_config18_mult_0_0);

    ~dense_resource_rf_leq_nin_ap_fixed_ap_fixed_16_6_5_3_0_config18_mult_0_0();

    sc_trace_file* mVcdFile;

    dense_resource_rf_leq_nin_ap_fixed_ap_fixed_16_6_5_3_0_config18_mult_0_0_w18_V* w18_V_U;
    myproject_axi_mux_727_16_1_1<1,1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16>* myproject_axi_mux_727_16_1_1_U1413;
    myproject_axi_mul_mul_16s_11s_26_3_1<1,3,16,11,26>* myproject_axi_mul_mul_16s_11s_26_3_1_U1414;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > icmp_ln46_fu_264_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<7> > w18_V_address0;
    sc_signal< sc_logic > w18_V_ce0;
    sc_signal< sc_lv<11> > w18_V_q0;
    sc_signal< sc_lv<7> > in_index7_reg_209;
    sc_signal< sc_lv<16> > res_V_write_assign5_reg_239;
    sc_signal< sc_lv<7> > in_index_fu_258_p2;
    sc_signal< sc_lv<7> > in_index_reg_744;
    sc_signal< sc_lv<1> > icmp_ln46_reg_749;
    sc_signal< sc_lv<1> > icmp_ln46_reg_749_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln46_reg_749_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln46_reg_749_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln46_reg_749_pp0_iter4_reg;
    sc_signal< sc_lv<16> > tmp_fu_558_p74;
    sc_signal< sc_lv<16> > tmp_reg_753;
    sc_signal< sc_lv<11> > w18_V_load_reg_758;
    sc_signal< sc_lv<26> > grp_fu_733_p2;
    sc_signal< sc_lv<26> > r_V_reg_773;
    sc_signal< sc_lv<16> > acc_0_V_fu_723_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<7> > ap_phi_mux_in_index7_phi_fu_213_p6;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln59_fu_253_p1;
    sc_signal< sc_lv<16> > trunc_ln_fu_714_p4;
    sc_signal< sc_logic > grp_fu_733_ce;
    sc_signal< sc_lv<16> > ap_return_preg;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to4;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_177;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<16> ap_const_lv16_FF56;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<7> ap_const_lv7_47;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<16> ap_const_lv16_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_acc_0_V_fu_723_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_condition_177();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to4();
    void thread_ap_phi_mux_in_index7_phi_fu_213_p6();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return();
    void thread_grp_fu_733_ce();
    void thread_icmp_ln46_fu_264_p2();
    void thread_in_index_fu_258_p2();
    void thread_trunc_ln_fu_714_p4();
    void thread_w18_V_address0();
    void thread_w18_V_ce0();
    void thread_zext_ln59_fu_253_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
