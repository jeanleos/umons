// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_config2_mult_0_0_0_0_0_HH_
#define _dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_config2_mult_0_0_0_0_0_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_axi_mux_42_16_1_1.h"
#include "myproject_axi_mul_mul_16s_10s_26_3_1.h"
#include "dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_config2_mult_0_0_0_0_0_outidx7.h"
#include "dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_config2_mult_0_0_0_0_0_w2_V.h"

namespace ap_rtl {

struct dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_config2_mult_0_0_0_0_0 : public sc_module {
    // Port declarations 37
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > kernel_data_V_2_0;
    sc_in< sc_lv<16> > kernel_data_V_2_1;
    sc_in< sc_lv<16> > kernel_data_V_2_2;
    sc_in< sc_lv<16> > kernel_data_V_2_3;
    sc_in< sc_lv<16> > kernel_data_V_2_4;
    sc_in< sc_lv<16> > kernel_data_V_2_5;
    sc_in< sc_lv<16> > kernel_data_V_2_6;
    sc_in< sc_lv<16> > kernel_data_V_2_7;
    sc_in< sc_lv<16> > kernel_data_V_2_8;
    sc_in< sc_lv<16> > kernel_data_V_2_9;
    sc_in< sc_lv<16> > kernel_data_V_2_10;
    sc_in< sc_lv<16> > kernel_data_V_2_11;
    sc_in< sc_lv<16> > kernel_data_V_2_12;
    sc_in< sc_lv<16> > kernel_data_V_2_13;
    sc_in< sc_lv<16> > kernel_data_V_2_14;
    sc_in< sc_lv<16> > kernel_data_V_2_15;
    sc_in< sc_lv<16> > kernel_data_V_2_16;
    sc_in< sc_lv<16> > kernel_data_V_2_17;
    sc_in< sc_lv<16> > kernel_data_V_2_18;
    sc_in< sc_lv<16> > kernel_data_V_2_19;
    sc_in< sc_lv<16> > kernel_data_V_2_20;
    sc_in< sc_lv<16> > kernel_data_V_2_21;
    sc_in< sc_lv<16> > kernel_data_V_2_22;
    sc_in< sc_lv<16> > kernel_data_V_2_23;
    sc_in< sc_lv<16> > kernel_data_V_2_24;
    sc_in< sc_lv<16> > kernel_data_V_2_25;
    sc_in< sc_lv<16> > kernel_data_V_2_26;
    sc_out< sc_lv<16> > ap_return_0;
    sc_out< sc_lv<16> > ap_return_1;
    sc_out< sc_lv<16> > ap_return_2;
    sc_out< sc_lv<16> > ap_return_3;


    // Module declarations
    dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_config2_mult_0_0_0_0_0(sc_module_name name);
    SC_HAS_PROCESS(dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_config2_mult_0_0_0_0_0);

    ~dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_config2_mult_0_0_0_0_0();

    sc_trace_file* mVcdFile;

    dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_config2_mult_0_0_0_0_0_outidx7* outidx7_U;
    dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_config2_mult_0_0_0_0_0_w2_V* w2_V_U;
    myproject_axi_mux_42_16_1_1<1,1,16,16,16,16,2,16>* myproject_axi_mux_42_16_1_1_U40;
    myproject_axi_mul_mul_16s_10s_26_3_1<1,3,16,10,26>* myproject_axi_mul_mul_16s_10s_26_3_1_U41;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > icmp_ln135_fu_589_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter6;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<7> > outidx7_address0;
    sc_signal< sc_logic > outidx7_ce0;
    sc_signal< sc_lv<2> > outidx7_q0;
    sc_signal< sc_lv<7> > w2_V_address0;
    sc_signal< sc_logic > w2_V_ce0;
    sc_signal< sc_lv<10> > w2_V_q0;
    sc_signal< sc_lv<32> > in_index_0_i30_reg_202;
    sc_signal< sc_lv<7> > w_index29_reg_217;
    sc_signal< sc_lv<16> > acc_0_V_020_reg_290;
    sc_signal< sc_lv<16> > acc_1_V_019_reg_305;
    sc_signal< sc_lv<16> > acc_2_V_018_reg_320;
    sc_signal< sc_lv<16> > acc_3_V_017_reg_335;
    sc_signal< sc_lv<16> > res_0_V_write_assign28_reg_365;
    sc_signal< sc_lv<16> > res_1_V_write_assign26_reg_379;
    sc_signal< sc_lv<16> > res_2_V_write_assign24_reg_393;
    sc_signal< sc_lv<16> > res_3_V_write_assign22_reg_407;
    sc_signal< sc_lv<7> > w_index_fu_571_p2;
    sc_signal< sc_lv<7> > w_index_reg_787;
    sc_signal< sc_lv<32> > in_index_fu_577_p2;
    sc_signal< sc_lv<32> > in_index_reg_797;
    sc_signal< sc_lv<1> > icmp_ln154_fu_583_p2;
    sc_signal< sc_lv<1> > icmp_ln154_reg_802;
    sc_signal< sc_lv<1> > icmp_ln135_reg_807;
    sc_signal< sc_lv<1> > icmp_ln135_reg_807_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln135_reg_807_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln135_reg_807_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln135_reg_807_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln135_reg_807_pp0_iter5_reg;
    sc_signal< sc_lv<2> > out_index_reg_811;
    sc_signal< sc_lv<2> > out_index_reg_811_pp0_iter2_reg;
    sc_signal< sc_lv<2> > out_index_reg_811_pp0_iter3_reg;
    sc_signal< sc_lv<2> > out_index_reg_811_pp0_iter4_reg;
    sc_signal< sc_lv<2> > out_index_reg_811_pp0_iter5_reg;
    sc_signal< sc_lv<5> > trunc_ln145_fu_595_p1;
    sc_signal< sc_lv<10> > w2_V_load_reg_955;
    sc_signal< sc_lv<32> > select_ln154_fu_707_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<26> > grp_fu_776_p2;
    sc_signal< sc_lv<26> > r_V_reg_975;
    sc_signal< sc_lv<16> > acc_0_V_fu_742_p2;
    sc_signal< sc_lv<16> > acc_0_V_reg_980;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_lv<32> > ap_phi_mux_in_index_0_i30_phi_fu_206_p6;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<7> > ap_phi_mux_w_index29_phi_fu_221_p6;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter0_UnifiedRetVal_i_i_reg_231;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter1_UnifiedRetVal_i_i_reg_231;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter2_UnifiedRetVal_i_i_reg_231;
    sc_signal< sc_lv<16> > ap_phi_mux_acc_0_V_020_phi_fu_294_p6;
    sc_signal< sc_lv<16> > ap_phi_mux_acc_0_V_1_phi_fu_479_p8;
    sc_signal< sc_lv<16> > ap_phi_mux_acc_1_V_019_phi_fu_309_p6;
    sc_signal< sc_lv<16> > ap_phi_mux_acc_1_V_1_phi_fu_461_p8;
    sc_signal< sc_lv<16> > ap_phi_mux_acc_2_V_018_phi_fu_324_p6;
    sc_signal< sc_lv<16> > ap_phi_mux_acc_2_V_1_phi_fu_443_p8;
    sc_signal< sc_lv<16> > ap_phi_mux_acc_3_V_017_phi_fu_339_p6;
    sc_signal< sc_lv<16> > ap_phi_mux_acc_3_V_1_phi_fu_425_p8;
    sc_signal< sc_lv<16> > ap_phi_mux_p_0_01_i_phi_fu_551_p8;
    sc_signal< sc_lv<16> > ap_phi_mux_p_0_13_i_phi_fu_533_p8;
    sc_signal< sc_lv<16> > ap_phi_mux_p_0_25_i_phi_fu_515_p8;
    sc_signal< sc_lv<16> > ap_phi_mux_p_0_37_i_phi_fu_497_p8;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter6_acc_3_V_1_reg_421;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter6_acc_2_V_1_reg_439;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter6_acc_1_V_1_reg_457;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter6_acc_0_V_1_reg_475;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter6_p_0_37_i_reg_493;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter6_p_0_25_i_reg_511;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter6_p_0_13_i_reg_529;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter6_p_0_01_i_reg_547;
    sc_signal< sc_lv<64> > zext_ln139_fu_565_p1;
    sc_signal< sc_lv<16> > trunc_ln1_fu_720_p4;
    sc_signal< sc_lv<16> > tmp_fu_729_p6;
    sc_signal< sc_logic > grp_fu_776_ce;
    sc_signal< sc_lv<16> > ap_return_0_preg;
    sc_signal< sc_lv<16> > ap_return_1_preg;
    sc_signal< sc_lv<16> > ap_return_2_preg;
    sc_signal< sc_lv<16> > ap_return_3_preg;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to5;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_346;
    sc_signal< bool > ap_condition_311;
    sc_signal< bool > ap_condition_319;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<5> ap_const_lv5_19;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<5> ap_const_lv5_17;
    static const sc_lv<5> ap_const_lv5_16;
    static const sc_lv<5> ap_const_lv5_15;
    static const sc_lv<5> ap_const_lv5_14;
    static const sc_lv<5> ap_const_lv5_13;
    static const sc_lv<5> ap_const_lv5_12;
    static const sc_lv<5> ap_const_lv5_11;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<5> ap_const_lv5_E;
    static const sc_lv<5> ap_const_lv5_D;
    static const sc_lv<5> ap_const_lv5_C;
    static const sc_lv<5> ap_const_lv5_B;
    static const sc_lv<5> ap_const_lv5_A;
    static const sc_lv<5> ap_const_lv5_9;
    static const sc_lv<5> ap_const_lv5_8;
    static const sc_lv<5> ap_const_lv5_7;
    static const sc_lv<5> ap_const_lv5_6;
    static const sc_lv<5> ap_const_lv5_5;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1D;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<5> ap_const_lv5_1B;
    static const sc_lv<5> ap_const_lv5_1A;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<16> ap_const_lv16_FFF1;
    static const sc_lv<16> ap_const_lv16_18;
    static const sc_lv<16> ap_const_lv16_2D;
    static const sc_lv<16> ap_const_lv16_C;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<7> ap_const_lv7_6B;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<16> ap_const_lv16_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_acc_0_V_fu_742_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_block_state8_pp0_stage0_iter6();
    void thread_ap_condition_311();
    void thread_ap_condition_319();
    void thread_ap_condition_346();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to5();
    void thread_ap_phi_mux_acc_0_V_020_phi_fu_294_p6();
    void thread_ap_phi_mux_acc_0_V_1_phi_fu_479_p8();
    void thread_ap_phi_mux_acc_1_V_019_phi_fu_309_p6();
    void thread_ap_phi_mux_acc_1_V_1_phi_fu_461_p8();
    void thread_ap_phi_mux_acc_2_V_018_phi_fu_324_p6();
    void thread_ap_phi_mux_acc_2_V_1_phi_fu_443_p8();
    void thread_ap_phi_mux_acc_3_V_017_phi_fu_339_p6();
    void thread_ap_phi_mux_acc_3_V_1_phi_fu_425_p8();
    void thread_ap_phi_mux_in_index_0_i30_phi_fu_206_p6();
    void thread_ap_phi_mux_p_0_01_i_phi_fu_551_p8();
    void thread_ap_phi_mux_p_0_13_i_phi_fu_533_p8();
    void thread_ap_phi_mux_p_0_25_i_phi_fu_515_p8();
    void thread_ap_phi_mux_p_0_37_i_phi_fu_497_p8();
    void thread_ap_phi_mux_w_index29_phi_fu_221_p6();
    void thread_ap_phi_reg_pp0_iter0_UnifiedRetVal_i_i_reg_231();
    void thread_ap_phi_reg_pp0_iter6_acc_0_V_1_reg_475();
    void thread_ap_phi_reg_pp0_iter6_acc_1_V_1_reg_457();
    void thread_ap_phi_reg_pp0_iter6_acc_2_V_1_reg_439();
    void thread_ap_phi_reg_pp0_iter6_acc_3_V_1_reg_421();
    void thread_ap_phi_reg_pp0_iter6_p_0_01_i_reg_547();
    void thread_ap_phi_reg_pp0_iter6_p_0_13_i_reg_529();
    void thread_ap_phi_reg_pp0_iter6_p_0_25_i_reg_511();
    void thread_ap_phi_reg_pp0_iter6_p_0_37_i_reg_493();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_grp_fu_776_ce();
    void thread_icmp_ln135_fu_589_p2();
    void thread_icmp_ln154_fu_583_p2();
    void thread_in_index_fu_577_p2();
    void thread_outidx7_address0();
    void thread_outidx7_ce0();
    void thread_select_ln154_fu_707_p3();
    void thread_trunc_ln145_fu_595_p1();
    void thread_trunc_ln1_fu_720_p4();
    void thread_w2_V_address0();
    void thread_w2_V_ce0();
    void thread_w_index_fu_571_p2();
    void thread_zext_ln139_fu_565_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
