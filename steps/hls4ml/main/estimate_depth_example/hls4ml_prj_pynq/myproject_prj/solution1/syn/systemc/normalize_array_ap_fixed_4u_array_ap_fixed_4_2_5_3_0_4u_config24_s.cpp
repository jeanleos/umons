// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::ap_ST_fsm_state1 = "1";
const sc_lv<3> normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::ap_ST_fsm_state5 = "100";
const sc_lv<32> normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::ap_const_boolean_1 = true;
const sc_lv<32> normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::ap_const_lv32_1 = "1";
const bool normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::ap_const_boolean_0 = false;
const sc_lv<1> normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::ap_const_lv1_0 = "0";
const sc_lv<1> normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::ap_const_lv1_1 = "1";
const sc_lv<13> normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::ap_const_lv13_0 = "0000000000000";
const sc_lv<13> normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::ap_const_lv13_1000 = "1000000000000";
const sc_lv<13> normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::ap_const_lv13_1 = "1";
const sc_lv<5> normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::ap_const_lv5_1C = "11100";
const sc_lv<32> normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::ap_const_lv32_2 = "10";
const sc_lv<32> normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::ap_const_lv32_4 = "100";

normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln1192_7_fu_159_p2);
    sensitive << ( sext_ln1192_6_fu_155_p1 );

    SC_METHOD(thread_add_ln1192_8_fu_179_p2);
    sensitive << ( sext_ln1192_7_fu_175_p1 );

    SC_METHOD(thread_add_ln1192_9_fu_199_p2);
    sensitive << ( sext_ln1192_8_fu_195_p1 );

    SC_METHOD(thread_add_ln1192_fu_139_p2);
    sensitive << ( sext_ln1192_fu_135_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln25_reg_231 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln25_reg_231_pp0_iter1_reg );
    sensitive << ( io_acc_block_signal_op21 );
    sensitive << ( io_acc_block_signal_op45 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln25_reg_231 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln25_reg_231_pp0_iter1_reg );
    sensitive << ( io_acc_block_signal_op21 );
    sensitive << ( io_acc_block_signal_op45 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln25_reg_231 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln25_reg_231_pp0_iter1_reg );
    sensitive << ( io_acc_block_signal_op21 );
    sensitive << ( io_acc_block_signal_op45 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( icmp_ln25_reg_231 );
    sensitive << ( io_acc_block_signal_op21 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);
    sensitive << ( icmp_ln25_reg_231_pp0_iter1_reg );
    sensitive << ( io_acc_block_signal_op45 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln25_fu_107_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_data_V_data_0_V_blk_n);
    sensitive << ( data_V_data_0_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln25_reg_231 );

    SC_METHOD(thread_data_V_data_0_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln25_reg_231 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_V_data_1_V_blk_n);
    sensitive << ( data_V_data_1_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln25_reg_231 );

    SC_METHOD(thread_data_V_data_1_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln25_reg_231 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_V_data_2_V_blk_n);
    sensitive << ( data_V_data_2_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln25_reg_231 );

    SC_METHOD(thread_data_V_data_2_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln25_reg_231 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_V_data_3_V_blk_n);
    sensitive << ( data_V_data_3_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln25_reg_231 );

    SC_METHOD(thread_data_V_data_3_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln25_reg_231 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i_fu_113_p2);
    sensitive << ( i_0_reg_96 );

    SC_METHOD(thread_icmp_ln25_fu_107_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_0_reg_96 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_io_acc_block_signal_op21);
    sensitive << ( data_V_data_0_V_empty_n );
    sensitive << ( data_V_data_1_V_empty_n );
    sensitive << ( data_V_data_2_V_empty_n );
    sensitive << ( data_V_data_3_V_empty_n );

    SC_METHOD(thread_io_acc_block_signal_op45);
    sensitive << ( res_V_data_0_V_full_n );
    sensitive << ( res_V_data_1_V_full_n );
    sensitive << ( res_V_data_2_V_full_n );
    sensitive << ( res_V_data_3_V_full_n );

    SC_METHOD(thread_res_V_data_0_V_blk_n);
    sensitive << ( res_V_data_0_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln25_reg_231_pp0_iter1_reg );

    SC_METHOD(thread_res_V_data_0_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln25_reg_231_pp0_iter1_reg );
    sensitive << ( trunc_ln_reg_240 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_V_data_0_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln25_reg_231_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_V_data_1_V_blk_n);
    sensitive << ( res_V_data_1_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln25_reg_231_pp0_iter1_reg );

    SC_METHOD(thread_res_V_data_1_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln25_reg_231_pp0_iter1_reg );
    sensitive << ( trunc_ln708_7_reg_245 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_V_data_1_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln25_reg_231_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_V_data_2_V_blk_n);
    sensitive << ( res_V_data_2_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln25_reg_231_pp0_iter1_reg );

    SC_METHOD(thread_res_V_data_2_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln25_reg_231_pp0_iter1_reg );
    sensitive << ( trunc_ln708_8_reg_250 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_V_data_2_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln25_reg_231_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_V_data_3_V_blk_n);
    sensitive << ( res_V_data_3_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln25_reg_231_pp0_iter1_reg );

    SC_METHOD(thread_res_V_data_3_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln25_reg_231_pp0_iter1_reg );
    sensitive << ( trunc_ln708_9_reg_255 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_V_data_3_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln25_reg_231_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_sext_ln1192_6_fu_155_p1);
    sensitive << ( data_V_data_1_V_dout );

    SC_METHOD(thread_sext_ln1192_7_fu_175_p1);
    sensitive << ( data_V_data_2_V_dout );

    SC_METHOD(thread_sext_ln1192_8_fu_195_p1);
    sensitive << ( data_V_data_3_V_dout );

    SC_METHOD(thread_sext_ln1192_fu_135_p1);
    sensitive << ( data_V_data_0_V_dout );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln25_fu_107_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_V_data_0_V_dout, "(port)data_V_data_0_V_dout");
    sc_trace(mVcdFile, data_V_data_0_V_empty_n, "(port)data_V_data_0_V_empty_n");
    sc_trace(mVcdFile, data_V_data_0_V_read, "(port)data_V_data_0_V_read");
    sc_trace(mVcdFile, data_V_data_1_V_dout, "(port)data_V_data_1_V_dout");
    sc_trace(mVcdFile, data_V_data_1_V_empty_n, "(port)data_V_data_1_V_empty_n");
    sc_trace(mVcdFile, data_V_data_1_V_read, "(port)data_V_data_1_V_read");
    sc_trace(mVcdFile, data_V_data_2_V_dout, "(port)data_V_data_2_V_dout");
    sc_trace(mVcdFile, data_V_data_2_V_empty_n, "(port)data_V_data_2_V_empty_n");
    sc_trace(mVcdFile, data_V_data_2_V_read, "(port)data_V_data_2_V_read");
    sc_trace(mVcdFile, data_V_data_3_V_dout, "(port)data_V_data_3_V_dout");
    sc_trace(mVcdFile, data_V_data_3_V_empty_n, "(port)data_V_data_3_V_empty_n");
    sc_trace(mVcdFile, data_V_data_3_V_read, "(port)data_V_data_3_V_read");
    sc_trace(mVcdFile, res_V_data_0_V_din, "(port)res_V_data_0_V_din");
    sc_trace(mVcdFile, res_V_data_0_V_full_n, "(port)res_V_data_0_V_full_n");
    sc_trace(mVcdFile, res_V_data_0_V_write, "(port)res_V_data_0_V_write");
    sc_trace(mVcdFile, res_V_data_1_V_din, "(port)res_V_data_1_V_din");
    sc_trace(mVcdFile, res_V_data_1_V_full_n, "(port)res_V_data_1_V_full_n");
    sc_trace(mVcdFile, res_V_data_1_V_write, "(port)res_V_data_1_V_write");
    sc_trace(mVcdFile, res_V_data_2_V_din, "(port)res_V_data_2_V_din");
    sc_trace(mVcdFile, res_V_data_2_V_full_n, "(port)res_V_data_2_V_full_n");
    sc_trace(mVcdFile, res_V_data_2_V_write, "(port)res_V_data_2_V_write");
    sc_trace(mVcdFile, res_V_data_3_V_din, "(port)res_V_data_3_V_din");
    sc_trace(mVcdFile, res_V_data_3_V_full_n, "(port)res_V_data_3_V_full_n");
    sc_trace(mVcdFile, res_V_data_3_V_write, "(port)res_V_data_3_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, data_V_data_0_V_blk_n, "data_V_data_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln25_reg_231, "icmp_ln25_reg_231");
    sc_trace(mVcdFile, data_V_data_1_V_blk_n, "data_V_data_1_V_blk_n");
    sc_trace(mVcdFile, data_V_data_2_V_blk_n, "data_V_data_2_V_blk_n");
    sc_trace(mVcdFile, data_V_data_3_V_blk_n, "data_V_data_3_V_blk_n");
    sc_trace(mVcdFile, res_V_data_0_V_blk_n, "res_V_data_0_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, icmp_ln25_reg_231_pp0_iter1_reg, "icmp_ln25_reg_231_pp0_iter1_reg");
    sc_trace(mVcdFile, res_V_data_1_V_blk_n, "res_V_data_1_V_blk_n");
    sc_trace(mVcdFile, res_V_data_2_V_blk_n, "res_V_data_2_V_blk_n");
    sc_trace(mVcdFile, res_V_data_3_V_blk_n, "res_V_data_3_V_blk_n");
    sc_trace(mVcdFile, i_0_reg_96, "i_0_reg_96");
    sc_trace(mVcdFile, icmp_ln25_fu_107_p2, "icmp_ln25_fu_107_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, io_acc_block_signal_op21, "io_acc_block_signal_op21");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, io_acc_block_signal_op45, "io_acc_block_signal_op45");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_fu_113_p2, "i_fu_113_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, trunc_ln_reg_240, "trunc_ln_reg_240");
    sc_trace(mVcdFile, trunc_ln708_7_reg_245, "trunc_ln708_7_reg_245");
    sc_trace(mVcdFile, trunc_ln708_8_reg_250, "trunc_ln708_8_reg_250");
    sc_trace(mVcdFile, trunc_ln708_9_reg_255, "trunc_ln708_9_reg_255");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, sext_ln1192_fu_135_p1, "sext_ln1192_fu_135_p1");
    sc_trace(mVcdFile, add_ln1192_fu_139_p2, "add_ln1192_fu_139_p2");
    sc_trace(mVcdFile, sext_ln1192_6_fu_155_p1, "sext_ln1192_6_fu_155_p1");
    sc_trace(mVcdFile, add_ln1192_7_fu_159_p2, "add_ln1192_7_fu_159_p2");
    sc_trace(mVcdFile, sext_ln1192_7_fu_175_p1, "sext_ln1192_7_fu_175_p1");
    sc_trace(mVcdFile, add_ln1192_8_fu_179_p2, "add_ln1192_8_fu_179_p2");
    sc_trace(mVcdFile, sext_ln1192_8_fu_195_p1, "sext_ln1192_8_fu_195_p1");
    sc_trace(mVcdFile, add_ln1192_9_fu_199_p2, "add_ln1192_9_fu_199_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::~normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_fu_107_p2.read()))) {
        i_0_reg_96 = i_fu_113_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_0_reg_96 = ap_const_lv13_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln25_reg_231 = icmp_ln25_fu_107_p2.read();
        icmp_ln25_reg_231_pp0_iter1_reg = icmp_ln25_reg_231.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln25_reg_231.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        trunc_ln708_7_reg_245 = add_ln1192_7_fu_159_p2.read().range(4, 2);
        trunc_ln708_8_reg_250 = add_ln1192_8_fu_179_p2.read().range(4, 2);
        trunc_ln708_9_reg_255 = add_ln1192_9_fu_199_p2.read().range(4, 2);
        trunc_ln_reg_240 = add_ln1192_fu_139_p2.read().range(4, 2);
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_add_ln1192_7_fu_159_p2() {
    add_ln1192_7_fu_159_p2 = (!sext_ln1192_6_fu_155_p1.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<5>(): (sc_bigint<5>(sext_ln1192_6_fu_155_p1.read()) + sc_bigint<5>(ap_const_lv5_1C));
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_add_ln1192_8_fu_179_p2() {
    add_ln1192_8_fu_179_p2 = (!sext_ln1192_7_fu_175_p1.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<5>(): (sc_bigint<5>(sext_ln1192_7_fu_175_p1.read()) + sc_bigint<5>(ap_const_lv5_1C));
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_add_ln1192_9_fu_199_p2() {
    add_ln1192_9_fu_199_p2 = (!sext_ln1192_8_fu_195_p1.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<5>(): (sc_bigint<5>(sext_ln1192_8_fu_195_p1.read()) + sc_bigint<5>(ap_const_lv5_1C));
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_add_ln1192_fu_139_p2() {
    add_ln1192_fu_139_p2 = (!sext_ln1192_fu_135_p1.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<5>(): (sc_bigint<5>(sext_ln1192_fu_135_p1.read()) + sc_bigint<5>(ap_const_lv5_1C));
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[2];
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln25_reg_231.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op21.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_231_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op45.read())));
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln25_reg_231.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op21.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_231_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op45.read())));
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln25_reg_231.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op21.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_231_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op45.read())));
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(icmp_ln25_reg_231.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op21.read()));
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_231_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op45.read()));
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln25_fu_107_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_data_V_data_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln25_reg_231.read(), ap_const_lv1_0))) {
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n.read();
    } else {
        data_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_data_V_data_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln25_reg_231.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_0_V_read = ap_const_logic_1;
    } else {
        data_V_data_0_V_read = ap_const_logic_0;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_data_V_data_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln25_reg_231.read(), ap_const_lv1_0))) {
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n.read();
    } else {
        data_V_data_1_V_blk_n = ap_const_logic_1;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_data_V_data_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln25_reg_231.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_1_V_read = ap_const_logic_1;
    } else {
        data_V_data_1_V_read = ap_const_logic_0;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_data_V_data_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln25_reg_231.read(), ap_const_lv1_0))) {
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n.read();
    } else {
        data_V_data_2_V_blk_n = ap_const_logic_1;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_data_V_data_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln25_reg_231.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_2_V_read = ap_const_logic_1;
    } else {
        data_V_data_2_V_read = ap_const_logic_0;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_data_V_data_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln25_reg_231.read(), ap_const_lv1_0))) {
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n.read();
    } else {
        data_V_data_3_V_blk_n = ap_const_logic_1;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_data_V_data_3_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln25_reg_231.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_3_V_read = ap_const_logic_1;
    } else {
        data_V_data_3_V_read = ap_const_logic_0;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_i_fu_113_p2() {
    i_fu_113_p2 = (!i_0_reg_96.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_biguint<13>(i_0_reg_96.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_icmp_ln25_fu_107_p2() {
    icmp_ln25_fu_107_p2 = (!i_0_reg_96.read().is_01() || !ap_const_lv13_1000.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_96.read() == ap_const_lv13_1000);
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_io_acc_block_signal_op21() {
    io_acc_block_signal_op21 = (data_V_data_0_V_empty_n.read() & data_V_data_1_V_empty_n.read() & data_V_data_2_V_empty_n.read() & data_V_data_3_V_empty_n.read());
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_io_acc_block_signal_op45() {
    io_acc_block_signal_op45 = (res_V_data_0_V_full_n.read() & res_V_data_1_V_full_n.read() & res_V_data_2_V_full_n.read() & res_V_data_3_V_full_n.read());
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_res_V_data_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_231_pp0_iter1_reg.read()))) {
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n.read();
    } else {
        res_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_res_V_data_0_V_din() {
    res_V_data_0_V_din = esl_sext<4,3>(trunc_ln_reg_240.read());
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_res_V_data_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_231_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_0_V_write = ap_const_logic_1;
    } else {
        res_V_data_0_V_write = ap_const_logic_0;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_res_V_data_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_231_pp0_iter1_reg.read()))) {
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n.read();
    } else {
        res_V_data_1_V_blk_n = ap_const_logic_1;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_res_V_data_1_V_din() {
    res_V_data_1_V_din = esl_sext<4,3>(trunc_ln708_7_reg_245.read());
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_res_V_data_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_231_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_1_V_write = ap_const_logic_1;
    } else {
        res_V_data_1_V_write = ap_const_logic_0;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_res_V_data_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_231_pp0_iter1_reg.read()))) {
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n.read();
    } else {
        res_V_data_2_V_blk_n = ap_const_logic_1;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_res_V_data_2_V_din() {
    res_V_data_2_V_din = esl_sext<4,3>(trunc_ln708_8_reg_250.read());
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_res_V_data_2_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_231_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_2_V_write = ap_const_logic_1;
    } else {
        res_V_data_2_V_write = ap_const_logic_0;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_res_V_data_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_231_pp0_iter1_reg.read()))) {
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n.read();
    } else {
        res_V_data_3_V_blk_n = ap_const_logic_1;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_res_V_data_3_V_din() {
    res_V_data_3_V_din = esl_sext<4,3>(trunc_ln708_9_reg_255.read());
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_res_V_data_3_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_231_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_3_V_write = ap_const_logic_1;
    } else {
        res_V_data_3_V_write = ap_const_logic_0;
    }
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_sext_ln1192_6_fu_155_p1() {
    sext_ln1192_6_fu_155_p1 = esl_sext<5,4>(data_V_data_1_V_dout.read());
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_sext_ln1192_7_fu_175_p1() {
    sext_ln1192_7_fu_175_p1 = esl_sext<5,4>(data_V_data_2_V_dout.read());
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_sext_ln1192_8_fu_195_p1() {
    sext_ln1192_8_fu_195_p1 = esl_sext<5,4>(data_V_data_3_V_dout.read());
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_sext_ln1192_fu_135_p1() {
    sext_ln1192_fu_135_p1 = esl_sext<5,4>(data_V_data_0_V_dout.read());
}

void normalize_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config24_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln25_fu_107_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln25_fu_107_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

