// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_config14_mult_0_0_0_0_0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        kernel_data_V_0,
        kernel_data_V_1479,
        kernel_data_V_2480,
        kernel_data_V_3481,
        kernel_data_V_4482,
        kernel_data_V_5483,
        kernel_data_V_6484,
        kernel_data_V_7485,
        kernel_data_V_8,
        kernel_data_V_9,
        kernel_data_V_10,
        kernel_data_V_11,
        kernel_data_V_12,
        kernel_data_V_13,
        kernel_data_V_14,
        kernel_data_V_15,
        kernel_data_V_16,
        kernel_data_V_17,
        kernel_data_V_18,
        kernel_data_V_19,
        kernel_data_V_20,
        kernel_data_V_21,
        kernel_data_V_22,
        kernel_data_V_23,
        kernel_data_V_24,
        kernel_data_V_25,
        kernel_data_V_26,
        kernel_data_V_27,
        kernel_data_V_28,
        kernel_data_V_29,
        kernel_data_V_30,
        kernel_data_V_31,
        kernel_data_V_32,
        kernel_data_V_33,
        kernel_data_V_34,
        kernel_data_V_35,
        kernel_data_V_36,
        kernel_data_V_37,
        kernel_data_V_38,
        kernel_data_V_39,
        kernel_data_V_40,
        kernel_data_V_41,
        kernel_data_V_42,
        kernel_data_V_43,
        kernel_data_V_44,
        kernel_data_V_45,
        kernel_data_V_46,
        kernel_data_V_47,
        kernel_data_V_48,
        kernel_data_V_49,
        kernel_data_V_50,
        kernel_data_V_51,
        kernel_data_V_52,
        kernel_data_V_53,
        kernel_data_V_54,
        kernel_data_V_55,
        kernel_data_V_56,
        kernel_data_V_57,
        kernel_data_V_58,
        kernel_data_V_59,
        kernel_data_V_60,
        kernel_data_V_61,
        kernel_data_V_62,
        kernel_data_V_63,
        kernel_data_V_64,
        kernel_data_V_65,
        kernel_data_V_66,
        kernel_data_V_67,
        kernel_data_V_68,
        kernel_data_V_69,
        kernel_data_V_70,
        kernel_data_V_71,
        kernel_data_V_72,
        kernel_data_V_73,
        kernel_data_V_74,
        kernel_data_V_75,
        kernel_data_V_76,
        kernel_data_V_77,
        kernel_data_V_78,
        kernel_data_V_79,
        kernel_data_V_80,
        kernel_data_V_81,
        kernel_data_V_82,
        kernel_data_V_83,
        kernel_data_V_84,
        kernel_data_V_85,
        kernel_data_V_86,
        kernel_data_V_87,
        kernel_data_V_88,
        kernel_data_V_89,
        kernel_data_V_90,
        kernel_data_V_91,
        kernel_data_V_92,
        kernel_data_V_93,
        kernel_data_V_94,
        kernel_data_V_95,
        kernel_data_V_96,
        kernel_data_V_97,
        kernel_data_V_98,
        kernel_data_V_99,
        kernel_data_V_100,
        kernel_data_V_101,
        kernel_data_V_102,
        kernel_data_V_103,
        kernel_data_V_104,
        kernel_data_V_105,
        kernel_data_V_106,
        kernel_data_V_107,
        kernel_data_V_108,
        kernel_data_V_109,
        kernel_data_V_110,
        kernel_data_V_111,
        kernel_data_V_112,
        kernel_data_V_113,
        kernel_data_V_114,
        kernel_data_V_115,
        kernel_data_V_116,
        kernel_data_V_117,
        kernel_data_V_118,
        kernel_data_V_119,
        kernel_data_V_120,
        kernel_data_V_121,
        kernel_data_V_122,
        kernel_data_V_123,
        kernel_data_V_124,
        kernel_data_V_125,
        kernel_data_V_126,
        kernel_data_V_127,
        kernel_data_V_128,
        kernel_data_V_129,
        kernel_data_V_130,
        kernel_data_V_131,
        kernel_data_V_132,
        kernel_data_V_133,
        kernel_data_V_134,
        kernel_data_V_135,
        kernel_data_V_136,
        kernel_data_V_137,
        kernel_data_V_138,
        kernel_data_V_139,
        kernel_data_V_140,
        kernel_data_V_141,
        kernel_data_V_142,
        kernel_data_V_143,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] kernel_data_V_0;
input  [15:0] kernel_data_V_1479;
input  [15:0] kernel_data_V_2480;
input  [15:0] kernel_data_V_3481;
input  [15:0] kernel_data_V_4482;
input  [15:0] kernel_data_V_5483;
input  [15:0] kernel_data_V_6484;
input  [15:0] kernel_data_V_7485;
input  [15:0] kernel_data_V_8;
input  [15:0] kernel_data_V_9;
input  [15:0] kernel_data_V_10;
input  [15:0] kernel_data_V_11;
input  [15:0] kernel_data_V_12;
input  [15:0] kernel_data_V_13;
input  [15:0] kernel_data_V_14;
input  [15:0] kernel_data_V_15;
input  [15:0] kernel_data_V_16;
input  [15:0] kernel_data_V_17;
input  [15:0] kernel_data_V_18;
input  [15:0] kernel_data_V_19;
input  [15:0] kernel_data_V_20;
input  [15:0] kernel_data_V_21;
input  [15:0] kernel_data_V_22;
input  [15:0] kernel_data_V_23;
input  [15:0] kernel_data_V_24;
input  [15:0] kernel_data_V_25;
input  [15:0] kernel_data_V_26;
input  [15:0] kernel_data_V_27;
input  [15:0] kernel_data_V_28;
input  [15:0] kernel_data_V_29;
input  [15:0] kernel_data_V_30;
input  [15:0] kernel_data_V_31;
input  [15:0] kernel_data_V_32;
input  [15:0] kernel_data_V_33;
input  [15:0] kernel_data_V_34;
input  [15:0] kernel_data_V_35;
input  [15:0] kernel_data_V_36;
input  [15:0] kernel_data_V_37;
input  [15:0] kernel_data_V_38;
input  [15:0] kernel_data_V_39;
input  [15:0] kernel_data_V_40;
input  [15:0] kernel_data_V_41;
input  [15:0] kernel_data_V_42;
input  [15:0] kernel_data_V_43;
input  [15:0] kernel_data_V_44;
input  [15:0] kernel_data_V_45;
input  [15:0] kernel_data_V_46;
input  [15:0] kernel_data_V_47;
input  [15:0] kernel_data_V_48;
input  [15:0] kernel_data_V_49;
input  [15:0] kernel_data_V_50;
input  [15:0] kernel_data_V_51;
input  [15:0] kernel_data_V_52;
input  [15:0] kernel_data_V_53;
input  [15:0] kernel_data_V_54;
input  [15:0] kernel_data_V_55;
input  [15:0] kernel_data_V_56;
input  [15:0] kernel_data_V_57;
input  [15:0] kernel_data_V_58;
input  [15:0] kernel_data_V_59;
input  [15:0] kernel_data_V_60;
input  [15:0] kernel_data_V_61;
input  [15:0] kernel_data_V_62;
input  [15:0] kernel_data_V_63;
input  [15:0] kernel_data_V_64;
input  [15:0] kernel_data_V_65;
input  [15:0] kernel_data_V_66;
input  [15:0] kernel_data_V_67;
input  [15:0] kernel_data_V_68;
input  [15:0] kernel_data_V_69;
input  [15:0] kernel_data_V_70;
input  [15:0] kernel_data_V_71;
input  [15:0] kernel_data_V_72;
input  [15:0] kernel_data_V_73;
input  [15:0] kernel_data_V_74;
input  [15:0] kernel_data_V_75;
input  [15:0] kernel_data_V_76;
input  [15:0] kernel_data_V_77;
input  [15:0] kernel_data_V_78;
input  [15:0] kernel_data_V_79;
input  [15:0] kernel_data_V_80;
input  [15:0] kernel_data_V_81;
input  [15:0] kernel_data_V_82;
input  [15:0] kernel_data_V_83;
input  [15:0] kernel_data_V_84;
input  [15:0] kernel_data_V_85;
input  [15:0] kernel_data_V_86;
input  [15:0] kernel_data_V_87;
input  [15:0] kernel_data_V_88;
input  [15:0] kernel_data_V_89;
input  [15:0] kernel_data_V_90;
input  [15:0] kernel_data_V_91;
input  [15:0] kernel_data_V_92;
input  [15:0] kernel_data_V_93;
input  [15:0] kernel_data_V_94;
input  [15:0] kernel_data_V_95;
input  [15:0] kernel_data_V_96;
input  [15:0] kernel_data_V_97;
input  [15:0] kernel_data_V_98;
input  [15:0] kernel_data_V_99;
input  [15:0] kernel_data_V_100;
input  [15:0] kernel_data_V_101;
input  [15:0] kernel_data_V_102;
input  [15:0] kernel_data_V_103;
input  [15:0] kernel_data_V_104;
input  [15:0] kernel_data_V_105;
input  [15:0] kernel_data_V_106;
input  [15:0] kernel_data_V_107;
input  [15:0] kernel_data_V_108;
input  [15:0] kernel_data_V_109;
input  [15:0] kernel_data_V_110;
input  [15:0] kernel_data_V_111;
input  [15:0] kernel_data_V_112;
input  [15:0] kernel_data_V_113;
input  [15:0] kernel_data_V_114;
input  [15:0] kernel_data_V_115;
input  [15:0] kernel_data_V_116;
input  [15:0] kernel_data_V_117;
input  [15:0] kernel_data_V_118;
input  [15:0] kernel_data_V_119;
input  [15:0] kernel_data_V_120;
input  [15:0] kernel_data_V_121;
input  [15:0] kernel_data_V_122;
input  [15:0] kernel_data_V_123;
input  [15:0] kernel_data_V_124;
input  [15:0] kernel_data_V_125;
input  [15:0] kernel_data_V_126;
input  [15:0] kernel_data_V_127;
input  [15:0] kernel_data_V_128;
input  [15:0] kernel_data_V_129;
input  [15:0] kernel_data_V_130;
input  [15:0] kernel_data_V_131;
input  [15:0] kernel_data_V_132;
input  [15:0] kernel_data_V_133;
input  [15:0] kernel_data_V_134;
input  [15:0] kernel_data_V_135;
input  [15:0] kernel_data_V_136;
input  [15:0] kernel_data_V_137;
input  [15:0] kernel_data_V_138;
input  [15:0] kernel_data_V_139;
input  [15:0] kernel_data_V_140;
input  [15:0] kernel_data_V_141;
input  [15:0] kernel_data_V_142;
input  [15:0] kernel_data_V_143;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] ap_return_0;
reg[15:0] ap_return_1;
reg[15:0] ap_return_2;
reg[15:0] ap_return_3;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln135_fu_714_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
wire   [9:0] outidx_address0;
reg    outidx_ce0;
wire   [1:0] outidx_q0;
wire   [9:0] w14_V_address0;
reg    w14_V_ce0;
wire   [10:0] w14_V_q0;
reg   [31:0] in_index_0_i30_reg_386;
reg   [9:0] w_index29_reg_401;
reg   [15:0] acc_0_V_020_reg_415;
reg   [15:0] acc_1_V_019_reg_430;
reg   [15:0] acc_2_V_018_reg_445;
reg   [15:0] acc_3_V_017_reg_460;
reg   [15:0] res_0_V_write_assign28_reg_490;
reg   [15:0] res_1_V_write_assign26_reg_504;
reg   [15:0] res_2_V_write_assign24_reg_518;
reg   [15:0] res_3_V_write_assign22_reg_532;
wire   [9:0] w_index_fu_696_p2;
reg   [9:0] w_index_reg_1678;
wire   [31:0] in_index_fu_702_p2;
reg   [31:0] in_index_reg_1683;
wire   [0:0] icmp_ln154_fu_708_p2;
reg   [0:0] icmp_ln154_reg_1688;
reg   [0:0] icmp_ln135_reg_1693;
reg   [0:0] icmp_ln135_reg_1693_pp0_iter1_reg;
reg   [0:0] icmp_ln135_reg_1693_pp0_iter2_reg;
reg   [0:0] icmp_ln135_reg_1693_pp0_iter3_reg;
reg   [0:0] icmp_ln135_reg_1693_pp0_iter4_reg;
reg   [0:0] icmp_ln135_reg_1693_pp0_iter5_reg;
reg   [1:0] out_index_reg_1697;
reg   [1:0] out_index_reg_1697_pp0_iter2_reg;
reg   [1:0] out_index_reg_1697_pp0_iter3_reg;
reg   [1:0] out_index_reg_1697_pp0_iter4_reg;
reg   [1:0] out_index_reg_1697_pp0_iter5_reg;
wire   [15:0] tmp_fu_1300_p146;
reg  signed [15:0] tmp_reg_1702;
reg  signed [10:0] w14_V_load_reg_1707;
wire   [31:0] select_ln154_fu_1594_p3;
reg    ap_enable_reg_pp0_iter1;
wire  signed [25:0] grp_fu_1662_p2;
reg  signed [25:0] r_V_reg_1727;
wire   [15:0] acc_0_V_fu_1628_p2;
reg   [15:0] acc_0_V_reg_1732;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg   [31:0] ap_phi_mux_in_index_0_i30_phi_fu_390_p6;
wire    ap_block_pp0_stage0;
reg   [9:0] ap_phi_mux_w_index29_phi_fu_405_p6;
reg   [15:0] ap_phi_mux_acc_0_V_020_phi_fu_419_p6;
reg   [15:0] ap_phi_mux_acc_0_V_1_phi_fu_604_p8;
reg   [15:0] ap_phi_mux_acc_1_V_019_phi_fu_434_p6;
reg   [15:0] ap_phi_mux_acc_1_V_1_phi_fu_586_p8;
reg   [15:0] ap_phi_mux_acc_2_V_018_phi_fu_449_p6;
reg   [15:0] ap_phi_mux_acc_2_V_1_phi_fu_568_p8;
reg   [15:0] ap_phi_mux_acc_3_V_017_phi_fu_464_p6;
reg   [15:0] ap_phi_mux_acc_3_V_1_phi_fu_550_p8;
reg   [15:0] ap_phi_mux_p_0_01_i_phi_fu_676_p8;
reg   [15:0] ap_phi_mux_p_0_13_i_phi_fu_658_p8;
reg   [15:0] ap_phi_mux_p_0_25_i_phi_fu_640_p8;
reg   [15:0] ap_phi_mux_p_0_37_i_phi_fu_622_p8;
wire   [15:0] ap_phi_reg_pp0_iter6_acc_3_V_1_reg_546;
wire   [15:0] ap_phi_reg_pp0_iter6_acc_2_V_1_reg_564;
wire   [15:0] ap_phi_reg_pp0_iter6_acc_1_V_1_reg_582;
wire   [15:0] ap_phi_reg_pp0_iter6_acc_0_V_1_reg_600;
wire   [15:0] ap_phi_reg_pp0_iter6_p_0_37_i_reg_618;
wire   [15:0] ap_phi_reg_pp0_iter6_p_0_25_i_reg_636;
wire   [15:0] ap_phi_reg_pp0_iter6_p_0_13_i_reg_654;
wire   [15:0] ap_phi_reg_pp0_iter6_p_0_01_i_reg_672;
wire   [63:0] zext_ln139_fu_690_p1;
wire   [7:0] tmp_fu_1300_p145;
wire   [15:0] tmp_s_fu_1615_p6;
wire   [15:0] trunc_ln2_fu_1606_p4;
reg    grp_fu_1662_ce;
reg   [15:0] ap_return_0_preg;
reg   [15:0] ap_return_1_preg;
reg   [15:0] ap_return_2_preg;
reg   [15:0] ap_return_3_preg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_0to5;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_306;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_return_0_preg = 16'd0;
#0 ap_return_1_preg = 16'd0;
#0 ap_return_2_preg = 16'd0;
#0 ap_return_3_preg = 16'd0;
end

dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_config14_mult_0_0_0_0_0_outidx #(
    .DataWidth( 2 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
outidx_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(outidx_address0),
    .ce0(outidx_ce0),
    .q0(outidx_q0)
);

dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_config14_mult_0_0_0_0_0_w14_V #(
    .DataWidth( 11 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
w14_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w14_V_address0),
    .ce0(w14_V_ce0),
    .q0(w14_V_q0)
);

myproject_axi_mux_1448_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .din65_WIDTH( 16 ),
    .din66_WIDTH( 16 ),
    .din67_WIDTH( 16 ),
    .din68_WIDTH( 16 ),
    .din69_WIDTH( 16 ),
    .din70_WIDTH( 16 ),
    .din71_WIDTH( 16 ),
    .din72_WIDTH( 16 ),
    .din73_WIDTH( 16 ),
    .din74_WIDTH( 16 ),
    .din75_WIDTH( 16 ),
    .din76_WIDTH( 16 ),
    .din77_WIDTH( 16 ),
    .din78_WIDTH( 16 ),
    .din79_WIDTH( 16 ),
    .din80_WIDTH( 16 ),
    .din81_WIDTH( 16 ),
    .din82_WIDTH( 16 ),
    .din83_WIDTH( 16 ),
    .din84_WIDTH( 16 ),
    .din85_WIDTH( 16 ),
    .din86_WIDTH( 16 ),
    .din87_WIDTH( 16 ),
    .din88_WIDTH( 16 ),
    .din89_WIDTH( 16 ),
    .din90_WIDTH( 16 ),
    .din91_WIDTH( 16 ),
    .din92_WIDTH( 16 ),
    .din93_WIDTH( 16 ),
    .din94_WIDTH( 16 ),
    .din95_WIDTH( 16 ),
    .din96_WIDTH( 16 ),
    .din97_WIDTH( 16 ),
    .din98_WIDTH( 16 ),
    .din99_WIDTH( 16 ),
    .din100_WIDTH( 16 ),
    .din101_WIDTH( 16 ),
    .din102_WIDTH( 16 ),
    .din103_WIDTH( 16 ),
    .din104_WIDTH( 16 ),
    .din105_WIDTH( 16 ),
    .din106_WIDTH( 16 ),
    .din107_WIDTH( 16 ),
    .din108_WIDTH( 16 ),
    .din109_WIDTH( 16 ),
    .din110_WIDTH( 16 ),
    .din111_WIDTH( 16 ),
    .din112_WIDTH( 16 ),
    .din113_WIDTH( 16 ),
    .din114_WIDTH( 16 ),
    .din115_WIDTH( 16 ),
    .din116_WIDTH( 16 ),
    .din117_WIDTH( 16 ),
    .din118_WIDTH( 16 ),
    .din119_WIDTH( 16 ),
    .din120_WIDTH( 16 ),
    .din121_WIDTH( 16 ),
    .din122_WIDTH( 16 ),
    .din123_WIDTH( 16 ),
    .din124_WIDTH( 16 ),
    .din125_WIDTH( 16 ),
    .din126_WIDTH( 16 ),
    .din127_WIDTH( 16 ),
    .din128_WIDTH( 16 ),
    .din129_WIDTH( 16 ),
    .din130_WIDTH( 16 ),
    .din131_WIDTH( 16 ),
    .din132_WIDTH( 16 ),
    .din133_WIDTH( 16 ),
    .din134_WIDTH( 16 ),
    .din135_WIDTH( 16 ),
    .din136_WIDTH( 16 ),
    .din137_WIDTH( 16 ),
    .din138_WIDTH( 16 ),
    .din139_WIDTH( 16 ),
    .din140_WIDTH( 16 ),
    .din141_WIDTH( 16 ),
    .din142_WIDTH( 16 ),
    .din143_WIDTH( 16 ),
    .din144_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
myproject_axi_mux_1448_16_1_1_U1103(
    .din0(kernel_data_V_0),
    .din1(kernel_data_V_1479),
    .din2(kernel_data_V_2480),
    .din3(kernel_data_V_3481),
    .din4(kernel_data_V_4482),
    .din5(kernel_data_V_5483),
    .din6(kernel_data_V_6484),
    .din7(kernel_data_V_7485),
    .din8(kernel_data_V_8),
    .din9(kernel_data_V_9),
    .din10(kernel_data_V_10),
    .din11(kernel_data_V_11),
    .din12(kernel_data_V_12),
    .din13(kernel_data_V_13),
    .din14(kernel_data_V_14),
    .din15(kernel_data_V_15),
    .din16(kernel_data_V_16),
    .din17(kernel_data_V_17),
    .din18(kernel_data_V_18),
    .din19(kernel_data_V_19),
    .din20(kernel_data_V_20),
    .din21(kernel_data_V_21),
    .din22(kernel_data_V_22),
    .din23(kernel_data_V_23),
    .din24(kernel_data_V_24),
    .din25(kernel_data_V_25),
    .din26(kernel_data_V_26),
    .din27(kernel_data_V_27),
    .din28(kernel_data_V_28),
    .din29(kernel_data_V_29),
    .din30(kernel_data_V_30),
    .din31(kernel_data_V_31),
    .din32(kernel_data_V_32),
    .din33(kernel_data_V_33),
    .din34(kernel_data_V_34),
    .din35(kernel_data_V_35),
    .din36(kernel_data_V_36),
    .din37(kernel_data_V_37),
    .din38(kernel_data_V_38),
    .din39(kernel_data_V_39),
    .din40(kernel_data_V_40),
    .din41(kernel_data_V_41),
    .din42(kernel_data_V_42),
    .din43(kernel_data_V_43),
    .din44(kernel_data_V_44),
    .din45(kernel_data_V_45),
    .din46(kernel_data_V_46),
    .din47(kernel_data_V_47),
    .din48(kernel_data_V_48),
    .din49(kernel_data_V_49),
    .din50(kernel_data_V_50),
    .din51(kernel_data_V_51),
    .din52(kernel_data_V_52),
    .din53(kernel_data_V_53),
    .din54(kernel_data_V_54),
    .din55(kernel_data_V_55),
    .din56(kernel_data_V_56),
    .din57(kernel_data_V_57),
    .din58(kernel_data_V_58),
    .din59(kernel_data_V_59),
    .din60(kernel_data_V_60),
    .din61(kernel_data_V_61),
    .din62(kernel_data_V_62),
    .din63(kernel_data_V_63),
    .din64(kernel_data_V_64),
    .din65(kernel_data_V_65),
    .din66(kernel_data_V_66),
    .din67(kernel_data_V_67),
    .din68(kernel_data_V_68),
    .din69(kernel_data_V_69),
    .din70(kernel_data_V_70),
    .din71(kernel_data_V_71),
    .din72(kernel_data_V_72),
    .din73(kernel_data_V_73),
    .din74(kernel_data_V_74),
    .din75(kernel_data_V_75),
    .din76(kernel_data_V_76),
    .din77(kernel_data_V_77),
    .din78(kernel_data_V_78),
    .din79(kernel_data_V_79),
    .din80(kernel_data_V_80),
    .din81(kernel_data_V_81),
    .din82(kernel_data_V_82),
    .din83(kernel_data_V_83),
    .din84(kernel_data_V_84),
    .din85(kernel_data_V_85),
    .din86(kernel_data_V_86),
    .din87(kernel_data_V_87),
    .din88(kernel_data_V_88),
    .din89(kernel_data_V_89),
    .din90(kernel_data_V_90),
    .din91(kernel_data_V_91),
    .din92(kernel_data_V_92),
    .din93(kernel_data_V_93),
    .din94(kernel_data_V_94),
    .din95(kernel_data_V_95),
    .din96(kernel_data_V_96),
    .din97(kernel_data_V_97),
    .din98(kernel_data_V_98),
    .din99(kernel_data_V_99),
    .din100(kernel_data_V_100),
    .din101(kernel_data_V_101),
    .din102(kernel_data_V_102),
    .din103(kernel_data_V_103),
    .din104(kernel_data_V_104),
    .din105(kernel_data_V_105),
    .din106(kernel_data_V_106),
    .din107(kernel_data_V_107),
    .din108(kernel_data_V_108),
    .din109(kernel_data_V_109),
    .din110(kernel_data_V_110),
    .din111(kernel_data_V_111),
    .din112(kernel_data_V_112),
    .din113(kernel_data_V_113),
    .din114(kernel_data_V_114),
    .din115(kernel_data_V_115),
    .din116(kernel_data_V_116),
    .din117(kernel_data_V_117),
    .din118(kernel_data_V_118),
    .din119(kernel_data_V_119),
    .din120(kernel_data_V_120),
    .din121(kernel_data_V_121),
    .din122(kernel_data_V_122),
    .din123(kernel_data_V_123),
    .din124(kernel_data_V_124),
    .din125(kernel_data_V_125),
    .din126(kernel_data_V_126),
    .din127(kernel_data_V_127),
    .din128(kernel_data_V_128),
    .din129(kernel_data_V_129),
    .din130(kernel_data_V_130),
    .din131(kernel_data_V_131),
    .din132(kernel_data_V_132),
    .din133(kernel_data_V_133),
    .din134(kernel_data_V_134),
    .din135(kernel_data_V_135),
    .din136(kernel_data_V_136),
    .din137(kernel_data_V_137),
    .din138(kernel_data_V_138),
    .din139(kernel_data_V_139),
    .din140(kernel_data_V_140),
    .din141(kernel_data_V_141),
    .din142(kernel_data_V_142),
    .din143(kernel_data_V_143),
    .din144(tmp_fu_1300_p145),
    .dout(tmp_fu_1300_p146)
);

myproject_axi_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
myproject_axi_mux_42_16_1_1_U1104(
    .din0(ap_phi_mux_acc_0_V_020_phi_fu_419_p6),
    .din1(ap_phi_mux_acc_1_V_019_phi_fu_434_p6),
    .din2(ap_phi_mux_acc_2_V_018_phi_fu_449_p6),
    .din3(ap_phi_mux_acc_3_V_017_phi_fu_464_p6),
    .din4(out_index_reg_1697_pp0_iter4_reg),
    .dout(tmp_s_fu_1615_p6)
);

myproject_axi_mul_mul_11s_16s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_axi_mul_mul_11s_16s_26_3_1_U1105(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(w14_V_load_reg_1707),
    .din1(tmp_reg_1702),
    .ce(grp_fu_1662_ce),
    .dout(grp_fu_1662_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
            ap_return_0_preg <= ap_phi_mux_p_0_01_i_phi_fu_676_p8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
            ap_return_1_preg <= ap_phi_mux_p_0_13_i_phi_fu_658_p8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
            ap_return_2_preg <= ap_phi_mux_p_0_25_i_phi_fu_640_p8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
            ap_return_3_preg <= ap_phi_mux_p_0_37_i_phi_fu_622_p8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        acc_0_V_020_reg_415 <= ap_phi_mux_acc_0_V_1_phi_fu_604_p8;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_0_V_020_reg_415 <= 16'd65533;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        acc_1_V_019_reg_430 <= ap_phi_mux_acc_1_V_1_phi_fu_586_p8;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_1_V_019_reg_430 <= 16'd3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        acc_2_V_018_reg_445 <= ap_phi_mux_acc_2_V_1_phi_fu_568_p8;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_2_V_018_reg_445 <= 16'd166;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        acc_3_V_017_reg_460 <= ap_phi_mux_acc_3_V_1_phi_fu_550_p8;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_3_V_017_reg_460 <= 16'd163;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        in_index_0_i30_reg_386 <= select_ln154_fu_1594_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_index_0_i30_reg_386 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        res_0_V_write_assign28_reg_490 <= ap_phi_mux_p_0_01_i_phi_fu_676_p8;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_0_V_write_assign28_reg_490 <= 16'd65533;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        res_1_V_write_assign26_reg_504 <= ap_phi_mux_p_0_13_i_phi_fu_658_p8;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_1_V_write_assign26_reg_504 <= 16'd3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        res_2_V_write_assign24_reg_518 <= ap_phi_mux_p_0_25_i_phi_fu_640_p8;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_2_V_write_assign24_reg_518 <= 16'd166;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        res_3_V_write_assign22_reg_532 <= ap_phi_mux_p_0_37_i_phi_fu_622_p8;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_3_V_write_assign22_reg_532 <= 16'd163;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        w_index29_reg_401 <= w_index_reg_1678;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        w_index29_reg_401 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        acc_0_V_reg_1732 <= acc_0_V_fu_1628_p2;
        icmp_ln135_reg_1693_pp0_iter2_reg <= icmp_ln135_reg_1693_pp0_iter1_reg;
        icmp_ln135_reg_1693_pp0_iter3_reg <= icmp_ln135_reg_1693_pp0_iter2_reg;
        icmp_ln135_reg_1693_pp0_iter4_reg <= icmp_ln135_reg_1693_pp0_iter3_reg;
        icmp_ln135_reg_1693_pp0_iter5_reg <= icmp_ln135_reg_1693_pp0_iter4_reg;
        out_index_reg_1697_pp0_iter2_reg <= out_index_reg_1697;
        out_index_reg_1697_pp0_iter3_reg <= out_index_reg_1697_pp0_iter2_reg;
        out_index_reg_1697_pp0_iter4_reg <= out_index_reg_1697_pp0_iter3_reg;
        out_index_reg_1697_pp0_iter5_reg <= out_index_reg_1697_pp0_iter4_reg;
        r_V_reg_1727 <= grp_fu_1662_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln135_reg_1693 <= icmp_ln135_fu_714_p2;
        icmp_ln135_reg_1693_pp0_iter1_reg <= icmp_ln135_reg_1693;
        icmp_ln154_reg_1688 <= icmp_ln154_fu_708_p2;
        in_index_reg_1683 <= in_index_fu_702_p2;
        out_index_reg_1697 <= outidx_q0;
        tmp_reg_1702 <= tmp_fu_1300_p146;
        w14_V_load_reg_1707 <= w14_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_index_reg_1678 <= w_index_fu_696_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_0to5 = 1'b1;
    end else begin
        ap_idle_pp0_0to5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        if ((icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1)) begin
            ap_phi_mux_acc_0_V_020_phi_fu_419_p6 = 16'd65533;
        end else if ((icmp_ln135_reg_1693_pp0_iter5_reg == 1'd0)) begin
            ap_phi_mux_acc_0_V_020_phi_fu_419_p6 = ap_phi_mux_acc_0_V_1_phi_fu_604_p8;
        end else begin
            ap_phi_mux_acc_0_V_020_phi_fu_419_p6 = acc_0_V_020_reg_415;
        end
    end else begin
        ap_phi_mux_acc_0_V_020_phi_fu_419_p6 = acc_0_V_020_reg_415;
    end
end

always @ (*) begin
    if ((out_index_reg_1697_pp0_iter5_reg == 2'd0)) begin
        ap_phi_mux_acc_0_V_1_phi_fu_604_p8 = acc_0_V_reg_1732;
    end else if (((out_index_reg_1697_pp0_iter5_reg == 2'd1) | (out_index_reg_1697_pp0_iter5_reg == 2'd2) | (out_index_reg_1697_pp0_iter5_reg == 2'd3))) begin
        ap_phi_mux_acc_0_V_1_phi_fu_604_p8 = acc_0_V_020_reg_415;
    end else begin
        ap_phi_mux_acc_0_V_1_phi_fu_604_p8 = ap_phi_reg_pp0_iter6_acc_0_V_1_reg_600;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        if ((icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1)) begin
            ap_phi_mux_acc_1_V_019_phi_fu_434_p6 = 16'd3;
        end else if ((icmp_ln135_reg_1693_pp0_iter5_reg == 1'd0)) begin
            ap_phi_mux_acc_1_V_019_phi_fu_434_p6 = ap_phi_mux_acc_1_V_1_phi_fu_586_p8;
        end else begin
            ap_phi_mux_acc_1_V_019_phi_fu_434_p6 = acc_1_V_019_reg_430;
        end
    end else begin
        ap_phi_mux_acc_1_V_019_phi_fu_434_p6 = acc_1_V_019_reg_430;
    end
end

always @ (*) begin
    if ((out_index_reg_1697_pp0_iter5_reg == 2'd1)) begin
        ap_phi_mux_acc_1_V_1_phi_fu_586_p8 = acc_0_V_reg_1732;
    end else if (((out_index_reg_1697_pp0_iter5_reg == 2'd0) | (out_index_reg_1697_pp0_iter5_reg == 2'd2) | (out_index_reg_1697_pp0_iter5_reg == 2'd3))) begin
        ap_phi_mux_acc_1_V_1_phi_fu_586_p8 = acc_1_V_019_reg_430;
    end else begin
        ap_phi_mux_acc_1_V_1_phi_fu_586_p8 = ap_phi_reg_pp0_iter6_acc_1_V_1_reg_582;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        if ((icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1)) begin
            ap_phi_mux_acc_2_V_018_phi_fu_449_p6 = 16'd166;
        end else if ((icmp_ln135_reg_1693_pp0_iter5_reg == 1'd0)) begin
            ap_phi_mux_acc_2_V_018_phi_fu_449_p6 = ap_phi_mux_acc_2_V_1_phi_fu_568_p8;
        end else begin
            ap_phi_mux_acc_2_V_018_phi_fu_449_p6 = acc_2_V_018_reg_445;
        end
    end else begin
        ap_phi_mux_acc_2_V_018_phi_fu_449_p6 = acc_2_V_018_reg_445;
    end
end

always @ (*) begin
    if ((out_index_reg_1697_pp0_iter5_reg == 2'd2)) begin
        ap_phi_mux_acc_2_V_1_phi_fu_568_p8 = acc_0_V_reg_1732;
    end else if (((out_index_reg_1697_pp0_iter5_reg == 2'd0) | (out_index_reg_1697_pp0_iter5_reg == 2'd1) | (out_index_reg_1697_pp0_iter5_reg == 2'd3))) begin
        ap_phi_mux_acc_2_V_1_phi_fu_568_p8 = acc_2_V_018_reg_445;
    end else begin
        ap_phi_mux_acc_2_V_1_phi_fu_568_p8 = ap_phi_reg_pp0_iter6_acc_2_V_1_reg_564;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        if ((icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1)) begin
            ap_phi_mux_acc_3_V_017_phi_fu_464_p6 = 16'd163;
        end else if ((icmp_ln135_reg_1693_pp0_iter5_reg == 1'd0)) begin
            ap_phi_mux_acc_3_V_017_phi_fu_464_p6 = ap_phi_mux_acc_3_V_1_phi_fu_550_p8;
        end else begin
            ap_phi_mux_acc_3_V_017_phi_fu_464_p6 = acc_3_V_017_reg_460;
        end
    end else begin
        ap_phi_mux_acc_3_V_017_phi_fu_464_p6 = acc_3_V_017_reg_460;
    end
end

always @ (*) begin
    if (((out_index_reg_1697_pp0_iter5_reg == 2'd0) | (out_index_reg_1697_pp0_iter5_reg == 2'd1) | (out_index_reg_1697_pp0_iter5_reg == 2'd2))) begin
        ap_phi_mux_acc_3_V_1_phi_fu_550_p8 = acc_3_V_017_reg_460;
    end else if ((out_index_reg_1697_pp0_iter5_reg == 2'd3)) begin
        ap_phi_mux_acc_3_V_1_phi_fu_550_p8 = acc_0_V_reg_1732;
    end else begin
        ap_phi_mux_acc_3_V_1_phi_fu_550_p8 = ap_phi_reg_pp0_iter6_acc_3_V_1_reg_546;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_306)) begin
        if ((icmp_ln135_reg_1693 == 1'd1)) begin
            ap_phi_mux_in_index_0_i30_phi_fu_390_p6 = 32'd0;
        end else if ((icmp_ln135_reg_1693 == 1'd0)) begin
            ap_phi_mux_in_index_0_i30_phi_fu_390_p6 = select_ln154_fu_1594_p3;
        end else begin
            ap_phi_mux_in_index_0_i30_phi_fu_390_p6 = in_index_0_i30_reg_386;
        end
    end else begin
        ap_phi_mux_in_index_0_i30_phi_fu_390_p6 = in_index_0_i30_reg_386;
    end
end

always @ (*) begin
    if ((out_index_reg_1697_pp0_iter5_reg == 2'd0)) begin
        ap_phi_mux_p_0_01_i_phi_fu_676_p8 = acc_0_V_reg_1732;
    end else if (((out_index_reg_1697_pp0_iter5_reg == 2'd1) | (out_index_reg_1697_pp0_iter5_reg == 2'd2) | (out_index_reg_1697_pp0_iter5_reg == 2'd3))) begin
        ap_phi_mux_p_0_01_i_phi_fu_676_p8 = res_0_V_write_assign28_reg_490;
    end else begin
        ap_phi_mux_p_0_01_i_phi_fu_676_p8 = ap_phi_reg_pp0_iter6_p_0_01_i_reg_672;
    end
end

always @ (*) begin
    if ((out_index_reg_1697_pp0_iter5_reg == 2'd1)) begin
        ap_phi_mux_p_0_13_i_phi_fu_658_p8 = acc_0_V_reg_1732;
    end else if (((out_index_reg_1697_pp0_iter5_reg == 2'd0) | (out_index_reg_1697_pp0_iter5_reg == 2'd2) | (out_index_reg_1697_pp0_iter5_reg == 2'd3))) begin
        ap_phi_mux_p_0_13_i_phi_fu_658_p8 = res_1_V_write_assign26_reg_504;
    end else begin
        ap_phi_mux_p_0_13_i_phi_fu_658_p8 = ap_phi_reg_pp0_iter6_p_0_13_i_reg_654;
    end
end

always @ (*) begin
    if ((out_index_reg_1697_pp0_iter5_reg == 2'd2)) begin
        ap_phi_mux_p_0_25_i_phi_fu_640_p8 = acc_0_V_reg_1732;
    end else if (((out_index_reg_1697_pp0_iter5_reg == 2'd0) | (out_index_reg_1697_pp0_iter5_reg == 2'd1) | (out_index_reg_1697_pp0_iter5_reg == 2'd3))) begin
        ap_phi_mux_p_0_25_i_phi_fu_640_p8 = res_2_V_write_assign24_reg_518;
    end else begin
        ap_phi_mux_p_0_25_i_phi_fu_640_p8 = ap_phi_reg_pp0_iter6_p_0_25_i_reg_636;
    end
end

always @ (*) begin
    if (((out_index_reg_1697_pp0_iter5_reg == 2'd0) | (out_index_reg_1697_pp0_iter5_reg == 2'd1) | (out_index_reg_1697_pp0_iter5_reg == 2'd2))) begin
        ap_phi_mux_p_0_37_i_phi_fu_622_p8 = res_3_V_write_assign22_reg_532;
    end else if ((out_index_reg_1697_pp0_iter5_reg == 2'd3)) begin
        ap_phi_mux_p_0_37_i_phi_fu_622_p8 = acc_0_V_reg_1732;
    end else begin
        ap_phi_mux_p_0_37_i_phi_fu_622_p8 = ap_phi_reg_pp0_iter6_p_0_37_i_reg_618;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_306)) begin
        if ((icmp_ln135_reg_1693 == 1'd1)) begin
            ap_phi_mux_w_index29_phi_fu_405_p6 = 10'd0;
        end else if ((icmp_ln135_reg_1693 == 1'd0)) begin
            ap_phi_mux_w_index29_phi_fu_405_p6 = w_index_reg_1678;
        end else begin
            ap_phi_mux_w_index29_phi_fu_405_p6 = w_index29_reg_401;
        end
    end else begin
        ap_phi_mux_w_index29_phi_fu_405_p6 = w_index29_reg_401;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_fu_714_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ap_return_0 = ap_phi_mux_p_0_01_i_phi_fu_676_p8;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ap_return_1 = ap_phi_mux_p_0_13_i_phi_fu_658_p8;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ap_return_2 = ap_phi_mux_p_0_25_i_phi_fu_640_p8;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln135_reg_1693_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ap_return_3 = ap_phi_mux_p_0_37_i_phi_fu_622_p8;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1662_ce = 1'b1;
    end else begin
        grp_fu_1662_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outidx_ce0 = 1'b1;
    end else begin
        outidx_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w14_V_ce0 = 1'b1;
    end else begin
        w14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_0_V_fu_1628_p2 = (tmp_s_fu_1615_p6 + trunc_ln2_fu_1606_p4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_306 = ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter6_acc_0_V_1_reg_600 = 'bx;

assign ap_phi_reg_pp0_iter6_acc_1_V_1_reg_582 = 'bx;

assign ap_phi_reg_pp0_iter6_acc_2_V_1_reg_564 = 'bx;

assign ap_phi_reg_pp0_iter6_acc_3_V_1_reg_546 = 'bx;

assign ap_phi_reg_pp0_iter6_p_0_01_i_reg_672 = 'bx;

assign ap_phi_reg_pp0_iter6_p_0_13_i_reg_654 = 'bx;

assign ap_phi_reg_pp0_iter6_p_0_25_i_reg_636 = 'bx;

assign ap_phi_reg_pp0_iter6_p_0_37_i_reg_618 = 'bx;

assign icmp_ln135_fu_714_p2 = ((ap_phi_mux_w_index29_phi_fu_405_p6 == 10'd575) ? 1'b1 : 1'b0);

assign icmp_ln154_fu_708_p2 = (($signed(in_index_fu_702_p2) > $signed(32'd143)) ? 1'b1 : 1'b0);

assign in_index_fu_702_p2 = (ap_phi_mux_in_index_0_i30_phi_fu_390_p6 + 32'd1);

assign outidx_address0 = zext_ln139_fu_690_p1;

assign select_ln154_fu_1594_p3 = ((icmp_ln154_reg_1688[0:0] === 1'b1) ? 32'd0 : in_index_reg_1683);

assign tmp_fu_1300_p145 = in_index_0_i30_reg_386[7:0];

assign trunc_ln2_fu_1606_p4 = {{r_V_reg_1727[25:10]}};

assign w14_V_address0 = zext_ln139_fu_690_p1;

assign w_index_fu_696_p2 = (10'd1 + ap_phi_mux_w_index29_phi_fu_405_p6);

assign zext_ln139_fu_690_p1 = ap_phi_mux_w_index29_phi_fu_405_p6;

endmodule //dense_resource_rf_gt_nin_rem0_ap_fixed_ap_fixed_config14_mult_0_0_0_0_0
