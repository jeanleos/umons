-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config5_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_elem_data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    in_elem_data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    in_elem_data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    in_elem_data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_0_V_full_n : IN STD_LOGIC;
    res_stream_V_data_0_V_write : OUT STD_LOGIC;
    res_stream_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_1_V_full_n : IN STD_LOGIC;
    res_stream_V_data_1_V_write : OUT STD_LOGIC;
    res_stream_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_2_V_full_n : IN STD_LOGIC;
    res_stream_V_data_2_V_write : OUT STD_LOGIC;
    res_stream_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_3_V_full_n : IN STD_LOGIC;
    res_stream_V_data_3_V_write : OUT STD_LOGIC;
    res_stream_V_data_4_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_4_V_full_n : IN STD_LOGIC;
    res_stream_V_data_4_V_write : OUT STD_LOGIC;
    res_stream_V_data_5_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_5_V_full_n : IN STD_LOGIC;
    res_stream_V_data_5_V_write : OUT STD_LOGIC;
    res_stream_V_data_6_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_6_V_full_n : IN STD_LOGIC;
    res_stream_V_data_6_V_write : OUT STD_LOGIC;
    res_stream_V_data_7_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_7_V_full_n : IN STD_LOGIC;
    res_stream_V_data_7_V_write : OUT STD_LOGIC );
end;


architecture behav of compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config5_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal kernel_data_V_3_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_16 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_17 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_18 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_19 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_20 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_21 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_22 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_23 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_28 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_29 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_30 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_31 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_32 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_33 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_34 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_35 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_12 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_13 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_14 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_15 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_24 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_25 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_26 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_27 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal sX_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_stream_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal and_ln284_2_reg_1064 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_stream_V_data_1_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_2_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_3_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_4_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_5_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_6_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_7_V_blk_n : STD_LOGIC;
    signal sX_6_load_reg_1032 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln284_fu_833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln284_reg_1037 : STD_LOGIC_VECTOR (0 downto 0);
    signal sY_6_load_reg_1042 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln284_1_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln284_1_reg_1047 : STD_LOGIC_VECTOR (0 downto 0);
    signal pY_6_load_reg_1052 : STD_LOGIC_VECTOR (31 downto 0);
    signal pX_6_load_reg_1058 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln284_2_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln303_fu_947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln303_reg_1068 : STD_LOGIC_VECTOR (0 downto 0);
    signal io_acc_block_signal_op137 : STD_LOGIC;
    signal ap_block_state2 : BOOLEAN;
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_ready : STD_LOGIC;
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_done : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal select_ln318_fu_968_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln318_reg_1072 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln307_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln307_reg_1077 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln313_fu_1008_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln313_reg_1081 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_start : STD_LOGIC;
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_idle : STD_LOGIC;
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_start : STD_LOGIC;
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_done : STD_LOGIC;
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_idle : STD_LOGIC;
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_ready : STD_LOGIC;
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_20 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_21 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_22 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_23 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_24 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_25 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_26 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_27 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_28 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_29 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_30 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_31 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_32 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_33 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_34 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_35 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_storemerge_phi_fu_210_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge_reg_206 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_start_reg : STD_LOGIC := '0';
    signal add_ln311_fu_992_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln316_fu_952_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_853_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_4_fu_873_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln284_2_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln284_3_fu_883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_1_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln318_fu_963_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln313_fu_1003_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_condition_147 : BOOLEAN;
    signal ap_condition_156 : BOOLEAN;

    component dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        kernel_data_V_3_0 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_1 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_2 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_3 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_4 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_5 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_6 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_7 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_8 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_9 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_10 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_11 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_12 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_13 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_14 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_15 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_16 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_17 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_18 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_19 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_20 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_21 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_22 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_23 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_24 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_25 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_26 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_27 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_28 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_29 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_30 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_31 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_32 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_33 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_34 : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_data_V_3_35 : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_elem_data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        in_elem_data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        in_elem_data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        in_elem_data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_10_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_11_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_16_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_17_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_18_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_19_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_20_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_21_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_22_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_23_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_28_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_29_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_30_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_31_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_32_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_33_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_34_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_35_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217 : component dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_start,
        ap_done => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_done,
        ap_idle => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_idle,
        ap_ready => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_ready,
        kernel_data_V_3_0 => kernel_data_V_3_0,
        kernel_data_V_3_1 => kernel_data_V_3_1,
        kernel_data_V_3_2 => kernel_data_V_3_2,
        kernel_data_V_3_3 => kernel_data_V_3_3,
        kernel_data_V_3_4 => kernel_data_V_3_4,
        kernel_data_V_3_5 => kernel_data_V_3_5,
        kernel_data_V_3_6 => kernel_data_V_3_6,
        kernel_data_V_3_7 => kernel_data_V_3_7,
        kernel_data_V_3_8 => kernel_data_V_3_8,
        kernel_data_V_3_9 => kernel_data_V_3_9,
        kernel_data_V_3_10 => kernel_data_V_3_10,
        kernel_data_V_3_11 => kernel_data_V_3_11,
        kernel_data_V_3_12 => kernel_data_V_3_12,
        kernel_data_V_3_13 => kernel_data_V_3_13,
        kernel_data_V_3_14 => kernel_data_V_3_14,
        kernel_data_V_3_15 => kernel_data_V_3_15,
        kernel_data_V_3_16 => kernel_data_V_3_16,
        kernel_data_V_3_17 => kernel_data_V_3_17,
        kernel_data_V_3_18 => kernel_data_V_3_18,
        kernel_data_V_3_19 => kernel_data_V_3_19,
        kernel_data_V_3_20 => kernel_data_V_3_20,
        kernel_data_V_3_21 => kernel_data_V_3_21,
        kernel_data_V_3_22 => kernel_data_V_3_22,
        kernel_data_V_3_23 => kernel_data_V_3_23,
        kernel_data_V_3_24 => kernel_data_V_3_24,
        kernel_data_V_3_25 => kernel_data_V_3_25,
        kernel_data_V_3_26 => kernel_data_V_3_26,
        kernel_data_V_3_27 => kernel_data_V_3_27,
        kernel_data_V_3_28 => kernel_data_V_3_28,
        kernel_data_V_3_29 => kernel_data_V_3_29,
        kernel_data_V_3_30 => kernel_data_V_3_30,
        kernel_data_V_3_31 => kernel_data_V_3_31,
        kernel_data_V_3_32 => kernel_data_V_3_32,
        kernel_data_V_3_33 => kernel_data_V_3_33,
        kernel_data_V_3_34 => kernel_data_V_3_34,
        kernel_data_V_3_35 => kernel_data_V_3_35,
        ap_return_0 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_0,
        ap_return_1 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_1,
        ap_return_2 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_2,
        ap_return_3 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_3,
        ap_return_4 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_4,
        ap_return_5 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_5,
        ap_return_6 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_6,
        ap_return_7 => grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_7);

    call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297 : component shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_start,
        ap_done => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_done,
        ap_idle => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_idle,
        ap_ready => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_ready,
        in_elem_data_0_V_read => in_elem_data_0_V_read,
        in_elem_data_1_V_read => in_elem_data_1_V_read,
        in_elem_data_2_V_read => in_elem_data_2_V_read,
        in_elem_data_3_V_read => in_elem_data_3_V_read,
        kernel_window_4_V_read => kernel_data_V_3_4,
        kernel_window_5_V_read => kernel_data_V_3_5,
        kernel_window_6_V_read => kernel_data_V_3_6,
        kernel_window_7_V_read => kernel_data_V_3_7,
        kernel_window_8_V_read => kernel_data_V_3_8,
        kernel_window_9_V_read => kernel_data_V_3_9,
        kernel_window_10_V_read => kernel_data_V_3_10,
        kernel_window_11_V_read => kernel_data_V_3_11,
        kernel_window_16_V_read => kernel_data_V_3_16,
        kernel_window_17_V_read => kernel_data_V_3_17,
        kernel_window_18_V_read => kernel_data_V_3_18,
        kernel_window_19_V_read => kernel_data_V_3_19,
        kernel_window_20_V_read => kernel_data_V_3_20,
        kernel_window_21_V_read => kernel_data_V_3_21,
        kernel_window_22_V_read => kernel_data_V_3_22,
        kernel_window_23_V_read => kernel_data_V_3_23,
        kernel_window_28_V_read => kernel_data_V_3_28,
        kernel_window_29_V_read => kernel_data_V_3_29,
        kernel_window_30_V_read => kernel_data_V_3_30,
        kernel_window_31_V_read => kernel_data_V_3_31,
        kernel_window_32_V_read => kernel_data_V_3_32,
        kernel_window_33_V_read => kernel_data_V_3_33,
        kernel_window_34_V_read => kernel_data_V_3_34,
        kernel_window_35_V_read => kernel_data_V_3_35,
        ap_return_0 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_0,
        ap_return_1 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_1,
        ap_return_2 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_2,
        ap_return_3 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_3,
        ap_return_4 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_4,
        ap_return_5 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_5,
        ap_return_6 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_6,
        ap_return_7 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_7,
        ap_return_8 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_8,
        ap_return_9 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_9,
        ap_return_10 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_10,
        ap_return_11 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_11,
        ap_return_12 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_12,
        ap_return_13 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_13,
        ap_return_14 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_14,
        ap_return_15 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_15,
        ap_return_16 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_16,
        ap_return_17 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_17,
        ap_return_18 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_18,
        ap_return_19 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_19,
        ap_return_20 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_20,
        ap_return_21 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_21,
        ap_return_22 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_22,
        ap_return_23 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_23,
        ap_return_24 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_24,
        ap_return_25 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_25,
        ap_return_26 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_26,
        ap_return_27 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_27,
        ap_return_28 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_28,
        ap_return_29 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_29,
        ap_return_30 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_30,
        ap_return_31 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_31,
        ap_return_32 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_32,
        ap_return_33 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_33,
        ap_return_34 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_34,
        ap_return_35 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_35);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_1 = and_ln284_2_fu_901_p2))) then 
                    grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_ready = ap_const_logic_1)) then 
                    grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    pX_6_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_147)) then
                if ((icmp_ln303_fu_947_p2 = ap_const_lv1_1)) then 
                    pX_6 <= ap_const_lv32_0;
                elsif ((icmp_ln303_fu_947_p2 = ap_const_lv1_0)) then 
                    pX_6 <= add_ln316_fu_952_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_6_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_156)) then
                if ((icmp_ln307_fu_987_p2 = ap_const_lv1_1)) then 
                    pY_6 <= ap_const_lv32_0;
                elsif ((icmp_ln307_fu_987_p2 = ap_const_lv1_0)) then 
                    pY_6 <= add_ln311_fu_992_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_6_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln303_reg_1068 = ap_const_lv1_0))) then 
                sX_6 <= select_ln318_reg_1072;
            elsif ((not(((ap_const_boolean_1 = ap_block_state2_on_subcall_done) or ((io_acc_block_signal_op137 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_1064)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln303_fu_947_p2 = ap_const_lv1_1))) then 
                sX_6 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    storemerge_reg_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state2_on_subcall_done) or ((io_acc_block_signal_op137 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_1064)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln307_fu_987_p2 = ap_const_lv1_1) and (icmp_ln303_fu_947_p2 = ap_const_lv1_1))) then 
                storemerge_reg_206 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln307_reg_1077 = ap_const_lv1_0) and (icmp_ln303_reg_1068 = ap_const_lv1_1))) then 
                storemerge_reg_206 <= select_ln313_reg_1081;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                and_ln284_2_reg_1064 <= and_ln284_2_fu_901_p2;
                icmp_ln284_1_reg_1047 <= icmp_ln284_1_fu_843_p2;
                icmp_ln284_reg_1037 <= icmp_ln284_fu_833_p2;
                kernel_data_V_3_0 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_0;
                kernel_data_V_3_1 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_1;
                kernel_data_V_3_10 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_18;
                kernel_data_V_3_11 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_19;
                kernel_data_V_3_12 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_4;
                kernel_data_V_3_13 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_5;
                kernel_data_V_3_14 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_6;
                kernel_data_V_3_15 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_7;
                kernel_data_V_3_16 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_20;
                kernel_data_V_3_17 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_21;
                kernel_data_V_3_18 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_22;
                kernel_data_V_3_19 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_23;
                kernel_data_V_3_2 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_2;
                kernel_data_V_3_20 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_24;
                kernel_data_V_3_21 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_25;
                kernel_data_V_3_22 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_26;
                kernel_data_V_3_23 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_27;
                kernel_data_V_3_24 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_8;
                kernel_data_V_3_25 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_9;
                kernel_data_V_3_26 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_10;
                kernel_data_V_3_27 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_11;
                kernel_data_V_3_28 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_28;
                kernel_data_V_3_29 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_29;
                kernel_data_V_3_3 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_3;
                kernel_data_V_3_30 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_30;
                kernel_data_V_3_31 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_31;
                kernel_data_V_3_32 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_32;
                kernel_data_V_3_33 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_33;
                kernel_data_V_3_34 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_34;
                kernel_data_V_3_35 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_35;
                kernel_data_V_3_4 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_12;
                kernel_data_V_3_5 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_13;
                kernel_data_V_3_6 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_14;
                kernel_data_V_3_7 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_15;
                kernel_data_V_3_8 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_16;
                kernel_data_V_3_9 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_return_17;
                pX_6_load_reg_1058 <= pX_6;
                pY_6_load_reg_1052 <= pY_6;
                sX_6_load_reg_1032 <= sX_6;
                sY_6_load_reg_1042 <= sY_6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state2_on_subcall_done) or ((io_acc_block_signal_op137 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_1064)))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln303_reg_1068 <= icmp_ln303_fu_947_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state2_on_subcall_done) or ((io_acc_block_signal_op137 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_1064)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln303_fu_947_p2 = ap_const_lv1_1))) then
                icmp_ln307_reg_1077 <= icmp_ln307_fu_987_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln303_reg_1068 = ap_const_lv1_1))) then
                sY_6 <= ap_phi_mux_storemerge_phi_fu_210_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state2_on_subcall_done) or ((io_acc_block_signal_op137 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_1064)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln307_fu_987_p2 = ap_const_lv1_0) and (icmp_ln303_fu_947_p2 = ap_const_lv1_1))) then
                select_ln313_reg_1081 <= select_ln313_fu_1008_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state2_on_subcall_done) or ((io_acc_block_signal_op137 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_1064)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln303_fu_947_p2 = ap_const_lv1_0))) then
                select_ln318_reg_1072 <= select_ln318_fu_968_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, and_ln284_2_reg_1064, io_acc_block_signal_op137, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((ap_const_boolean_1 = ap_block_state2_on_subcall_done) or ((io_acc_block_signal_op137 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_1064)))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln311_fu_992_p2 <= std_logic_vector(unsigned(pY_6_load_reg_1052) + unsigned(ap_const_lv32_1));
    add_ln313_fu_1003_p2 <= std_logic_vector(unsigned(sY_6_load_reg_1042) + unsigned(ap_const_lv32_1));
    add_ln316_fu_952_p2 <= std_logic_vector(unsigned(pX_6_load_reg_1058) + unsigned(ap_const_lv32_1));
    add_ln318_fu_963_p2 <= std_logic_vector(unsigned(sX_6_load_reg_1032) + unsigned(ap_const_lv32_1));
    and_ln284_1_fu_895_p2 <= (icmp_ln284_3_fu_883_p2 and icmp_ln284_2_fu_863_p2);
    and_ln284_2_fu_901_p2 <= (and_ln284_fu_889_p2 and and_ln284_1_fu_895_p2);
    and_ln284_fu_889_p2 <= (icmp_ln284_fu_833_p2 and icmp_ln284_1_fu_843_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_block_state2_assign_proc : process(and_ln284_2_reg_1064, io_acc_block_signal_op137)
    begin
                ap_block_state2 <= ((io_acc_block_signal_op137 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_1064));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(and_ln284_2_reg_1064, grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_done = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_1064));
    end process;


    ap_condition_147_assign_proc : process(ap_CS_fsm_state2, and_ln284_2_reg_1064, io_acc_block_signal_op137, ap_block_state2_on_subcall_done)
    begin
                ap_condition_147 <= (not(((ap_const_boolean_1 = ap_block_state2_on_subcall_done) or ((io_acc_block_signal_op137 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_1064)))) and (ap_const_logic_1 = ap_CS_fsm_state2));
    end process;


    ap_condition_156_assign_proc : process(ap_CS_fsm_state2, and_ln284_2_reg_1064, icmp_ln303_fu_947_p2, io_acc_block_signal_op137, ap_block_state2_on_subcall_done)
    begin
                ap_condition_156 <= (not(((ap_const_boolean_1 = ap_block_state2_on_subcall_done) or ((io_acc_block_signal_op137 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_1064)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln303_fu_947_p2 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge_phi_fu_210_p4_assign_proc : process(icmp_ln303_reg_1068, icmp_ln307_reg_1077, select_ln313_reg_1081, storemerge_reg_206, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln307_reg_1077 = ap_const_lv1_0) and (icmp_ln303_reg_1068 = ap_const_lv1_1))) then 
            ap_phi_mux_storemerge_phi_fu_210_p4 <= select_ln313_reg_1081;
        else 
            ap_phi_mux_storemerge_phi_fu_210_p4 <= storemerge_reg_206;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_start_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_start <= ap_const_logic_1;
        else 
            call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_297_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_start <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_start_reg;
    icmp_ln284_1_fu_843_p2 <= "1" when (sY_6 = ap_const_lv32_2) else "0";
    icmp_ln284_2_fu_863_p2 <= "1" when (signed(tmp_3_fu_853_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln284_3_fu_883_p2 <= "1" when (signed(tmp_4_fu_873_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln284_fu_833_p2 <= "1" when (sX_6 = ap_const_lv32_2) else "0";
    icmp_ln303_fu_947_p2 <= "1" when (pX_6_load_reg_1058 = ap_const_lv32_11) else "0";
    icmp_ln307_fu_987_p2 <= "1" when (pY_6_load_reg_1052 = ap_const_lv32_11) else "0";
    io_acc_block_signal_op137 <= (res_stream_V_data_7_V_full_n and res_stream_V_data_6_V_full_n and res_stream_V_data_5_V_full_n and res_stream_V_data_4_V_full_n and res_stream_V_data_3_V_full_n and res_stream_V_data_2_V_full_n and res_stream_V_data_1_V_full_n and res_stream_V_data_0_V_full_n);

    res_stream_V_data_0_V_blk_n_assign_proc : process(res_stream_V_data_0_V_full_n, ap_CS_fsm_state2, and_ln284_2_reg_1064)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln284_2_reg_1064))) then 
            res_stream_V_data_0_V_blk_n <= res_stream_V_data_0_V_full_n;
        else 
            res_stream_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_0_V_din <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_0;

    res_stream_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state2, and_ln284_2_reg_1064, io_acc_block_signal_op137, ap_block_state2_on_subcall_done)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_on_subcall_done) or ((io_acc_block_signal_op137 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_1064)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln284_2_reg_1064))) then 
            res_stream_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_1_V_blk_n_assign_proc : process(res_stream_V_data_1_V_full_n, ap_CS_fsm_state2, and_ln284_2_reg_1064)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln284_2_reg_1064))) then 
            res_stream_V_data_1_V_blk_n <= res_stream_V_data_1_V_full_n;
        else 
            res_stream_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_1_V_din <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_1;

    res_stream_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state2, and_ln284_2_reg_1064, io_acc_block_signal_op137, ap_block_state2_on_subcall_done)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_on_subcall_done) or ((io_acc_block_signal_op137 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_1064)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln284_2_reg_1064))) then 
            res_stream_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_2_V_blk_n_assign_proc : process(res_stream_V_data_2_V_full_n, ap_CS_fsm_state2, and_ln284_2_reg_1064)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln284_2_reg_1064))) then 
            res_stream_V_data_2_V_blk_n <= res_stream_V_data_2_V_full_n;
        else 
            res_stream_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_2_V_din <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_2;

    res_stream_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state2, and_ln284_2_reg_1064, io_acc_block_signal_op137, ap_block_state2_on_subcall_done)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_on_subcall_done) or ((io_acc_block_signal_op137 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_1064)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln284_2_reg_1064))) then 
            res_stream_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_3_V_blk_n_assign_proc : process(res_stream_V_data_3_V_full_n, ap_CS_fsm_state2, and_ln284_2_reg_1064)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln284_2_reg_1064))) then 
            res_stream_V_data_3_V_blk_n <= res_stream_V_data_3_V_full_n;
        else 
            res_stream_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_3_V_din <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_3;

    res_stream_V_data_3_V_write_assign_proc : process(ap_CS_fsm_state2, and_ln284_2_reg_1064, io_acc_block_signal_op137, ap_block_state2_on_subcall_done)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_on_subcall_done) or ((io_acc_block_signal_op137 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_1064)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln284_2_reg_1064))) then 
            res_stream_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_4_V_blk_n_assign_proc : process(res_stream_V_data_4_V_full_n, ap_CS_fsm_state2, and_ln284_2_reg_1064)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln284_2_reg_1064))) then 
            res_stream_V_data_4_V_blk_n <= res_stream_V_data_4_V_full_n;
        else 
            res_stream_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_4_V_din <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_4;

    res_stream_V_data_4_V_write_assign_proc : process(ap_CS_fsm_state2, and_ln284_2_reg_1064, io_acc_block_signal_op137, ap_block_state2_on_subcall_done)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_on_subcall_done) or ((io_acc_block_signal_op137 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_1064)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln284_2_reg_1064))) then 
            res_stream_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_5_V_blk_n_assign_proc : process(res_stream_V_data_5_V_full_n, ap_CS_fsm_state2, and_ln284_2_reg_1064)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln284_2_reg_1064))) then 
            res_stream_V_data_5_V_blk_n <= res_stream_V_data_5_V_full_n;
        else 
            res_stream_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_5_V_din <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_5;

    res_stream_V_data_5_V_write_assign_proc : process(ap_CS_fsm_state2, and_ln284_2_reg_1064, io_acc_block_signal_op137, ap_block_state2_on_subcall_done)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_on_subcall_done) or ((io_acc_block_signal_op137 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_1064)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln284_2_reg_1064))) then 
            res_stream_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_6_V_blk_n_assign_proc : process(res_stream_V_data_6_V_full_n, ap_CS_fsm_state2, and_ln284_2_reg_1064)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln284_2_reg_1064))) then 
            res_stream_V_data_6_V_blk_n <= res_stream_V_data_6_V_full_n;
        else 
            res_stream_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_6_V_din <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_6;

    res_stream_V_data_6_V_write_assign_proc : process(ap_CS_fsm_state2, and_ln284_2_reg_1064, io_acc_block_signal_op137, ap_block_state2_on_subcall_done)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_on_subcall_done) or ((io_acc_block_signal_op137 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_1064)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln284_2_reg_1064))) then 
            res_stream_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_7_V_blk_n_assign_proc : process(res_stream_V_data_7_V_full_n, ap_CS_fsm_state2, and_ln284_2_reg_1064)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln284_2_reg_1064))) then 
            res_stream_V_data_7_V_blk_n <= res_stream_V_data_7_V_full_n;
        else 
            res_stream_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_7_V_din <= grp_dense_resource_rf_gt_nin_rem0_0_0_0_0_0_0_0_0_0_fu_217_ap_return_7;

    res_stream_V_data_7_V_write_assign_proc : process(ap_CS_fsm_state2, and_ln284_2_reg_1064, io_acc_block_signal_op137, ap_block_state2_on_subcall_done)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_on_subcall_done) or ((io_acc_block_signal_op137 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln284_2_reg_1064)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln284_2_reg_1064))) then 
            res_stream_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln313_fu_1008_p3 <= 
        ap_const_lv32_2 when (icmp_ln284_1_reg_1047(0) = '1') else 
        add_ln313_fu_1003_p2;
    select_ln318_fu_968_p3 <= 
        ap_const_lv32_2 when (icmp_ln284_reg_1037(0) = '1') else 
        add_ln318_fu_963_p2;
    tmp_3_fu_853_p4 <= pY_6(31 downto 1);
    tmp_4_fu_873_p4 <= pX_6(31 downto 1);
end behav;
