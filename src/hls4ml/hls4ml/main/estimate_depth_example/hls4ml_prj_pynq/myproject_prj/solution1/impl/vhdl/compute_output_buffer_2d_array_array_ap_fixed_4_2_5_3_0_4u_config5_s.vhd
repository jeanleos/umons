-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_output_buffer_2d_array_array_ap_fixed_4_2_5_3_0_4u_config5_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_elem_data_0_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
    in_elem_data_1_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
    in_elem_data_2_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
    in_elem_data_3_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
    res_stream_V_data_0_V_din : OUT STD_LOGIC_VECTOR (3 downto 0);
    res_stream_V_data_0_V_full_n : IN STD_LOGIC;
    res_stream_V_data_0_V_write : OUT STD_LOGIC;
    res_stream_V_data_1_V_din : OUT STD_LOGIC_VECTOR (3 downto 0);
    res_stream_V_data_1_V_full_n : IN STD_LOGIC;
    res_stream_V_data_1_V_write : OUT STD_LOGIC;
    res_stream_V_data_2_V_din : OUT STD_LOGIC_VECTOR (3 downto 0);
    res_stream_V_data_2_V_full_n : IN STD_LOGIC;
    res_stream_V_data_2_V_write : OUT STD_LOGIC;
    res_stream_V_data_3_V_din : OUT STD_LOGIC_VECTOR (3 downto 0);
    res_stream_V_data_3_V_full_n : IN STD_LOGIC;
    res_stream_V_data_3_V_write : OUT STD_LOGIC );
end;


architecture behav of compute_output_buffer_2d_array_array_ap_fixed_4_2_5_3_0_4u_config5_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal kernel_data_V_5_4 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_5 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_6 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_7 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_8 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_9 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_10 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_11 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_16 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_17 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_18 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_19 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_20 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_21 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_22 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_23 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_28 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_29 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_30 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_31 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_32 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_33 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_34 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal kernel_data_V_5_35 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal sX_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal res_stream_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal and_ln284_2_reg_1060 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_stream_V_data_1_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_2_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_3_V_blk_n : STD_LOGIC;
    signal kernel_data_V_5_27_ret_reg_848 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_26_ret_reg_853 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_25_ret_reg_858 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_24_ret_reg_863 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_15_ret_reg_868 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_14_ret_reg_873 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_13_ret_reg_878 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_12_ret_reg_883 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_3_ret_reg_888 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_2_ret_reg_893 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_1_ret_reg_898 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_0_ret_reg_903 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_4_ret_reg_908 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_5_ret_reg_913 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_6_ret_reg_918 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_7_ret_reg_923 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_8_ret_reg_928 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_9_ret_reg_933 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_10_ret_reg_938 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_11_ret_reg_943 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_16_ret_reg_948 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_17_ret_reg_953 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_18_ret_reg_958 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_19_ret_reg_963 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_20_ret_reg_968 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_21_ret_reg_973 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_22_ret_reg_978 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_23_ret_reg_983 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_28_ret_reg_988 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_29_ret_reg_993 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_30_ret_reg_998 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_31_ret_reg_1003 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_32_ret_reg_1008 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_33_ret_reg_1013 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_34_ret_reg_1018 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_data_V_5_35_ret_reg_1023 : STD_LOGIC_VECTOR (3 downto 0);
    signal sX_4_load_reg_1028 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln284_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln284_reg_1033 : STD_LOGIC_VECTOR (0 downto 0);
    signal sY_4_load_reg_1038 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln284_1_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln284_1_reg_1043 : STD_LOGIC_VECTOR (0 downto 0);
    signal pY_4_load_reg_1048 : STD_LOGIC_VECTOR (31 downto 0);
    signal pX_4_load_reg_1054 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln284_2_fu_741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_out_0_V_reg_1064 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_ready : STD_LOGIC;
    signal grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_done : STD_LOGIC;
    signal res_out_1_V_reg_1069 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_out_2_V_reg_1074 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_out_3_V_reg_1079 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln303_fu_763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln303_reg_1084 : STD_LOGIC_VECTOR (0 downto 0);
    signal io_acc_block_signal_op119 : STD_LOGIC;
    signal ap_block_state4 : BOOLEAN;
    signal select_ln318_fu_784_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln318_reg_1088 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln307_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln307_reg_1093 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln313_fu_824_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln313_reg_1097 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_start : STD_LOGIC;
    signal grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_idle : STD_LOGIC;
    signal grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_return_0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_return_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_return_2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_return_3 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_start : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_done : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_idle : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_ready : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_0 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_2 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_3 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_4 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_5 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_6 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_7 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_8 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_9 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_10 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_11 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_12 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_13 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_14 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_15 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_16 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_17 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_18 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_19 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_20 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_21 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_22 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_23 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_24 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_25 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_26 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_27 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_28 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_29 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_30 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_31 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_32 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_33 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_34 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_35 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_storemerge_phi_fu_162_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge_reg_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln311_fu_808_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln316_fu_768_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_693_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1_fu_713_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln284_2_fu_703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln284_3_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_1_fu_735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln318_fu_779_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln313_fu_819_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_condition_200 : BOOLEAN;
    signal ap_condition_209 : BOOLEAN;

    component dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_20_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_21_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_22_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_23_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_24_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_25_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_26_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_27_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_28_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_29_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_30_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_31_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_32_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_33_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_34_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        data_35_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_elem_data_0_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        in_elem_data_1_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        in_elem_data_2_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        in_elem_data_3_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_4_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_5_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_6_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_7_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_8_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_9_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_10_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_11_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_16_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_17_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_18_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_19_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_20_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_21_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_22_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_23_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_28_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_29_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_30_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_31_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_32_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_33_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_34_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        kernel_window_35_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;



begin
    grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169 : component dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_start,
        ap_done => grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_done,
        ap_idle => grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_idle,
        ap_ready => grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_ready,
        data_0_V_read => kernel_data_V_5_0_ret_reg_903,
        data_1_V_read => kernel_data_V_5_1_ret_reg_898,
        data_2_V_read => kernel_data_V_5_2_ret_reg_893,
        data_3_V_read => kernel_data_V_5_3_ret_reg_888,
        data_4_V_read => kernel_data_V_5_4_ret_reg_908,
        data_5_V_read => kernel_data_V_5_5_ret_reg_913,
        data_6_V_read => kernel_data_V_5_6_ret_reg_918,
        data_7_V_read => kernel_data_V_5_7_ret_reg_923,
        data_8_V_read => kernel_data_V_5_8_ret_reg_928,
        data_9_V_read => kernel_data_V_5_9_ret_reg_933,
        data_10_V_read => kernel_data_V_5_10_ret_reg_938,
        data_11_V_read => kernel_data_V_5_11_ret_reg_943,
        data_12_V_read => kernel_data_V_5_12_ret_reg_883,
        data_13_V_read => kernel_data_V_5_13_ret_reg_878,
        data_14_V_read => kernel_data_V_5_14_ret_reg_873,
        data_15_V_read => kernel_data_V_5_15_ret_reg_868,
        data_16_V_read => kernel_data_V_5_16_ret_reg_948,
        data_17_V_read => kernel_data_V_5_17_ret_reg_953,
        data_18_V_read => kernel_data_V_5_18_ret_reg_958,
        data_19_V_read => kernel_data_V_5_19_ret_reg_963,
        data_20_V_read => kernel_data_V_5_20_ret_reg_968,
        data_21_V_read => kernel_data_V_5_21_ret_reg_973,
        data_22_V_read => kernel_data_V_5_22_ret_reg_978,
        data_23_V_read => kernel_data_V_5_23_ret_reg_983,
        data_24_V_read => kernel_data_V_5_24_ret_reg_863,
        data_25_V_read => kernel_data_V_5_25_ret_reg_858,
        data_26_V_read => kernel_data_V_5_26_ret_reg_853,
        data_27_V_read => kernel_data_V_5_27_ret_reg_848,
        data_28_V_read => kernel_data_V_5_28_ret_reg_988,
        data_29_V_read => kernel_data_V_5_29_ret_reg_993,
        data_30_V_read => kernel_data_V_5_30_ret_reg_998,
        data_31_V_read => kernel_data_V_5_31_ret_reg_1003,
        data_32_V_read => kernel_data_V_5_32_ret_reg_1008,
        data_33_V_read => kernel_data_V_5_33_ret_reg_1013,
        data_34_V_read => kernel_data_V_5_34_ret_reg_1018,
        data_35_V_read => kernel_data_V_5_35_ret_reg_1023,
        ap_return_0 => grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_return_0,
        ap_return_1 => grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_return_1,
        ap_return_2 => grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_return_2,
        ap_return_3 => grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_return_3);

    call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209 : component shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_start,
        ap_done => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_done,
        ap_idle => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_idle,
        ap_ready => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_ready,
        in_elem_data_0_V_read => in_elem_data_0_V_read,
        in_elem_data_1_V_read => in_elem_data_1_V_read,
        in_elem_data_2_V_read => in_elem_data_2_V_read,
        in_elem_data_3_V_read => in_elem_data_3_V_read,
        kernel_window_4_V_read => kernel_data_V_5_4,
        kernel_window_5_V_read => kernel_data_V_5_5,
        kernel_window_6_V_read => kernel_data_V_5_6,
        kernel_window_7_V_read => kernel_data_V_5_7,
        kernel_window_8_V_read => kernel_data_V_5_8,
        kernel_window_9_V_read => kernel_data_V_5_9,
        kernel_window_10_V_read => kernel_data_V_5_10,
        kernel_window_11_V_read => kernel_data_V_5_11,
        kernel_window_16_V_read => kernel_data_V_5_16,
        kernel_window_17_V_read => kernel_data_V_5_17,
        kernel_window_18_V_read => kernel_data_V_5_18,
        kernel_window_19_V_read => kernel_data_V_5_19,
        kernel_window_20_V_read => kernel_data_V_5_20,
        kernel_window_21_V_read => kernel_data_V_5_21,
        kernel_window_22_V_read => kernel_data_V_5_22,
        kernel_window_23_V_read => kernel_data_V_5_23,
        kernel_window_28_V_read => kernel_data_V_5_28,
        kernel_window_29_V_read => kernel_data_V_5_29,
        kernel_window_30_V_read => kernel_data_V_5_30,
        kernel_window_31_V_read => kernel_data_V_5_31,
        kernel_window_32_V_read => kernel_data_V_5_32,
        kernel_window_33_V_read => kernel_data_V_5_33,
        kernel_window_34_V_read => kernel_data_V_5_34,
        kernel_window_35_V_read => kernel_data_V_5_35,
        ap_return_0 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_0,
        ap_return_1 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_1,
        ap_return_2 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_2,
        ap_return_3 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_3,
        ap_return_4 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_4,
        ap_return_5 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_5,
        ap_return_6 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_6,
        ap_return_7 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_7,
        ap_return_8 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_8,
        ap_return_9 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_9,
        ap_return_10 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_10,
        ap_return_11 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_11,
        ap_return_12 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_12,
        ap_return_13 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_13,
        ap_return_14 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_14,
        ap_return_15 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_15,
        ap_return_16 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_16,
        ap_return_17 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_17,
        ap_return_18 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_18,
        ap_return_19 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_19,
        ap_return_20 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_20,
        ap_return_21 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_21,
        ap_return_22 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_22,
        ap_return_23 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_23,
        ap_return_24 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_24,
        ap_return_25 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_25,
        ap_return_26 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_26,
        ap_return_27 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_27,
        ap_return_28 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_28,
        ap_return_29 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_29,
        ap_return_30 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_30,
        ap_return_31 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_31,
        ap_return_32 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_32,
        ap_return_33 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_33,
        ap_return_34 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_34,
        ap_return_35 => call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_35);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_ready = ap_const_logic_1)) then 
                    grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    pX_4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_200)) then
                if ((icmp_ln303_fu_763_p2 = ap_const_lv1_1)) then 
                    pX_4 <= ap_const_lv32_0;
                elsif ((icmp_ln303_fu_763_p2 = ap_const_lv1_0)) then 
                    pX_4 <= add_ln316_fu_768_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_209)) then
                if ((icmp_ln307_fu_803_p2 = ap_const_lv1_1)) then 
                    pY_4 <= ap_const_lv32_0;
                elsif ((icmp_ln307_fu_803_p2 = ap_const_lv1_0)) then 
                    pY_4 <= add_ln311_fu_808_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln303_reg_1084 = ap_const_lv1_0))) then 
                sX_4 <= select_ln318_reg_1088;
            elsif ((not(((ap_const_lv1_1 = and_ln284_2_reg_1060) and (io_acc_block_signal_op119 = ap_const_logic_0))) and (icmp_ln303_fu_763_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                sX_4 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    storemerge_reg_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_lv1_1 = and_ln284_2_reg_1060) and (io_acc_block_signal_op119 = ap_const_logic_0))) and (icmp_ln307_fu_803_p2 = ap_const_lv1_1) and (icmp_ln303_fu_763_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                storemerge_reg_158 <= ap_const_lv32_0;
            elsif (((icmp_ln303_reg_1084 = ap_const_lv1_1) and (icmp_ln307_reg_1093 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                storemerge_reg_158 <= select_ln313_reg_1097;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                and_ln284_2_reg_1060 <= and_ln284_2_fu_741_p2;
                icmp_ln284_1_reg_1043 <= icmp_ln284_1_fu_683_p2;
                icmp_ln284_reg_1033 <= icmp_ln284_fu_673_p2;
                kernel_data_V_5_0_ret_reg_903 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_0;
                kernel_data_V_5_10 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_18;
                kernel_data_V_5_10_ret_reg_938 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_18;
                kernel_data_V_5_11 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_19;
                kernel_data_V_5_11_ret_reg_943 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_19;
                kernel_data_V_5_12_ret_reg_883 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_4;
                kernel_data_V_5_13_ret_reg_878 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_5;
                kernel_data_V_5_14_ret_reg_873 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_6;
                kernel_data_V_5_15_ret_reg_868 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_7;
                kernel_data_V_5_16 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_20;
                kernel_data_V_5_16_ret_reg_948 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_20;
                kernel_data_V_5_17 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_21;
                kernel_data_V_5_17_ret_reg_953 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_21;
                kernel_data_V_5_18 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_22;
                kernel_data_V_5_18_ret_reg_958 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_22;
                kernel_data_V_5_19 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_23;
                kernel_data_V_5_19_ret_reg_963 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_23;
                kernel_data_V_5_1_ret_reg_898 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_1;
                kernel_data_V_5_20 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_24;
                kernel_data_V_5_20_ret_reg_968 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_24;
                kernel_data_V_5_21 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_25;
                kernel_data_V_5_21_ret_reg_973 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_25;
                kernel_data_V_5_22 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_26;
                kernel_data_V_5_22_ret_reg_978 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_26;
                kernel_data_V_5_23 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_27;
                kernel_data_V_5_23_ret_reg_983 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_27;
                kernel_data_V_5_24_ret_reg_863 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_8;
                kernel_data_V_5_25_ret_reg_858 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_9;
                kernel_data_V_5_26_ret_reg_853 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_10;
                kernel_data_V_5_27_ret_reg_848 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_11;
                kernel_data_V_5_28 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_28;
                kernel_data_V_5_28_ret_reg_988 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_28;
                kernel_data_V_5_29 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_29;
                kernel_data_V_5_29_ret_reg_993 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_29;
                kernel_data_V_5_2_ret_reg_893 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_2;
                kernel_data_V_5_30 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_30;
                kernel_data_V_5_30_ret_reg_998 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_30;
                kernel_data_V_5_31 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_31;
                kernel_data_V_5_31_ret_reg_1003 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_31;
                kernel_data_V_5_32 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_32;
                kernel_data_V_5_32_ret_reg_1008 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_32;
                kernel_data_V_5_33 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_33;
                kernel_data_V_5_33_ret_reg_1013 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_33;
                kernel_data_V_5_34 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_34;
                kernel_data_V_5_34_ret_reg_1018 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_34;
                kernel_data_V_5_35 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_35;
                kernel_data_V_5_35_ret_reg_1023 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_35;
                kernel_data_V_5_3_ret_reg_888 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_3;
                kernel_data_V_5_4 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_12;
                kernel_data_V_5_4_ret_reg_908 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_12;
                kernel_data_V_5_5 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_13;
                kernel_data_V_5_5_ret_reg_913 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_13;
                kernel_data_V_5_6 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_14;
                kernel_data_V_5_6_ret_reg_918 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_14;
                kernel_data_V_5_7 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_15;
                kernel_data_V_5_7_ret_reg_923 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_15;
                kernel_data_V_5_8 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_16;
                kernel_data_V_5_8_ret_reg_928 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_16;
                kernel_data_V_5_9 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_17;
                kernel_data_V_5_9_ret_reg_933 <= call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_return_17;
                pX_4_load_reg_1054 <= pX_4;
                pY_4_load_reg_1048 <= pY_4;
                sX_4_load_reg_1028 <= sX_4;
                sY_4_load_reg_1038 <= sY_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_lv1_1 = and_ln284_2_reg_1060) and (io_acc_block_signal_op119 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                icmp_ln303_reg_1084 <= icmp_ln303_fu_763_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_lv1_1 = and_ln284_2_reg_1060) and (io_acc_block_signal_op119 = ap_const_logic_0))) and (icmp_ln303_fu_763_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                icmp_ln307_reg_1093 <= icmp_ln307_fu_803_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_done = ap_const_logic_1))) then
                res_out_0_V_reg_1064 <= grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_return_0;
                res_out_1_V_reg_1069 <= grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_return_1;
                res_out_2_V_reg_1074 <= grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_return_2;
                res_out_3_V_reg_1079 <= grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_return_3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln303_reg_1084 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                sY_4 <= ap_phi_mux_storemerge_phi_fu_162_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_lv1_1 = and_ln284_2_reg_1060) and (io_acc_block_signal_op119 = ap_const_logic_0))) and (icmp_ln303_fu_763_p2 = ap_const_lv1_1) and (icmp_ln307_fu_803_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                select_ln313_reg_1097 <= select_ln313_fu_824_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_lv1_1 = and_ln284_2_reg_1060) and (io_acc_block_signal_op119 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln303_fu_763_p2 = ap_const_lv1_0))) then
                select_ln318_reg_1088 <= select_ln318_fu_784_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, and_ln284_2_reg_1060, and_ln284_2_fu_741_p2, ap_CS_fsm_state3, grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_done, io_acc_block_signal_op119)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_0 = and_ln284_2_fu_741_p2) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((ap_const_lv1_1 = and_ln284_2_fu_741_p2) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((ap_const_lv1_1 = and_ln284_2_reg_1060) and (io_acc_block_signal_op119 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln311_fu_808_p2 <= std_logic_vector(unsigned(pY_4_load_reg_1048) + unsigned(ap_const_lv32_1));
    add_ln313_fu_819_p2 <= std_logic_vector(unsigned(sY_4_load_reg_1038) + unsigned(ap_const_lv32_1));
    add_ln316_fu_768_p2 <= std_logic_vector(unsigned(pX_4_load_reg_1054) + unsigned(ap_const_lv32_1));
    add_ln318_fu_779_p2 <= std_logic_vector(unsigned(sX_4_load_reg_1028) + unsigned(ap_const_lv32_1));
    and_ln284_1_fu_735_p2 <= (icmp_ln284_3_fu_723_p2 and icmp_ln284_2_fu_703_p2);
    and_ln284_2_fu_741_p2 <= (and_ln284_fu_729_p2 and and_ln284_1_fu_735_p2);
    and_ln284_fu_729_p2 <= (icmp_ln284_fu_673_p2 and icmp_ln284_1_fu_683_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_block_state4_assign_proc : process(and_ln284_2_reg_1060, io_acc_block_signal_op119)
    begin
                ap_block_state4 <= ((ap_const_lv1_1 = and_ln284_2_reg_1060) and (io_acc_block_signal_op119 = ap_const_logic_0));
    end process;


    ap_condition_200_assign_proc : process(ap_CS_fsm_state4, and_ln284_2_reg_1060, io_acc_block_signal_op119)
    begin
                ap_condition_200 <= (not(((ap_const_lv1_1 = and_ln284_2_reg_1060) and (io_acc_block_signal_op119 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4));
    end process;


    ap_condition_209_assign_proc : process(ap_CS_fsm_state4, and_ln284_2_reg_1060, icmp_ln303_fu_763_p2, io_acc_block_signal_op119)
    begin
                ap_condition_209 <= (not(((ap_const_lv1_1 = and_ln284_2_reg_1060) and (io_acc_block_signal_op119 = ap_const_logic_0))) and (icmp_ln303_fu_763_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge_phi_fu_162_p4_assign_proc : process(icmp_ln303_reg_1084, icmp_ln307_reg_1093, select_ln313_reg_1097, storemerge_reg_158, ap_CS_fsm_state5)
    begin
        if (((icmp_ln303_reg_1084 = ap_const_lv1_1) and (icmp_ln307_reg_1093 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_storemerge_phi_fu_162_p4 <= select_ln313_reg_1097;
        else 
            ap_phi_mux_storemerge_phi_fu_162_p4 <= storemerge_reg_158;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_start_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_start <= ap_const_logic_1;
        else 
            call_ret_shift_line_buffer_array_ap_fixed_4_2_5_3_0_4u_config5_s_fu_209_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_start <= grp_dense_resource_rf_leq_nin_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_fu_169_ap_start_reg;
    icmp_ln284_1_fu_683_p2 <= "1" when (sY_4 = ap_const_lv32_2) else "0";
    icmp_ln284_2_fu_703_p2 <= "1" when (signed(tmp_fu_693_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln284_3_fu_723_p2 <= "1" when (signed(tmp_1_fu_713_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln284_fu_673_p2 <= "1" when (sX_4 = ap_const_lv32_2) else "0";
    icmp_ln303_fu_763_p2 <= "1" when (pX_4_load_reg_1054 = ap_const_lv32_41) else "0";
    icmp_ln307_fu_803_p2 <= "1" when (pY_4_load_reg_1048 = ap_const_lv32_41) else "0";
    io_acc_block_signal_op119 <= (res_stream_V_data_3_V_full_n and res_stream_V_data_2_V_full_n and res_stream_V_data_1_V_full_n and res_stream_V_data_0_V_full_n);

    res_stream_V_data_0_V_blk_n_assign_proc : process(res_stream_V_data_0_V_full_n, ap_CS_fsm_state4, and_ln284_2_reg_1060)
    begin
        if (((ap_const_lv1_1 = and_ln284_2_reg_1060) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_stream_V_data_0_V_blk_n <= res_stream_V_data_0_V_full_n;
        else 
            res_stream_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_0_V_din <= res_out_0_V_reg_1064;

    res_stream_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state4, and_ln284_2_reg_1060, io_acc_block_signal_op119)
    begin
        if ((not(((ap_const_lv1_1 = and_ln284_2_reg_1060) and (io_acc_block_signal_op119 = ap_const_logic_0))) and (ap_const_lv1_1 = and_ln284_2_reg_1060) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_stream_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_1_V_blk_n_assign_proc : process(res_stream_V_data_1_V_full_n, ap_CS_fsm_state4, and_ln284_2_reg_1060)
    begin
        if (((ap_const_lv1_1 = and_ln284_2_reg_1060) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_stream_V_data_1_V_blk_n <= res_stream_V_data_1_V_full_n;
        else 
            res_stream_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_1_V_din <= res_out_1_V_reg_1069;

    res_stream_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state4, and_ln284_2_reg_1060, io_acc_block_signal_op119)
    begin
        if ((not(((ap_const_lv1_1 = and_ln284_2_reg_1060) and (io_acc_block_signal_op119 = ap_const_logic_0))) and (ap_const_lv1_1 = and_ln284_2_reg_1060) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_stream_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_2_V_blk_n_assign_proc : process(res_stream_V_data_2_V_full_n, ap_CS_fsm_state4, and_ln284_2_reg_1060)
    begin
        if (((ap_const_lv1_1 = and_ln284_2_reg_1060) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_stream_V_data_2_V_blk_n <= res_stream_V_data_2_V_full_n;
        else 
            res_stream_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_2_V_din <= res_out_2_V_reg_1074;

    res_stream_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state4, and_ln284_2_reg_1060, io_acc_block_signal_op119)
    begin
        if ((not(((ap_const_lv1_1 = and_ln284_2_reg_1060) and (io_acc_block_signal_op119 = ap_const_logic_0))) and (ap_const_lv1_1 = and_ln284_2_reg_1060) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_stream_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_3_V_blk_n_assign_proc : process(res_stream_V_data_3_V_full_n, ap_CS_fsm_state4, and_ln284_2_reg_1060)
    begin
        if (((ap_const_lv1_1 = and_ln284_2_reg_1060) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_stream_V_data_3_V_blk_n <= res_stream_V_data_3_V_full_n;
        else 
            res_stream_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_3_V_din <= res_out_3_V_reg_1079;

    res_stream_V_data_3_V_write_assign_proc : process(ap_CS_fsm_state4, and_ln284_2_reg_1060, io_acc_block_signal_op119)
    begin
        if ((not(((ap_const_lv1_1 = and_ln284_2_reg_1060) and (io_acc_block_signal_op119 = ap_const_logic_0))) and (ap_const_lv1_1 = and_ln284_2_reg_1060) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_stream_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln313_fu_824_p3 <= 
        ap_const_lv32_2 when (icmp_ln284_1_reg_1043(0) = '1') else 
        add_ln313_fu_819_p2;
    select_ln318_fu_784_p3 <= 
        ap_const_lv32_2 when (icmp_ln284_reg_1033(0) = '1') else 
        add_ln318_fu_779_p2;
    tmp_1_fu_713_p4 <= pX_4(31 downto 1);
    tmp_fu_693_p4 <= pY_4(31 downto 1);
end behav;
