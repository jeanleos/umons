// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config8_s_HH_
#define _pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config8_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_axi_mux_42_4_1_1.h"
#include "pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config8_s_line_bufpcA.h"

namespace ap_rtl {

struct pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config8_s : public sc_module {
    // Port declarations 34
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<4> > data_V_data_0_V_dout;
    sc_in< sc_logic > data_V_data_0_V_empty_n;
    sc_out< sc_logic > data_V_data_0_V_read;
    sc_in< sc_lv<4> > data_V_data_1_V_dout;
    sc_in< sc_logic > data_V_data_1_V_empty_n;
    sc_out< sc_logic > data_V_data_1_V_read;
    sc_in< sc_lv<4> > data_V_data_2_V_dout;
    sc_in< sc_logic > data_V_data_2_V_empty_n;
    sc_out< sc_logic > data_V_data_2_V_read;
    sc_in< sc_lv<4> > data_V_data_3_V_dout;
    sc_in< sc_logic > data_V_data_3_V_empty_n;
    sc_out< sc_logic > data_V_data_3_V_read;
    sc_out< sc_lv<4> > res_V_data_0_V_din;
    sc_in< sc_logic > res_V_data_0_V_full_n;
    sc_out< sc_logic > res_V_data_0_V_write;
    sc_out< sc_lv<4> > res_V_data_1_V_din;
    sc_in< sc_logic > res_V_data_1_V_full_n;
    sc_out< sc_logic > res_V_data_1_V_write;
    sc_out< sc_lv<4> > res_V_data_2_V_din;
    sc_in< sc_logic > res_V_data_2_V_full_n;
    sc_out< sc_logic > res_V_data_2_V_write;
    sc_out< sc_lv<4> > res_V_data_3_V_din;
    sc_in< sc_logic > res_V_data_3_V_full_n;
    sc_out< sc_logic > res_V_data_3_V_write;
    sc_signal< sc_lv<6> > ap_var_for_const0;


    // Module declarations
    pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config8_s(sc_module_name name);
    SC_HAS_PROCESS(pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config8_s);

    ~pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config8_s();

    sc_trace_file* mVcdFile;

    pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config8_s_line_bufpcA* line_buffer_Array_V_7_0_0_U;
    pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config8_s_line_bufpcA* line_buffer_Array_V_7_0_1_U;
    pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config8_s_line_bufpcA* line_buffer_Array_V_7_0_2_U;
    pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_4_2_5_3_0_4u_config8_s_line_bufpcA* line_buffer_Array_V_7_0_3_U;
    myproject_axi_mux_42_4_1_1<1,1,4,4,4,4,2,4>* myproject_axi_mux_42_4_1_1_U213;
    myproject_axi_mux_42_4_1_1<1,1,4,4,4,4,2,4>* myproject_axi_mux_42_4_1_1_U214;
    myproject_axi_mux_42_4_1_1<1,1,4,4,4,4,2,4>* myproject_axi_mux_42_4_1_1_U215;
    myproject_axi_mux_42_4_1_1<1,1,4,4,4,4,2,4>* myproject_axi_mux_42_4_1_1_U216;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<32> > pX;
    sc_signal< sc_lv<32> > sX;
    sc_signal< sc_lv<32> > pY;
    sc_signal< sc_lv<32> > sY;
    sc_signal< sc_lv<4> > kernel_data_V_7_4;
    sc_signal< sc_lv<4> > kernel_data_V_7_5;
    sc_signal< sc_lv<4> > kernel_data_V_7_6;
    sc_signal< sc_lv<4> > kernel_data_V_7_7;
    sc_signal< sc_lv<4> > kernel_data_V_7_12;
    sc_signal< sc_lv<4> > kernel_data_V_7_13;
    sc_signal< sc_lv<4> > kernel_data_V_7_14;
    sc_signal< sc_lv<4> > kernel_data_V_7_15;
    sc_signal< sc_logic > line_buffer_Array_V_7_0_0_ce0;
    sc_signal< sc_logic > line_buffer_Array_V_7_0_0_we0;
    sc_signal< sc_lv<4> > line_buffer_Array_V_7_0_0_q0;
    sc_signal< sc_logic > line_buffer_Array_V_7_0_1_ce0;
    sc_signal< sc_logic > line_buffer_Array_V_7_0_1_we0;
    sc_signal< sc_lv<4> > line_buffer_Array_V_7_0_1_q0;
    sc_signal< sc_logic > line_buffer_Array_V_7_0_2_ce0;
    sc_signal< sc_logic > line_buffer_Array_V_7_0_2_we0;
    sc_signal< sc_lv<4> > line_buffer_Array_V_7_0_2_q0;
    sc_signal< sc_logic > line_buffer_Array_V_7_0_3_ce0;
    sc_signal< sc_logic > line_buffer_Array_V_7_0_3_we0;
    sc_signal< sc_lv<4> > line_buffer_Array_V_7_0_3_q0;
    sc_signal< sc_logic > data_V_data_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > icmp_ln241_reg_693;
    sc_signal< sc_logic > data_V_data_1_V_blk_n;
    sc_signal< sc_logic > data_V_data_2_V_blk_n;
    sc_signal< sc_logic > data_V_data_3_V_blk_n;
    sc_signal< sc_logic > res_V_data_0_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > and_ln191_2_reg_766;
    sc_signal< sc_logic > res_V_data_1_V_blk_n;
    sc_signal< sc_logic > res_V_data_2_V_blk_n;
    sc_signal< sc_logic > res_V_data_3_V_blk_n;
    sc_signal< sc_lv<13> > indvar_flatten_reg_140;
    sc_signal< sc_lv<1> > icmp_ln241_fu_162_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<13> > add_ln241_fu_168_p2;
    sc_signal< sc_lv<13> > add_ln241_reg_697;
    sc_signal< sc_lv<4> > pool_window_3_V_reg_702;
    sc_signal< sc_logic > io_acc_block_signal_op20;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< sc_logic > io_acc_block_signal_op117;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<4> > pool_window_3_V_1_reg_710;
    sc_signal< sc_lv<4> > pool_window_3_V_2_reg_718;
    sc_signal< sc_lv<4> > pool_window_3_V_3_reg_726;
    sc_signal< sc_lv<4> > pool_window_1_V_reg_734;
    sc_signal< sc_lv<4> > pool_window_1_V_1_reg_742;
    sc_signal< sc_lv<4> > pool_window_1_V_2_reg_750;
    sc_signal< sc_lv<4> > pool_window_1_V_3_reg_758;
    sc_signal< sc_lv<1> > and_ln191_2_fu_282_p2;
    sc_signal< sc_lv<1> > icmp_ln212_fu_288_p2;
    sc_signal< sc_lv<1> > icmp_ln212_reg_770;
    sc_signal< sc_lv<32> > select_ln227_fu_312_p3;
    sc_signal< sc_lv<32> > select_ln227_reg_774;
    sc_signal< sc_lv<1> > icmp_ln216_fu_332_p2;
    sc_signal< sc_lv<1> > icmp_ln216_reg_779;
    sc_signal< sc_lv<32> > select_ln222_fu_356_p3;
    sc_signal< sc_lv<32> > select_ln222_reg_783;
    sc_signal< sc_lv<4> > pool_window_0_V_reg_788;
    sc_signal< sc_lv<4> > pool_window_0_V_1_reg_793;
    sc_signal< sc_lv<4> > pool_window_0_V_2_reg_798;
    sc_signal< sc_lv<4> > pool_window_0_V_3_reg_803;
    sc_signal< sc_lv<4> > pool_window_2_V_reg_808;
    sc_signal< sc_lv<4> > pool_window_2_V_1_reg_813;
    sc_signal< sc_lv<4> > pool_window_2_V_2_reg_818;
    sc_signal< sc_lv<4> > pool_window_2_V_3_reg_823;
    sc_signal< sc_lv<2> > select_ln66_3_fu_478_p3;
    sc_signal< sc_lv<2> > select_ln66_3_reg_828;
    sc_signal< sc_lv<2> > select_ln66_7_fu_528_p3;
    sc_signal< sc_lv<2> > select_ln66_7_reg_833;
    sc_signal< sc_lv<2> > select_ln66_11_fu_578_p3;
    sc_signal< sc_lv<2> > select_ln66_11_reg_838;
    sc_signal< sc_lv<2> > select_ln66_15_fu_628_p3;
    sc_signal< sc_lv<2> > select_ln66_15_reg_843;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<13> > ap_phi_mux_indvar_flatten_phi_fu_144_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_storemerge_i_i_reg_151;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter1_storemerge_i_i_reg_151;
    sc_signal< sc_lv<32> > add_ln225_fu_294_p2;
    sc_signal< sc_lv<32> > add_ln220_fu_338_p2;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_sY_load;
    sc_signal< sc_lv<4> > tmp_data_0_V_fu_647_p6;
    sc_signal< bool > ap_block_pp0_stage1_01001;
    sc_signal< sc_lv<4> > tmp_data_1_V_fu_657_p6;
    sc_signal< sc_lv<4> > tmp_data_2_V_fu_667_p6;
    sc_signal< sc_lv<4> > tmp_data_3_V_fu_677_p6;
    sc_signal< sc_lv<1> > icmp_ln191_fu_234_p2;
    sc_signal< sc_lv<1> > icmp_ln191_1_fu_244_p2;
    sc_signal< sc_lv<1> > icmp_ln191_2_fu_254_p2;
    sc_signal< sc_lv<1> > icmp_ln191_3_fu_264_p2;
    sc_signal< sc_lv<1> > and_ln191_1_fu_276_p2;
    sc_signal< sc_lv<1> > and_ln191_fu_270_p2;
    sc_signal< sc_lv<32> > add_ln227_fu_306_p2;
    sc_signal< sc_lv<32> > add_ln222_fu_350_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_fu_436_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_1_fu_448_p2;
    sc_signal< sc_lv<4> > select_ln66_fu_441_p3;
    sc_signal< sc_lv<4> > select_ln66_2_fu_461_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_2_fu_468_p2;
    sc_signal< sc_lv<2> > select_ln66_1_fu_453_p3;
    sc_signal< sc_lv<2> > zext_ln66_fu_474_p1;
    sc_signal< sc_lv<1> > icmp_ln1496_4_fu_486_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_5_fu_498_p2;
    sc_signal< sc_lv<4> > select_ln66_4_fu_491_p3;
    sc_signal< sc_lv<4> > select_ln66_6_fu_511_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_6_fu_518_p2;
    sc_signal< sc_lv<2> > select_ln66_5_fu_503_p3;
    sc_signal< sc_lv<2> > zext_ln66_1_fu_524_p1;
    sc_signal< sc_lv<1> > icmp_ln1496_7_fu_536_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_8_fu_548_p2;
    sc_signal< sc_lv<4> > select_ln66_8_fu_541_p3;
    sc_signal< sc_lv<4> > select_ln66_10_fu_561_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_9_fu_568_p2;
    sc_signal< sc_lv<2> > select_ln66_9_fu_553_p3;
    sc_signal< sc_lv<2> > zext_ln66_2_fu_574_p1;
    sc_signal< sc_lv<1> > icmp_ln1496_3_fu_586_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_10_fu_598_p2;
    sc_signal< sc_lv<4> > select_ln66_12_fu_591_p3;
    sc_signal< sc_lv<4> > select_ln66_14_fu_611_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_11_fu_618_p2;
    sc_signal< sc_lv<2> > select_ln66_13_fu_603_p3;
    sc_signal< sc_lv<2> > zext_ln66_3_fu_624_p1;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_322;
    sc_signal< bool > ap_condition_633;
    sc_signal< bool > ap_condition_637;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<13> ap_const_lv13_1000;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln220_fu_338_p2();
    void thread_add_ln222_fu_350_p2();
    void thread_add_ln225_fu_294_p2();
    void thread_add_ln227_fu_306_p2();
    void thread_add_ln241_fu_168_p2();
    void thread_and_ln191_1_fu_276_p2();
    void thread_and_ln191_2_fu_282_p2();
    void thread_and_ln191_fu_270_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_01001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage1_iter1();
    void thread_ap_condition_322();
    void thread_ap_condition_633();
    void thread_ap_condition_637();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_144_p4();
    void thread_ap_phi_reg_pp0_iter0_storemerge_i_i_reg_151();
    void thread_ap_ready();
    void thread_ap_sig_allocacmp_sY_load();
    void thread_data_V_data_0_V_blk_n();
    void thread_data_V_data_0_V_read();
    void thread_data_V_data_1_V_blk_n();
    void thread_data_V_data_1_V_read();
    void thread_data_V_data_2_V_blk_n();
    void thread_data_V_data_2_V_read();
    void thread_data_V_data_3_V_blk_n();
    void thread_data_V_data_3_V_read();
    void thread_icmp_ln1496_10_fu_598_p2();
    void thread_icmp_ln1496_11_fu_618_p2();
    void thread_icmp_ln1496_1_fu_448_p2();
    void thread_icmp_ln1496_2_fu_468_p2();
    void thread_icmp_ln1496_3_fu_586_p2();
    void thread_icmp_ln1496_4_fu_486_p2();
    void thread_icmp_ln1496_5_fu_498_p2();
    void thread_icmp_ln1496_6_fu_518_p2();
    void thread_icmp_ln1496_7_fu_536_p2();
    void thread_icmp_ln1496_8_fu_548_p2();
    void thread_icmp_ln1496_9_fu_568_p2();
    void thread_icmp_ln1496_fu_436_p2();
    void thread_icmp_ln191_1_fu_244_p2();
    void thread_icmp_ln191_2_fu_254_p2();
    void thread_icmp_ln191_3_fu_264_p2();
    void thread_icmp_ln191_fu_234_p2();
    void thread_icmp_ln212_fu_288_p2();
    void thread_icmp_ln216_fu_332_p2();
    void thread_icmp_ln241_fu_162_p2();
    void thread_internal_ap_ready();
    void thread_io_acc_block_signal_op117();
    void thread_io_acc_block_signal_op20();
    void thread_line_buffer_Array_V_7_0_0_ce0();
    void thread_line_buffer_Array_V_7_0_0_we0();
    void thread_line_buffer_Array_V_7_0_1_ce0();
    void thread_line_buffer_Array_V_7_0_1_we0();
    void thread_line_buffer_Array_V_7_0_2_ce0();
    void thread_line_buffer_Array_V_7_0_2_we0();
    void thread_line_buffer_Array_V_7_0_3_ce0();
    void thread_line_buffer_Array_V_7_0_3_we0();
    void thread_real_start();
    void thread_res_V_data_0_V_blk_n();
    void thread_res_V_data_0_V_din();
    void thread_res_V_data_0_V_write();
    void thread_res_V_data_1_V_blk_n();
    void thread_res_V_data_1_V_din();
    void thread_res_V_data_1_V_write();
    void thread_res_V_data_2_V_blk_n();
    void thread_res_V_data_2_V_din();
    void thread_res_V_data_2_V_write();
    void thread_res_V_data_3_V_blk_n();
    void thread_res_V_data_3_V_din();
    void thread_res_V_data_3_V_write();
    void thread_select_ln222_fu_356_p3();
    void thread_select_ln227_fu_312_p3();
    void thread_select_ln66_10_fu_561_p3();
    void thread_select_ln66_11_fu_578_p3();
    void thread_select_ln66_12_fu_591_p3();
    void thread_select_ln66_13_fu_603_p3();
    void thread_select_ln66_14_fu_611_p3();
    void thread_select_ln66_15_fu_628_p3();
    void thread_select_ln66_1_fu_453_p3();
    void thread_select_ln66_2_fu_461_p3();
    void thread_select_ln66_3_fu_478_p3();
    void thread_select_ln66_4_fu_491_p3();
    void thread_select_ln66_5_fu_503_p3();
    void thread_select_ln66_6_fu_511_p3();
    void thread_select_ln66_7_fu_528_p3();
    void thread_select_ln66_8_fu_541_p3();
    void thread_select_ln66_9_fu_553_p3();
    void thread_select_ln66_fu_441_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_zext_ln66_1_fu_524_p1();
    void thread_zext_ln66_2_fu_574_p1();
    void thread_zext_ln66_3_fu_624_p1();
    void thread_zext_ln66_fu_474_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
