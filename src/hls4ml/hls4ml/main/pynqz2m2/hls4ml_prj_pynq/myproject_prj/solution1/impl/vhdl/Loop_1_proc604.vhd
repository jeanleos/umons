-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Loop_1_proc604 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in_local_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    in_local_V_data_0_V_full_n : IN STD_LOGIC;
    in_local_V_data_0_V_write : OUT STD_LOGIC;
    in_local_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    in_local_V_data_1_V_full_n : IN STD_LOGIC;
    in_local_V_data_1_V_write : OUT STD_LOGIC;
    in_local_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    in_local_V_data_2_V_full_n : IN STD_LOGIC;
    in_local_V_data_2_V_write : OUT STD_LOGIC;
    in_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    in_r_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    is_last_0_i_out_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    is_last_0_i_out_out_full_n : IN STD_LOGIC;
    is_last_0_i_out_out_write : OUT STD_LOGIC );
end;


architecture behav of Loop_1_proc604 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_A : STD_LOGIC_VECTOR (11 downto 0) := "000000001010";
    constant ap_const_lv12_FF6 : STD_LOGIC_VECTOR (11 downto 0) := "111111110110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv6_F : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv48_FFFFFFFFFFFF : STD_LOGIC_VECTOR (47 downto 0) := "111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in_local_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln20_fu_212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_local_V_data_1_V_blk_n : STD_LOGIC;
    signal in_local_V_data_2_V_blk_n : STD_LOGIC;
    signal in_r_TDATA_blk_n : STD_LOGIC;
    signal is_last_0_i_out_out_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln17_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_206_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_685 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal j_fu_218_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_reg_693 : STD_LOGIC_VECTOR (1 downto 0);
    signal io_acc_block_signal_op47 : STD_LOGIC;
    signal ap_block_state3 : BOOLEAN;
    signal in_data_tmp_reg_698 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln556_fu_275_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln556_reg_704 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal p_Result_s_reg_709 : STD_LOGIC_VECTOR (0 downto 0);
    signal exp_tmp_V_reg_714 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_fu_297_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln565_reg_719 : STD_LOGIC_VECTOR (51 downto 0);
    signal man_V_2_fu_321_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_2_reg_724 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln571_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_729 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_reg_735 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_357_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_741 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_reg_748 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_fu_371_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln583_reg_754 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_reg_760 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal and_ln585_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_reg_770 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_reg_775 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_reg_780 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_1_fu_482_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln603_1_reg_786 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_402_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_reg_791 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal or_ln603_2_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_2_reg_796 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_2_fu_527_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln603_2_reg_801 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal shl_ln_fu_533_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln_reg_806 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_449_fu_541_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_449_reg_813 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln203_fu_547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln203_reg_819 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln203_fu_553_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln203_reg_827 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln203_1_fu_579_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln203_1_reg_832 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal shl_ln203_fu_589_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal shl_ln203_reg_837 : STD_LOGIC_VECTOR (47 downto 0);
    signal i_0_i_i_reg_162 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal j_0_i_i_reg_173 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal is_last_1_fu_126 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_last_fu_233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctype_data_V_fu_130 : STD_LOGIC_VECTOR (47 downto 0);
    signal ctype_data_V_1_fu_658_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_fu_185_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_271_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_171_i_fu_304_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_9_fu_311_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_315_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal zext_ln461_fu_301_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_333_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_fu_345_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_351_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln581_fu_385_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_402_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln696_fu_407_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_410_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_1_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_fu_418_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal xor_ln571_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln582_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_1_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln581_1_fu_509_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln604_fu_515_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln586_fu_512_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln603_fu_520_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln603_3_fu_559_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_fu_569_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln203_2_fu_574_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln203_fu_565_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln203_1_fu_585_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal select_ln203_1_fu_595_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_17_fu_607_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln203_2_fu_600_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln203_3_fu_604_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal shl_ln203_1_fu_622_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln203_fu_628_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal and_ln203_fu_634_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal xor_ln203_fu_640_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal select_ln203_3_fu_616_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal and_ln203_1_fu_646_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal and_ln203_2_fu_652_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_fu_185_ce : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal regslice_both_in_last_V_U_apdone_blk : STD_LOGIC;
    signal in_r_TLAST_int : STD_LOGIC_VECTOR (0 downto 0);
    signal in_r_TVALID_int : STD_LOGIC;
    signal in_r_TREADY_int : STD_LOGIC;
    signal regslice_both_in_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_data_U_apdone_blk : STD_LOGIC;
    signal in_r_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal regslice_both_in_data_U_vld_out : STD_LOGIC;
    signal regslice_both_in_data_U_ack_in : STD_LOGIC;

    component myproject_axi_fpext_32ns_64_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component myproject_axi_ashr_54ns_32ns_54_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        OP : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (53 downto 0);
        din1 : IN STD_LOGIC_VECTOR (53 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (53 downto 0) );
    end component;


    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    myproject_axi_fpext_32ns_64_3_1_U1 : component myproject_axi_fpext_32ns_64_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => in_r_TDATA_int,
        ce => grp_fu_185_ce,
        dout => grp_fu_185_p1);

    myproject_axi_ashr_54ns_32ns_54_2_1_U2 : component myproject_axi_ashr_54ns_32ns_54_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        OP => 2,
        din0_WIDTH => 54,
        din1_WIDTH => 32,
        dout_WIDTH => 54)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => man_V_2_reg_724,
        din1 => grp_fu_402_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_402_p2);

    regslice_both_in_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_r_TLAST,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_last_V_U_ack_in,
        data_out => in_r_TLAST_int,
        vld_out => in_r_TVALID_int,
        ack_out => in_r_TREADY_int,
        apdone_blk => regslice_both_in_last_V_U_apdone_blk);

    regslice_both_in_data_U : component regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_r_TDATA,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_data_U_ack_in,
        data_out => in_r_TDATA_int,
        vld_out => regslice_both_in_data_U_vld_out,
        ack_out => in_r_TREADY_int,
        apdone_blk => regslice_both_in_data_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((icmp_ln17_fu_200_p2 = ap_const_lv1_1) and (is_last_0_i_out_out_full_n = ap_const_logic_0))) and (icmp_ln17_fu_200_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_i_i_reg_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((icmp_ln20_fu_212_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (io_acc_block_signal_op47 = ap_const_logic_0)))) and (icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_0_i_i_reg_162 <= i_reg_685;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_i_i_reg_162 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    is_last_1_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((icmp_ln20_fu_212_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (io_acc_block_signal_op47 = ap_const_logic_0)))) and (icmp_ln20_fu_212_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                is_last_1_fu_126 <= is_last_fu_233_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                is_last_1_fu_126 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    j_0_i_i_reg_173_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                j_0_i_i_reg_173 <= j_reg_693;
            elsif ((not(((icmp_ln17_fu_200_p2 = ap_const_lv1_1) and (is_last_0_i_out_out_full_n = ap_const_logic_0))) and (icmp_ln17_fu_200_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_0_i_i_reg_173 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                and_ln585_reg_770 <= and_ln585_fu_447_p2;
                and_ln603_reg_775 <= and_ln603_fu_470_p2;
                or_ln603_reg_780 <= or_ln603_fu_476_p2;
                select_ln603_1_reg_786 <= select_ln603_1_fu_482_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                ashr_ln586_reg_791 <= grp_fu_402_p2;
                or_ln603_2_reg_796 <= or_ln603_2_fu_504_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                ctype_data_V_fu_130 <= ctype_data_V_1_fu_658_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                    empty_449_reg_813(5 downto 4) <= empty_449_fu_541_p2(5 downto 4);
                icmp_ln203_reg_819 <= icmp_ln203_fu_547_p2;
                    shl_ln_reg_806(5 downto 4) <= shl_ln_fu_533_p3(5 downto 4);
                    sub_ln203_reg_827(5 downto 4) <= sub_ln203_fu_553_p2(5 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                exp_tmp_V_reg_714 <= ireg_V_fu_271_p1(62 downto 52);
                p_Result_s_reg_709 <= ireg_V_fu_271_p1(63 downto 63);
                trunc_ln556_reg_704 <= trunc_ln556_fu_275_p1;
                trunc_ln565_reg_719 <= trunc_ln565_fu_297_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln17_fu_200_p2 = ap_const_lv1_1) and (is_last_0_i_out_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                i_reg_685 <= i_fu_206_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                icmp_ln571_reg_729 <= icmp_ln571_fu_328_p2;
                icmp_ln581_reg_735 <= icmp_ln581_fu_339_p2;
                icmp_ln582_reg_748 <= icmp_ln582_fu_365_p2;
                man_V_2_reg_724 <= man_V_2_fu_321_p3;
                sh_amt_reg_741 <= sh_amt_fu_357_p3;
                tmp_reg_760 <= sh_amt_fu_357_p3(11 downto 4);
                trunc_ln583_reg_754 <= trunc_ln583_fu_371_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((icmp_ln20_fu_212_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (io_acc_block_signal_op47 = ap_const_logic_0)))) and (icmp_ln20_fu_212_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                in_data_tmp_reg_698 <= in_r_TDATA_int;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((icmp_ln20_fu_212_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (io_acc_block_signal_op47 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                j_reg_693 <= j_fu_218_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln603_2_reg_796 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                select_ln603_2_reg_801 <= select_ln603_2_fu_527_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                shl_ln203_reg_837 <= shl_ln203_fu_589_p2;
                sub_ln203_1_reg_832 <= sub_ln203_1_fu_579_p2;
            end if;
        end if;
    end process;
    shl_ln_reg_806(3 downto 0) <= "0000";
    empty_449_reg_813(3 downto 0) <= "1111";
    sub_ln203_reg_827(3 downto 0) <= "1111";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, is_last_0_i_out_out_full_n, ap_CS_fsm_state3, icmp_ln20_fu_212_p2, ap_CS_fsm_state2, icmp_ln17_fu_200_p2, io_acc_block_signal_op47, in_r_TVALID_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((icmp_ln17_fu_200_p2 = ap_const_lv1_1) and (is_last_0_i_out_out_full_n = ap_const_logic_0))) and (icmp_ln17_fu_200_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((icmp_ln17_fu_200_p2 = ap_const_lv1_1) and (is_last_0_i_out_out_full_n = ap_const_logic_0))) and (icmp_ln17_fu_200_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not((((icmp_ln20_fu_212_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (io_acc_block_signal_op47 = ap_const_logic_0)))) and (icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not((((icmp_ln20_fu_212_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (io_acc_block_signal_op47 = ap_const_logic_0)))) and (icmp_ln20_fu_212_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    F2_fu_333_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_fu_301_p1));
    add_ln581_fu_345_p2 <= std_logic_vector(signed(ap_const_lv12_FF6) + signed(F2_fu_333_p2));
    and_ln203_1_fu_646_p2 <= (xor_ln203_fu_640_p2 and ctype_data_V_fu_130);
    and_ln203_2_fu_652_p2 <= (select_ln203_3_fu_616_p3 and and_ln203_fu_634_p2);
    and_ln203_fu_634_p2 <= (shl_ln203_1_fu_622_p2 and lshr_ln203_fu_628_p2);
    and_ln581_fu_436_p2 <= (xor_ln582_fu_430_p2 and icmp_ln581_reg_735);
    and_ln582_fu_494_p2 <= (xor_ln571_fu_489_p2 and icmp_ln582_reg_748);
    and_ln585_1_fu_453_p2 <= (icmp_ln585_fu_388_p2 and and_ln581_fu_436_p2);
    and_ln585_fu_447_p2 <= (xor_ln585_fu_441_p2 and and_ln581_fu_436_p2);
    and_ln603_fu_470_p2 <= (xor_ln581_fu_464_p2 and icmp_ln603_fu_393_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_assign_proc : process(is_last_0_i_out_out_full_n, icmp_ln17_fu_200_p2)
    begin
                ap_block_state2 <= ((icmp_ln17_fu_200_p2 = ap_const_lv1_1) and (is_last_0_i_out_out_full_n = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(icmp_ln20_fu_212_p2, io_acc_block_signal_op47, in_r_TVALID_int)
    begin
                ap_block_state3 <= (((icmp_ln20_fu_212_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (io_acc_block_signal_op47 = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, is_last_0_i_out_out_full_n, ap_CS_fsm_state2, icmp_ln17_fu_200_p2)
    begin
        if ((not(((icmp_ln17_fu_200_p2 = ap_const_lv1_1) and (is_last_0_i_out_out_full_n = ap_const_logic_0))) and (icmp_ln17_fu_200_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    bitcast_ln696_fu_407_p1 <= in_data_tmp_reg_698;
    ctype_data_V_1_fu_658_p2 <= (and_ln203_2_fu_652_p2 or and_ln203_1_fu_646_p2);
    empty_449_fu_541_p2 <= (shl_ln_fu_533_p3 or ap_const_lv6_F);

    grp_fu_185_ce_assign_proc : process(ap_CS_fsm_state3, icmp_ln20_fu_212_p2, io_acc_block_signal_op47, ap_CS_fsm_state5, ap_CS_fsm_state4, in_r_TVALID_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (not((((icmp_ln20_fu_212_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (io_acc_block_signal_op47 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_fu_185_ce <= ap_const_logic_1;
        else 
            grp_fu_185_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_fu_385_p1),54));
    i_fu_206_p2 <= std_logic_vector(unsigned(i_0_i_i_reg_162) + unsigned(ap_const_lv11_1));
    icmp_ln17_fu_200_p2 <= "1" when (i_0_i_i_reg_162 = ap_const_lv11_400) else "0";
    icmp_ln203_fu_547_p2 <= "1" when (unsigned(shl_ln_fu_533_p3) > unsigned(empty_449_fu_541_p2)) else "0";
    icmp_ln20_fu_212_p2 <= "1" when (j_0_i_i_reg_173 = ap_const_lv2_3) else "0";
    icmp_ln571_fu_328_p2 <= "1" when (trunc_ln556_reg_704 = ap_const_lv63_0) else "0";
    icmp_ln581_fu_339_p2 <= "1" when (signed(F2_fu_333_p2) > signed(ap_const_lv12_A)) else "0";
    icmp_ln582_fu_365_p2 <= "1" when (F2_fu_333_p2 = ap_const_lv12_A) else "0";
    icmp_ln585_fu_388_p2 <= "1" when (unsigned(sh_amt_reg_741) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln603_fu_393_p2 <= "1" when (tmp_reg_760 = ap_const_lv8_0) else "0";

    in_local_V_data_0_V_blk_n_assign_proc : process(in_local_V_data_0_V_full_n, ap_CS_fsm_state3, icmp_ln20_fu_212_p2)
    begin
        if (((icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            in_local_V_data_0_V_blk_n <= in_local_V_data_0_V_full_n;
        else 
            in_local_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_0_V_din <= ctype_data_V_fu_130(16 - 1 downto 0);

    in_local_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state3, icmp_ln20_fu_212_p2, io_acc_block_signal_op47, in_r_TVALID_int)
    begin
        if ((not((((icmp_ln20_fu_212_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (io_acc_block_signal_op47 = ap_const_logic_0)))) and (icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            in_local_V_data_0_V_write <= ap_const_logic_1;
        else 
            in_local_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_local_V_data_1_V_blk_n_assign_proc : process(in_local_V_data_1_V_full_n, ap_CS_fsm_state3, icmp_ln20_fu_212_p2)
    begin
        if (((icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            in_local_V_data_1_V_blk_n <= in_local_V_data_1_V_full_n;
        else 
            in_local_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_1_V_din <= ctype_data_V_fu_130(31 downto 16);

    in_local_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state3, icmp_ln20_fu_212_p2, io_acc_block_signal_op47, in_r_TVALID_int)
    begin
        if ((not((((icmp_ln20_fu_212_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (io_acc_block_signal_op47 = ap_const_logic_0)))) and (icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            in_local_V_data_1_V_write <= ap_const_logic_1;
        else 
            in_local_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_local_V_data_2_V_blk_n_assign_proc : process(in_local_V_data_2_V_full_n, ap_CS_fsm_state3, icmp_ln20_fu_212_p2)
    begin
        if (((icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            in_local_V_data_2_V_blk_n <= in_local_V_data_2_V_full_n;
        else 
            in_local_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_2_V_din <= ctype_data_V_fu_130(47 downto 32);

    in_local_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state3, icmp_ln20_fu_212_p2, io_acc_block_signal_op47, in_r_TVALID_int)
    begin
        if ((not((((icmp_ln20_fu_212_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (io_acc_block_signal_op47 = ap_const_logic_0)))) and (icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            in_local_V_data_2_V_write <= ap_const_logic_1;
        else 
            in_local_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state3, icmp_ln20_fu_212_p2, in_r_TVALID_int)
    begin
        if (((icmp_ln20_fu_212_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            in_r_TDATA_blk_n <= in_r_TVALID_int;
        else 
            in_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_r_TREADY_assign_proc : process(in_r_TVALID, regslice_both_in_last_V_U_ack_in)
    begin
        if (((in_r_TVALID = ap_const_logic_1) and (regslice_both_in_last_V_U_ack_in = ap_const_logic_1))) then 
            in_r_TREADY <= ap_const_logic_1;
        else 
            in_r_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    in_r_TREADY_int_assign_proc : process(ap_CS_fsm_state3, icmp_ln20_fu_212_p2, io_acc_block_signal_op47, in_r_TVALID_int)
    begin
        if ((not((((icmp_ln20_fu_212_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_212_p2 = ap_const_lv1_1) and (io_acc_block_signal_op47 = ap_const_logic_0)))) and (icmp_ln20_fu_212_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            in_r_TREADY_int <= ap_const_logic_1;
        else 
            in_r_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(is_last_0_i_out_out_full_n, ap_CS_fsm_state2, icmp_ln17_fu_200_p2)
    begin
        if ((not(((icmp_ln17_fu_200_p2 = ap_const_lv1_1) and (is_last_0_i_out_out_full_n = ap_const_logic_0))) and (icmp_ln17_fu_200_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op47 <= (in_local_V_data_2_V_full_n and in_local_V_data_1_V_full_n and in_local_V_data_0_V_full_n);
    ireg_V_fu_271_p1 <= grp_fu_185_p1;

    is_last_0_i_out_out_blk_n_assign_proc : process(is_last_0_i_out_out_full_n, ap_CS_fsm_state2, icmp_ln17_fu_200_p2)
    begin
        if (((icmp_ln17_fu_200_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            is_last_0_i_out_out_blk_n <= is_last_0_i_out_out_full_n;
        else 
            is_last_0_i_out_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    is_last_0_i_out_out_din <= is_last_1_fu_126;

    is_last_0_i_out_out_write_assign_proc : process(is_last_0_i_out_out_full_n, ap_CS_fsm_state2, icmp_ln17_fu_200_p2)
    begin
        if ((not(((icmp_ln17_fu_200_p2 = ap_const_lv1_1) and (is_last_0_i_out_out_full_n = ap_const_logic_0))) and (icmp_ln17_fu_200_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            is_last_0_i_out_out_write <= ap_const_logic_1;
        else 
            is_last_0_i_out_out_write <= ap_const_logic_0;
        end if; 
    end process;

    is_last_fu_233_p2 <= (is_last_1_fu_126 or in_r_TLAST_int);
    j_fu_218_p2 <= std_logic_vector(unsigned(j_0_i_i_reg_173) + unsigned(ap_const_lv2_1));
    lshr_ln203_fu_628_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv48_FFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln203_3_fu_604_p1(31-1 downto 0)))));
    man_V_1_fu_315_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_9_fu_311_p1));
    man_V_2_fu_321_p3 <= 
        man_V_1_fu_315_p2 when (p_Result_s_reg_709(0) = '1') else 
        p_Result_9_fu_311_p1;
    or_ln581_fu_459_p2 <= (or_ln582_fu_426_p2 or icmp_ln581_reg_735);
    or_ln582_fu_426_p2 <= (icmp_ln582_reg_748 or icmp_ln571_reg_729);
    or_ln603_1_fu_499_p2 <= (and_ln585_reg_770 or and_ln582_fu_494_p2);
    or_ln603_2_fu_504_p2 <= (or_ln603_reg_780 or or_ln603_1_fu_499_p2);
    or_ln603_fu_476_p2 <= (and_ln603_fu_470_p2 or and_ln585_1_fu_453_p2);
    p_Result_9_fu_311_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_171_i_fu_304_p3),54));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    select_ln203_1_fu_595_p3 <= 
        empty_449_reg_813 when (icmp_ln203_reg_819(0) = '1') else 
        shl_ln_reg_806;
    select_ln203_2_fu_574_p3 <= 
        sub_ln203_reg_827 when (icmp_ln203_reg_819(0) = '1') else 
        shl_ln_reg_806;
    select_ln203_3_fu_616_p3 <= 
        tmp_17_fu_607_p4 when (icmp_ln203_reg_819(0) = '1') else 
        shl_ln203_reg_837;
    select_ln203_fu_569_p3 <= 
        shl_ln_reg_806 when (icmp_ln203_reg_819(0) = '1') else 
        empty_449_reg_813;
    select_ln588_fu_418_p3 <= 
        ap_const_lv16_FFFF when (tmp_16_fu_410_p3(0) = '1') else 
        ap_const_lv16_0;
    select_ln603_1_fu_482_p3 <= 
        select_ln588_fu_418_p3 when (and_ln585_fu_447_p2(0) = '1') else 
        trunc_ln583_reg_754;
    select_ln603_2_fu_527_p3 <= 
        select_ln603_fu_520_p3 when (or_ln603_reg_780(0) = '1') else 
        select_ln603_1_reg_786;
    select_ln603_3_fu_559_p3 <= 
        select_ln603_2_reg_801 when (or_ln603_2_reg_796(0) = '1') else 
        ap_const_lv16_0;
    select_ln603_fu_520_p3 <= 
        shl_ln604_fu_515_p2 when (and_ln603_reg_775(0) = '1') else 
        trunc_ln586_fu_512_p1;
        sext_ln581_1_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_741),16));

        sext_ln581_fu_385_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_741),32));

    sh_amt_fu_357_p3 <= 
        add_ln581_fu_345_p2 when (icmp_ln581_fu_339_p2(0) = '1') else 
        sub_ln581_fu_351_p2;
    shl_ln203_1_fu_622_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv48_FFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln203_2_fu_600_p1(31-1 downto 0)))));
    shl_ln203_fu_589_p2 <= std_logic_vector(shift_left(unsigned(zext_ln203_fu_565_p1),to_integer(unsigned('0' & zext_ln203_1_fu_585_p1(31-1 downto 0)))));
    shl_ln604_fu_515_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_reg_754),to_integer(unsigned('0' & sext_ln581_1_fu_509_p1(16-1 downto 0)))));
    shl_ln_fu_533_p3 <= (j_0_i_i_reg_173 & ap_const_lv4_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln203_1_fu_579_p2 <= std_logic_vector(signed(ap_const_lv6_2F) - signed(select_ln203_fu_569_p3));
    sub_ln203_fu_553_p2 <= std_logic_vector(signed(ap_const_lv6_2F) - signed(shl_ln_fu_533_p3));
    sub_ln581_fu_351_p2 <= std_logic_vector(unsigned(ap_const_lv12_A) - unsigned(F2_fu_333_p2));
    tmp_16_fu_410_p3 <= bitcast_ln696_fu_407_p1(31 downto 31);
    tmp_171_i_fu_304_p3 <= (ap_const_lv1_1 & trunc_ln565_reg_719);
    
    tmp_17_fu_607_p4_proc : process(shl_ln203_reg_837)
    variable vlo_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable tmp_17_fu_607_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_2F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := shl_ln203_reg_837;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_2F(6-1 downto 0)));
            for tmp_17_fu_607_p4_i in 0 to 48-1 loop
                v0_cpy(tmp_17_fu_607_p4_i) := shl_ln203_reg_837(48-1-tmp_17_fu_607_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(48-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_17_fu_607_p4 <= resvalue(48-1 downto 0);
    end process;

    trunc_ln556_fu_275_p1 <= ireg_V_fu_271_p1(63 - 1 downto 0);
    trunc_ln565_fu_297_p1 <= ireg_V_fu_271_p1(52 - 1 downto 0);
    trunc_ln583_fu_371_p1 <= man_V_2_fu_321_p3(16 - 1 downto 0);
    trunc_ln586_fu_512_p1 <= ashr_ln586_reg_791(16 - 1 downto 0);
    xor_ln203_fu_640_p2 <= (ap_const_lv48_FFFFFFFFFFFF xor and_ln203_fu_634_p2);
    xor_ln571_fu_489_p2 <= (icmp_ln571_reg_729 xor ap_const_lv1_1);
    xor_ln581_fu_464_p2 <= (or_ln581_fu_459_p2 xor ap_const_lv1_1);
    xor_ln582_fu_430_p2 <= (or_ln582_fu_426_p2 xor ap_const_lv1_1);
    xor_ln585_fu_441_p2 <= (icmp_ln585_fu_388_p2 xor ap_const_lv1_1);
    zext_ln203_1_fu_585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln203_2_fu_574_p3),48));
    zext_ln203_2_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln203_1_fu_595_p3),48));
    zext_ln203_3_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln203_1_reg_832),48));
    zext_ln203_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln603_3_fu_559_p3),48));
    zext_ln461_fu_301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_reg_714),12));
end behav;
