// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_HH_
#define _pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_axi_mux_42_16_1_1.h"
#include "pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_buhbi.h"

namespace ap_rtl {

struct pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s : public sc_module {
    // Port declarations 34
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<16> > data_V_data_0_V_dout;
    sc_in< sc_logic > data_V_data_0_V_empty_n;
    sc_out< sc_logic > data_V_data_0_V_read;
    sc_in< sc_lv<16> > data_V_data_1_V_dout;
    sc_in< sc_logic > data_V_data_1_V_empty_n;
    sc_out< sc_logic > data_V_data_1_V_read;
    sc_in< sc_lv<16> > data_V_data_2_V_dout;
    sc_in< sc_logic > data_V_data_2_V_empty_n;
    sc_out< sc_logic > data_V_data_2_V_read;
    sc_in< sc_lv<16> > data_V_data_3_V_dout;
    sc_in< sc_logic > data_V_data_3_V_empty_n;
    sc_out< sc_logic > data_V_data_3_V_read;
    sc_out< sc_lv<16> > res_V_data_0_V_din;
    sc_in< sc_logic > res_V_data_0_V_full_n;
    sc_out< sc_logic > res_V_data_0_V_write;
    sc_out< sc_lv<16> > res_V_data_1_V_din;
    sc_in< sc_logic > res_V_data_1_V_full_n;
    sc_out< sc_logic > res_V_data_1_V_write;
    sc_out< sc_lv<16> > res_V_data_2_V_din;
    sc_in< sc_logic > res_V_data_2_V_full_n;
    sc_out< sc_logic > res_V_data_2_V_write;
    sc_out< sc_lv<16> > res_V_data_3_V_din;
    sc_in< sc_logic > res_V_data_3_V_full_n;
    sc_out< sc_logic > res_V_data_3_V_write;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s(sc_module_name name);
    SC_HAS_PROCESS(pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s);

    ~pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s();

    sc_trace_file* mVcdFile;

    pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_buhbi* line_buffer_Array_V_6_0_0_U;
    pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_buhbi* line_buffer_Array_V_6_0_1_U;
    pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_buhbi* line_buffer_Array_V_6_0_2_U;
    pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_buhbi* line_buffer_Array_V_6_0_3_U;
    myproject_axi_mux_42_16_1_1<1,1,16,16,16,16,2,16>* myproject_axi_mux_42_16_1_1_U107;
    myproject_axi_mux_42_16_1_1<1,1,16,16,16,16,2,16>* myproject_axi_mux_42_16_1_1_U108;
    myproject_axi_mux_42_16_1_1<1,1,16,16,16,16,2,16>* myproject_axi_mux_42_16_1_1_U109;
    myproject_axi_mux_42_16_1_1<1,1,16,16,16,16,2,16>* myproject_axi_mux_42_16_1_1_U110;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<32> > pX_3;
    sc_signal< sc_lv<32> > sX_3;
    sc_signal< sc_lv<32> > pY_3;
    sc_signal< sc_lv<32> > sY_3;
    sc_signal< sc_lv<16> > kernel_data_V_6_4;
    sc_signal< sc_lv<16> > kernel_data_V_6_5;
    sc_signal< sc_lv<16> > kernel_data_V_6_6;
    sc_signal< sc_lv<16> > kernel_data_V_6_7;
    sc_signal< sc_lv<16> > kernel_data_V_6_12;
    sc_signal< sc_lv<16> > kernel_data_V_6_13;
    sc_signal< sc_lv<16> > kernel_data_V_6_14;
    sc_signal< sc_lv<16> > kernel_data_V_6_15;
    sc_signal< sc_logic > line_buffer_Array_V_6_0_0_ce0;
    sc_signal< sc_logic > line_buffer_Array_V_6_0_0_we0;
    sc_signal< sc_lv<16> > line_buffer_Array_V_6_0_0_q0;
    sc_signal< sc_logic > line_buffer_Array_V_6_0_1_ce0;
    sc_signal< sc_logic > line_buffer_Array_V_6_0_1_we0;
    sc_signal< sc_lv<16> > line_buffer_Array_V_6_0_1_q0;
    sc_signal< sc_logic > line_buffer_Array_V_6_0_2_ce0;
    sc_signal< sc_logic > line_buffer_Array_V_6_0_2_we0;
    sc_signal< sc_lv<16> > line_buffer_Array_V_6_0_2_q0;
    sc_signal< sc_logic > line_buffer_Array_V_6_0_3_ce0;
    sc_signal< sc_logic > line_buffer_Array_V_6_0_3_we0;
    sc_signal< sc_lv<16> > line_buffer_Array_V_6_0_3_q0;
    sc_signal< sc_logic > data_V_data_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > icmp_ln241_reg_673;
    sc_signal< sc_logic > data_V_data_1_V_blk_n;
    sc_signal< sc_logic > data_V_data_2_V_blk_n;
    sc_signal< sc_logic > data_V_data_3_V_blk_n;
    sc_signal< sc_logic > res_V_data_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > and_ln191_4_reg_790;
    sc_signal< sc_logic > res_V_data_1_V_blk_n;
    sc_signal< sc_logic > res_V_data_2_V_blk_n;
    sc_signal< sc_logic > res_V_data_3_V_blk_n;
    sc_signal< sc_lv<11> > indvar_flatten_reg_140;
    sc_signal< sc_lv<1> > icmp_ln241_fu_162_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< sc_logic > io_acc_block_signal_op118;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln241_reg_673_pp0_iter1_reg;
    sc_signal< sc_lv<11> > add_ln241_fu_168_p2;
    sc_signal< sc_lv<11> > add_ln241_reg_677;
    sc_signal< sc_lv<16> > pool_window_3_V_reg_682;
    sc_signal< sc_logic > io_acc_block_signal_op21;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<16> > pool_window_3_V_reg_682_pp0_iter1_reg;
    sc_signal< sc_lv<16> > pool_window_3_V_8_reg_691;
    sc_signal< sc_lv<16> > pool_window_3_V_8_reg_691_pp0_iter1_reg;
    sc_signal< sc_lv<16> > pool_window_3_V_9_reg_700;
    sc_signal< sc_lv<16> > pool_window_3_V_9_reg_700_pp0_iter1_reg;
    sc_signal< sc_lv<16> > pool_window_3_V_10_reg_709;
    sc_signal< sc_lv<16> > pool_window_3_V_10_reg_709_pp0_iter1_reg;
    sc_signal< sc_lv<16> > pool_window_1_V_reg_718;
    sc_signal< sc_lv<16> > pool_window_1_V_8_reg_724;
    sc_signal< sc_lv<16> > pool_window_1_V_9_reg_730;
    sc_signal< sc_lv<16> > pool_window_1_V_10_reg_736;
    sc_signal< sc_lv<16> > pool_window_0_V_reg_742;
    sc_signal< sc_lv<16> > pool_window_0_V_8_reg_748;
    sc_signal< sc_lv<16> > pool_window_0_V_9_reg_754;
    sc_signal< sc_lv<16> > pool_window_0_V_10_reg_760;
    sc_signal< sc_lv<16> > pool_window_2_V_reg_766;
    sc_signal< sc_lv<16> > pool_window_2_V_8_reg_772;
    sc_signal< sc_lv<16> > pool_window_2_V_9_reg_778;
    sc_signal< sc_lv<16> > pool_window_2_V_10_reg_784;
    sc_signal< sc_lv<1> > and_ln191_4_fu_354_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_fu_360_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_reg_794;
    sc_signal< sc_lv<1> > icmp_ln1496_24_fu_366_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_24_reg_800;
    sc_signal< sc_lv<1> > icmp_ln1496_1_fu_371_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_1_reg_806;
    sc_signal< sc_lv<1> > icmp_ln1496_26_fu_377_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_26_reg_812;
    sc_signal< sc_lv<1> > icmp_ln1496_2_fu_382_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_2_reg_818;
    sc_signal< sc_lv<1> > icmp_ln1496_28_fu_388_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_28_reg_824;
    sc_signal< sc_lv<1> > icmp_ln1496_30_fu_393_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_30_reg_830;
    sc_signal< sc_lv<1> > icmp_ln1496_31_fu_399_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_31_reg_836;
    sc_signal< sc_lv<1> > icmp_ln212_fu_404_p2;
    sc_signal< sc_lv<1> > icmp_ln212_reg_842;
    sc_signal< sc_lv<32> > select_ln227_fu_428_p3;
    sc_signal< sc_lv<32> > select_ln227_reg_846;
    sc_signal< sc_lv<1> > icmp_ln216_fu_448_p2;
    sc_signal< sc_lv<1> > icmp_ln216_reg_851;
    sc_signal< sc_lv<32> > select_ln222_fu_472_p3;
    sc_signal< sc_lv<32> > select_ln222_reg_855;
    sc_signal< sc_lv<2> > select_ln66_34_fu_506_p3;
    sc_signal< sc_lv<2> > select_ln66_34_reg_860;
    sc_signal< sc_lv<2> > select_ln66_39_fu_540_p3;
    sc_signal< sc_lv<2> > select_ln66_39_reg_865;
    sc_signal< sc_lv<2> > select_ln66_44_fu_574_p3;
    sc_signal< sc_lv<2> > select_ln66_44_reg_870;
    sc_signal< sc_lv<2> > select_ln66_46_fu_608_p3;
    sc_signal< sc_lv<2> > select_ln66_46_reg_875;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<11> > ap_phi_mux_indvar_flatten_phi_fu_144_p4;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_storemerge_i_i_reg_151;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter1_storemerge_i_i_reg_151;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter2_storemerge_i_i_reg_151;
    sc_signal< sc_lv<32> > add_ln225_fu_410_p2;
    sc_signal< sc_lv<32> > add_ln220_fu_454_p2;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_sY_3_load;
    sc_signal< sc_lv<16> > tmp_data_0_V_fu_627_p6;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<16> > tmp_data_1_V_fu_637_p6;
    sc_signal< sc_lv<16> > tmp_data_2_V_fu_647_p6;
    sc_signal< sc_lv<16> > tmp_data_3_V_fu_657_p6;
    sc_signal< sc_lv<1> > icmp_ln191_fu_306_p2;
    sc_signal< sc_lv<1> > icmp_ln191_4_fu_316_p2;
    sc_signal< sc_lv<1> > icmp_ln191_5_fu_326_p2;
    sc_signal< sc_lv<1> > icmp_ln191_6_fu_336_p2;
    sc_signal< sc_lv<1> > and_ln191_3_fu_348_p2;
    sc_signal< sc_lv<1> > and_ln191_fu_342_p2;
    sc_signal< sc_lv<32> > add_ln227_fu_422_p2;
    sc_signal< sc_lv<32> > add_ln222_fu_466_p2;
    sc_signal< sc_lv<16> > select_ln66_fu_480_p3;
    sc_signal< sc_lv<16> > select_ln66_33_fu_492_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_25_fu_497_p2;
    sc_signal< sc_lv<2> > select_ln66_32_fu_485_p3;
    sc_signal< sc_lv<2> > zext_ln66_fu_503_p1;
    sc_signal< sc_lv<16> > select_ln66_35_fu_514_p3;
    sc_signal< sc_lv<16> > select_ln66_37_fu_526_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_27_fu_531_p2;
    sc_signal< sc_lv<2> > select_ln66_36_fu_519_p3;
    sc_signal< sc_lv<2> > zext_ln66_8_fu_537_p1;
    sc_signal< sc_lv<16> > select_ln66_38_fu_548_p3;
    sc_signal< sc_lv<16> > select_ln66_40_fu_560_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_29_fu_565_p2;
    sc_signal< sc_lv<2> > select_ln66_42_fu_553_p3;
    sc_signal< sc_lv<2> > zext_ln66_9_fu_571_p1;
    sc_signal< sc_lv<16> > select_ln66_41_fu_582_p3;
    sc_signal< sc_lv<16> > select_ln66_43_fu_594_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_32_fu_599_p2;
    sc_signal< sc_lv<2> > select_ln66_45_fu_587_p3;
    sc_signal< sc_lv<2> > zext_ln66_10_fu_605_p1;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_318;
    sc_signal< bool > ap_condition_322;
    sc_signal< bool > ap_condition_313;
    sc_signal< bool > ap_condition_303;
    sc_signal< bool > ap_condition_269;
    sc_signal< bool > ap_condition_671;
    sc_signal< bool > ap_condition_263;
    sc_signal< bool > ap_condition_676;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state7;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<11> ap_const_lv11_400;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln220_fu_454_p2();
    void thread_add_ln222_fu_466_p2();
    void thread_add_ln225_fu_410_p2();
    void thread_add_ln227_fu_422_p2();
    void thread_add_ln241_fu_168_p2();
    void thread_and_ln191_3_fu_348_p2();
    void thread_and_ln191_4_fu_354_p2();
    void thread_and_ln191_fu_342_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage1_iter1();
    void thread_ap_block_state6_pp0_stage0_iter2();
    void thread_ap_condition_263();
    void thread_ap_condition_269();
    void thread_ap_condition_303();
    void thread_ap_condition_313();
    void thread_ap_condition_318();
    void thread_ap_condition_322();
    void thread_ap_condition_671();
    void thread_ap_condition_676();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_144_p4();
    void thread_ap_phi_reg_pp0_iter0_storemerge_i_i_reg_151();
    void thread_ap_ready();
    void thread_ap_sig_allocacmp_sY_3_load();
    void thread_data_V_data_0_V_blk_n();
    void thread_data_V_data_0_V_read();
    void thread_data_V_data_1_V_blk_n();
    void thread_data_V_data_1_V_read();
    void thread_data_V_data_2_V_blk_n();
    void thread_data_V_data_2_V_read();
    void thread_data_V_data_3_V_blk_n();
    void thread_data_V_data_3_V_read();
    void thread_icmp_ln1496_1_fu_371_p2();
    void thread_icmp_ln1496_24_fu_366_p2();
    void thread_icmp_ln1496_25_fu_497_p2();
    void thread_icmp_ln1496_26_fu_377_p2();
    void thread_icmp_ln1496_27_fu_531_p2();
    void thread_icmp_ln1496_28_fu_388_p2();
    void thread_icmp_ln1496_29_fu_565_p2();
    void thread_icmp_ln1496_2_fu_382_p2();
    void thread_icmp_ln1496_30_fu_393_p2();
    void thread_icmp_ln1496_31_fu_399_p2();
    void thread_icmp_ln1496_32_fu_599_p2();
    void thread_icmp_ln1496_fu_360_p2();
    void thread_icmp_ln191_4_fu_316_p2();
    void thread_icmp_ln191_5_fu_326_p2();
    void thread_icmp_ln191_6_fu_336_p2();
    void thread_icmp_ln191_fu_306_p2();
    void thread_icmp_ln212_fu_404_p2();
    void thread_icmp_ln216_fu_448_p2();
    void thread_icmp_ln241_fu_162_p2();
    void thread_internal_ap_ready();
    void thread_io_acc_block_signal_op118();
    void thread_io_acc_block_signal_op21();
    void thread_line_buffer_Array_V_6_0_0_ce0();
    void thread_line_buffer_Array_V_6_0_0_we0();
    void thread_line_buffer_Array_V_6_0_1_ce0();
    void thread_line_buffer_Array_V_6_0_1_we0();
    void thread_line_buffer_Array_V_6_0_2_ce0();
    void thread_line_buffer_Array_V_6_0_2_we0();
    void thread_line_buffer_Array_V_6_0_3_ce0();
    void thread_line_buffer_Array_V_6_0_3_we0();
    void thread_real_start();
    void thread_res_V_data_0_V_blk_n();
    void thread_res_V_data_0_V_din();
    void thread_res_V_data_0_V_write();
    void thread_res_V_data_1_V_blk_n();
    void thread_res_V_data_1_V_din();
    void thread_res_V_data_1_V_write();
    void thread_res_V_data_2_V_blk_n();
    void thread_res_V_data_2_V_din();
    void thread_res_V_data_2_V_write();
    void thread_res_V_data_3_V_blk_n();
    void thread_res_V_data_3_V_din();
    void thread_res_V_data_3_V_write();
    void thread_select_ln222_fu_472_p3();
    void thread_select_ln227_fu_428_p3();
    void thread_select_ln66_32_fu_485_p3();
    void thread_select_ln66_33_fu_492_p3();
    void thread_select_ln66_34_fu_506_p3();
    void thread_select_ln66_35_fu_514_p3();
    void thread_select_ln66_36_fu_519_p3();
    void thread_select_ln66_37_fu_526_p3();
    void thread_select_ln66_38_fu_548_p3();
    void thread_select_ln66_39_fu_540_p3();
    void thread_select_ln66_40_fu_560_p3();
    void thread_select_ln66_41_fu_582_p3();
    void thread_select_ln66_42_fu_553_p3();
    void thread_select_ln66_43_fu_594_p3();
    void thread_select_ln66_44_fu_574_p3();
    void thread_select_ln66_45_fu_587_p3();
    void thread_select_ln66_46_fu_608_p3();
    void thread_select_ln66_fu_480_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_zext_ln66_10_fu_605_p1();
    void thread_zext_ln66_8_fu_537_p1();
    void thread_zext_ln66_9_fu_571_p1();
    void thread_zext_ln66_fu_503_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
