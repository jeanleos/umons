-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity scale is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ch_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    ch_in_TVALID : IN STD_LOGIC;
    ch_in_TREADY : OUT STD_LOGIC;
    ch_in_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    ch_in_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    ch_in_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    ch_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    ch_in_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    ch_in_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    ch_out_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    ch_out_TVALID : OUT STD_LOGIC;
    ch_out_TREADY : IN STD_LOGIC;
    ch_out_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    ch_out_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    ch_out_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    ch_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    ch_out_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    ch_out_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0);
    s_axi_CTRL_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_WVALID : IN STD_LOGIC;
    s_axi_CTRL_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_RREADY : IN STD_LOGIC;
    s_axi_CTRL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of scale is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "scale_scale,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.912000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1046,HLS_SYN_LUT=821,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal scale_factor : STD_LOGIC_VECTOR (31 downto 0);
    signal width : STD_LOGIC_VECTOR (31 downto 0);
    signal height : STD_LOGIC_VECTOR (31 downto 0);
    signal height_read_reg_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal width_read_reg_139 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_factor_read_reg_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_130_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_data_reg_149 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_start : STD_LOGIC;
    signal grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_done : STD_LOGIC;
    signal grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_idle : STD_LOGIC;
    signal grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_ready : STD_LOGIC;
    signal grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TREADY : STD_LOGIC;
    signal grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_in_TREADY : STD_LOGIC;
    signal grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID : STD_LOGIC;
    signal grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TUSER : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TID : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TDEST : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_ce : STD_LOGIC;
    signal grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ch_out_TDATA_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ch_out_TKEEP_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal ch_out_TSTRB_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal ch_out_TUSER_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal ch_out_TLAST_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ch_out_TID_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal ch_out_TDEST_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_130_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_130_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fu_130_ce : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal regslice_both_ch_out_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal regslice_both_ch_in_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ch_in_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal ch_in_TVALID_int_regslice : STD_LOGIC;
    signal ch_in_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_ch_in_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_ch_in_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal ch_in_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_ch_in_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_ch_in_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_ch_in_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal ch_in_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_ch_in_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_ch_in_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_ch_in_V_user_V_U_apdone_blk : STD_LOGIC;
    signal ch_in_TUSER_int_regslice : STD_LOGIC_VECTOR (1 downto 0);
    signal regslice_both_ch_in_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_ch_in_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_ch_in_V_last_V_U_apdone_blk : STD_LOGIC;
    signal ch_in_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_ch_in_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_ch_in_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_ch_in_V_id_V_U_apdone_blk : STD_LOGIC;
    signal ch_in_TID_int_regslice : STD_LOGIC_VECTOR (4 downto 0);
    signal regslice_both_ch_in_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_ch_in_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_ch_in_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal ch_in_TDEST_int_regslice : STD_LOGIC_VECTOR (5 downto 0);
    signal regslice_both_ch_in_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_ch_in_V_dest_V_U_ack_in : STD_LOGIC;
    signal ch_out_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal ch_out_TVALID_int_regslice : STD_LOGIC;
    signal ch_out_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_ch_out_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_ch_out_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal ch_out_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_ch_out_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_ch_out_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_ch_out_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal ch_out_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_ch_out_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_ch_out_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_ch_out_V_user_V_U_apdone_blk : STD_LOGIC;
    signal ch_out_TUSER_int_regslice : STD_LOGIC_VECTOR (1 downto 0);
    signal regslice_both_ch_out_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_ch_out_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_ch_out_V_last_V_U_apdone_blk : STD_LOGIC;
    signal ch_out_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_ch_out_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_ch_out_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_ch_out_V_id_V_U_apdone_blk : STD_LOGIC;
    signal ch_out_TID_int_regslice : STD_LOGIC_VECTOR (4 downto 0);
    signal regslice_both_ch_out_V_id_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_ch_out_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_ch_out_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal ch_out_TDEST_int_regslice : STD_LOGIC_VECTOR (5 downto 0);
    signal regslice_both_ch_out_V_dest_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_ch_out_V_dest_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;
    signal ap_return : STD_LOGIC_VECTOR (31 downto 0);

    component scale_scale_Pipeline_VITIS_LOOP_26_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ch_in_TVALID : IN STD_LOGIC;
        ch_out_TREADY : IN STD_LOGIC;
        total_data : IN STD_LOGIC_VECTOR (31 downto 0);
        ch_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        ch_in_TREADY : OUT STD_LOGIC;
        ch_in_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        ch_in_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        ch_in_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
        ch_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        ch_in_TID : IN STD_LOGIC_VECTOR (4 downto 0);
        ch_in_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
        scale_factor : IN STD_LOGIC_VECTOR (31 downto 0);
        ch_out_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        ch_out_TVALID : OUT STD_LOGIC;
        ch_out_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
        ch_out_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        ch_out_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
        ch_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        ch_out_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
        ch_out_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0);
        grp_fu_130_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_130_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_130_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_130_p_ce : OUT STD_LOGIC );
    end component;


    component scale_mul_32s_32s_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component scale_CTRL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_return : IN STD_LOGIC_VECTOR (31 downto 0);
        scale_factor : OUT STD_LOGIC_VECTOR (31 downto 0);
        width : OUT STD_LOGIC_VECTOR (31 downto 0);
        height : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component scale_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96 : component scale_scale_Pipeline_VITIS_LOOP_26_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_start,
        ap_done => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_done,
        ap_idle => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_idle,
        ap_ready => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_ready,
        ch_in_TVALID => ch_in_TVALID_int_regslice,
        ch_out_TREADY => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TREADY,
        total_data => total_data_reg_149,
        ch_in_TDATA => ch_in_TDATA_int_regslice,
        ch_in_TREADY => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_in_TREADY,
        ch_in_TKEEP => ch_in_TKEEP_int_regslice,
        ch_in_TSTRB => ch_in_TSTRB_int_regslice,
        ch_in_TUSER => ch_in_TUSER_int_regslice,
        ch_in_TLAST => ch_in_TLAST_int_regslice,
        ch_in_TID => ch_in_TID_int_regslice,
        ch_in_TDEST => ch_in_TDEST_int_regslice,
        scale_factor => scale_factor_read_reg_144,
        ch_out_TDATA => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TDATA,
        ch_out_TVALID => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID,
        ch_out_TKEEP => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TKEEP,
        ch_out_TSTRB => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TSTRB,
        ch_out_TUSER => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TUSER,
        ch_out_TLAST => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TLAST,
        ch_out_TID => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TID,
        ch_out_TDEST => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TDEST,
        grp_fu_130_p_din0 => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_din0,
        grp_fu_130_p_din1 => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_din1,
        grp_fu_130_p_dout0 => grp_fu_130_p2,
        grp_fu_130_p_ce => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_ce);

    CTRL_s_axi_U : component scale_CTRL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_AWVALID,
        AWREADY => s_axi_CTRL_AWREADY,
        AWADDR => s_axi_CTRL_AWADDR,
        WVALID => s_axi_CTRL_WVALID,
        WREADY => s_axi_CTRL_WREADY,
        WDATA => s_axi_CTRL_WDATA,
        WSTRB => s_axi_CTRL_WSTRB,
        ARVALID => s_axi_CTRL_ARVALID,
        ARREADY => s_axi_CTRL_ARREADY,
        ARADDR => s_axi_CTRL_ARADDR,
        RVALID => s_axi_CTRL_RVALID,
        RREADY => s_axi_CTRL_RREADY,
        RDATA => s_axi_CTRL_RDATA,
        RRESP => s_axi_CTRL_RRESP,
        BVALID => s_axi_CTRL_BVALID,
        BREADY => s_axi_CTRL_BREADY,
        BRESP => s_axi_CTRL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_return => ap_const_lv32_0,
        scale_factor => scale_factor,
        width => width,
        height => height);

    mul_32s_32s_32_2_1_U18 : component scale_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_130_p0,
        din1 => grp_fu_130_p1,
        ce => grp_fu_130_ce,
        dout => grp_fu_130_p2);

    regslice_both_ch_in_V_data_V_U : component scale_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ch_in_TDATA,
        vld_in => ch_in_TVALID,
        ack_in => regslice_both_ch_in_V_data_V_U_ack_in,
        data_out => ch_in_TDATA_int_regslice,
        vld_out => ch_in_TVALID_int_regslice,
        ack_out => ch_in_TREADY_int_regslice,
        apdone_blk => regslice_both_ch_in_V_data_V_U_apdone_blk);

    regslice_both_ch_in_V_keep_V_U : component scale_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ch_in_TKEEP,
        vld_in => ch_in_TVALID,
        ack_in => regslice_both_ch_in_V_keep_V_U_ack_in,
        data_out => ch_in_TKEEP_int_regslice,
        vld_out => regslice_both_ch_in_V_keep_V_U_vld_out,
        ack_out => ch_in_TREADY_int_regslice,
        apdone_blk => regslice_both_ch_in_V_keep_V_U_apdone_blk);

    regslice_both_ch_in_V_strb_V_U : component scale_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ch_in_TSTRB,
        vld_in => ch_in_TVALID,
        ack_in => regslice_both_ch_in_V_strb_V_U_ack_in,
        data_out => ch_in_TSTRB_int_regslice,
        vld_out => regslice_both_ch_in_V_strb_V_U_vld_out,
        ack_out => ch_in_TREADY_int_regslice,
        apdone_blk => regslice_both_ch_in_V_strb_V_U_apdone_blk);

    regslice_both_ch_in_V_user_V_U : component scale_regslice_both
    generic map (
        DataWidth => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ch_in_TUSER,
        vld_in => ch_in_TVALID,
        ack_in => regslice_both_ch_in_V_user_V_U_ack_in,
        data_out => ch_in_TUSER_int_regslice,
        vld_out => regslice_both_ch_in_V_user_V_U_vld_out,
        ack_out => ch_in_TREADY_int_regslice,
        apdone_blk => regslice_both_ch_in_V_user_V_U_apdone_blk);

    regslice_both_ch_in_V_last_V_U : component scale_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ch_in_TLAST,
        vld_in => ch_in_TVALID,
        ack_in => regslice_both_ch_in_V_last_V_U_ack_in,
        data_out => ch_in_TLAST_int_regslice,
        vld_out => regslice_both_ch_in_V_last_V_U_vld_out,
        ack_out => ch_in_TREADY_int_regslice,
        apdone_blk => regslice_both_ch_in_V_last_V_U_apdone_blk);

    regslice_both_ch_in_V_id_V_U : component scale_regslice_both
    generic map (
        DataWidth => 5)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ch_in_TID,
        vld_in => ch_in_TVALID,
        ack_in => regslice_both_ch_in_V_id_V_U_ack_in,
        data_out => ch_in_TID_int_regslice,
        vld_out => regslice_both_ch_in_V_id_V_U_vld_out,
        ack_out => ch_in_TREADY_int_regslice,
        apdone_blk => regslice_both_ch_in_V_id_V_U_apdone_blk);

    regslice_both_ch_in_V_dest_V_U : component scale_regslice_both
    generic map (
        DataWidth => 6)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ch_in_TDEST,
        vld_in => ch_in_TVALID,
        ack_in => regslice_both_ch_in_V_dest_V_U_ack_in,
        data_out => ch_in_TDEST_int_regslice,
        vld_out => regslice_both_ch_in_V_dest_V_U_vld_out,
        ack_out => ch_in_TREADY_int_regslice,
        apdone_blk => regslice_both_ch_in_V_dest_V_U_apdone_blk);

    regslice_both_ch_out_V_data_V_U : component scale_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ch_out_TDATA_int_regslice,
        vld_in => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID,
        ack_in => ch_out_TREADY_int_regslice,
        data_out => ch_out_TDATA,
        vld_out => regslice_both_ch_out_V_data_V_U_vld_out,
        ack_out => ch_out_TREADY,
        apdone_blk => regslice_both_ch_out_V_data_V_U_apdone_blk);

    regslice_both_ch_out_V_keep_V_U : component scale_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ch_out_TKEEP_int_regslice,
        vld_in => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID,
        ack_in => regslice_both_ch_out_V_keep_V_U_ack_in_dummy,
        data_out => ch_out_TKEEP,
        vld_out => regslice_both_ch_out_V_keep_V_U_vld_out,
        ack_out => ch_out_TREADY,
        apdone_blk => regslice_both_ch_out_V_keep_V_U_apdone_blk);

    regslice_both_ch_out_V_strb_V_U : component scale_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ch_out_TSTRB_int_regslice,
        vld_in => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID,
        ack_in => regslice_both_ch_out_V_strb_V_U_ack_in_dummy,
        data_out => ch_out_TSTRB,
        vld_out => regslice_both_ch_out_V_strb_V_U_vld_out,
        ack_out => ch_out_TREADY,
        apdone_blk => regslice_both_ch_out_V_strb_V_U_apdone_blk);

    regslice_both_ch_out_V_user_V_U : component scale_regslice_both
    generic map (
        DataWidth => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ch_out_TUSER_int_regslice,
        vld_in => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID,
        ack_in => regslice_both_ch_out_V_user_V_U_ack_in_dummy,
        data_out => ch_out_TUSER,
        vld_out => regslice_both_ch_out_V_user_V_U_vld_out,
        ack_out => ch_out_TREADY,
        apdone_blk => regslice_both_ch_out_V_user_V_U_apdone_blk);

    regslice_both_ch_out_V_last_V_U : component scale_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ch_out_TLAST_int_regslice,
        vld_in => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID,
        ack_in => regslice_both_ch_out_V_last_V_U_ack_in_dummy,
        data_out => ch_out_TLAST,
        vld_out => regslice_both_ch_out_V_last_V_U_vld_out,
        ack_out => ch_out_TREADY,
        apdone_blk => regslice_both_ch_out_V_last_V_U_apdone_blk);

    regslice_both_ch_out_V_id_V_U : component scale_regslice_both
    generic map (
        DataWidth => 5)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ch_out_TID_int_regslice,
        vld_in => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID,
        ack_in => regslice_both_ch_out_V_id_V_U_ack_in_dummy,
        data_out => ch_out_TID,
        vld_out => regslice_both_ch_out_V_id_V_U_vld_out,
        ack_out => ch_out_TREADY,
        apdone_blk => regslice_both_ch_out_V_id_V_U_apdone_blk);

    regslice_both_ch_out_V_dest_V_U : component scale_regslice_both
    generic map (
        DataWidth => 6)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ch_out_TDEST_int_regslice,
        vld_in => grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID,
        ack_in => regslice_both_ch_out_V_dest_V_U_ack_in_dummy,
        data_out => ch_out_TDEST,
        vld_out => regslice_both_ch_out_V_dest_V_U_vld_out,
        ack_out => ch_out_TREADY,
        apdone_blk => regslice_both_ch_out_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_ready = ap_const_logic_1)) then 
                    grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                ch_out_TDATA_reg <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TDATA;
                ch_out_TDEST_reg <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TDEST;
                ch_out_TID_reg <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TID;
                ch_out_TKEEP_reg <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TKEEP;
                ch_out_TLAST_reg <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TLAST;
                ch_out_TSTRB_reg <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TSTRB;
                ch_out_TUSER_reg <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                height_read_reg_134 <= height;
                scale_factor_read_reg_144 <= scale_factor;
                width_read_reg_139 <= width;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                total_data_reg_149 <= grp_fu_130_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_done, ap_CS_fsm_state5, ap_CS_fsm_state6, regslice_both_ch_out_V_data_V_U_apdone_blk)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (regslice_both_ch_out_V_data_V_U_apdone_blk = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_done)
    begin
        if ((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(regslice_both_ch_out_V_data_V_U_apdone_blk)
    begin
        if ((regslice_both_ch_out_V_data_V_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state6, regslice_both_ch_out_V_data_V_U_apdone_blk)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (regslice_both_ch_out_V_data_V_U_apdone_blk = ap_const_logic_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6, regslice_both_ch_out_V_data_V_U_apdone_blk)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (regslice_both_ch_out_V_data_V_U_apdone_blk = ap_const_logic_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ch_in_TREADY <= regslice_both_ch_in_V_data_V_U_ack_in;

    ch_in_TREADY_int_regslice_assign_proc : process(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_in_TREADY, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ch_in_TREADY_int_regslice <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_in_TREADY;
        else 
            ch_in_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    ch_out_TDATA_int_regslice_assign_proc : process(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TDATA, grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID, ap_CS_fsm_state5, ch_out_TDATA_reg)
    begin
        if (((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ch_out_TDATA_int_regslice <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TDATA;
        else 
            ch_out_TDATA_int_regslice <= ch_out_TDATA_reg;
        end if; 
    end process;


    ch_out_TDEST_int_regslice_assign_proc : process(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID, grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TDEST, ap_CS_fsm_state5, ch_out_TDEST_reg)
    begin
        if (((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ch_out_TDEST_int_regslice <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TDEST;
        else 
            ch_out_TDEST_int_regslice <= ch_out_TDEST_reg;
        end if; 
    end process;


    ch_out_TID_int_regslice_assign_proc : process(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID, grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TID, ap_CS_fsm_state5, ch_out_TID_reg)
    begin
        if (((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ch_out_TID_int_regslice <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TID;
        else 
            ch_out_TID_int_regslice <= ch_out_TID_reg;
        end if; 
    end process;


    ch_out_TKEEP_int_regslice_assign_proc : process(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID, grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TKEEP, ap_CS_fsm_state5, ch_out_TKEEP_reg)
    begin
        if (((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ch_out_TKEEP_int_regslice <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TKEEP;
        else 
            ch_out_TKEEP_int_regslice <= ch_out_TKEEP_reg;
        end if; 
    end process;


    ch_out_TLAST_int_regslice_assign_proc : process(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID, grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TLAST, ap_CS_fsm_state5, ch_out_TLAST_reg)
    begin
        if (((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ch_out_TLAST_int_regslice <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TLAST;
        else 
            ch_out_TLAST_int_regslice <= ch_out_TLAST_reg;
        end if; 
    end process;


    ch_out_TSTRB_int_regslice_assign_proc : process(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID, grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TSTRB, ap_CS_fsm_state5, ch_out_TSTRB_reg)
    begin
        if (((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ch_out_TSTRB_int_regslice <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TSTRB;
        else 
            ch_out_TSTRB_int_regslice <= ch_out_TSTRB_reg;
        end if; 
    end process;


    ch_out_TUSER_int_regslice_assign_proc : process(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID, grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TUSER, ap_CS_fsm_state5, ch_out_TUSER_reg)
    begin
        if (((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ch_out_TUSER_int_regslice <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TUSER;
        else 
            ch_out_TUSER_int_regslice <= ch_out_TUSER_reg;
        end if; 
    end process;

    ch_out_TVALID <= regslice_both_ch_out_V_data_V_U_vld_out;
    ch_out_TVALID_int_regslice <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID;

    grp_fu_130_ce_assign_proc : process(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_ce, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_130_ce <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_ce;
        else 
            grp_fu_130_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_130_p0_assign_proc : process(height_read_reg_134, grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_din0, ap_CS_fsm_state5, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_130_p0 <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_130_p0 <= height_read_reg_134;
        else 
            grp_fu_130_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_130_p1_assign_proc : process(width_read_reg_139, grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_din1, ap_CS_fsm_state5, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_130_p1 <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_130_p1 <= width_read_reg_139;
        else 
            grp_fu_130_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_start <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_start_reg;
    grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TREADY <= (ch_out_TREADY_int_regslice and ap_CS_fsm_state5);
end behav;
