// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="scale_scale,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.912000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1046,HLS_SYN_LUT=821,HLS_VERSION=2024_2}" *)

module scale (
        ap_clk,
        ap_rst_n,
        ch_in_TDATA,
        ch_in_TVALID,
        ch_in_TREADY,
        ch_in_TKEEP,
        ch_in_TSTRB,
        ch_in_TUSER,
        ch_in_TLAST,
        ch_in_TID,
        ch_in_TDEST,
        ch_out_TDATA,
        ch_out_TVALID,
        ch_out_TREADY,
        ch_out_TKEEP,
        ch_out_TSTRB,
        ch_out_TUSER,
        ch_out_TLAST,
        ch_out_TID,
        ch_out_TDEST,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] ch_in_TDATA;
input   ch_in_TVALID;
output   ch_in_TREADY;
input  [3:0] ch_in_TKEEP;
input  [3:0] ch_in_TSTRB;
input  [1:0] ch_in_TUSER;
input  [0:0] ch_in_TLAST;
input  [4:0] ch_in_TID;
input  [5:0] ch_in_TDEST;
output  [31:0] ch_out_TDATA;
output   ch_out_TVALID;
input   ch_out_TREADY;
output  [3:0] ch_out_TKEEP;
output  [3:0] ch_out_TSTRB;
output  [1:0] ch_out_TUSER;
output  [0:0] ch_out_TLAST;
output  [4:0] ch_out_TID;
output  [5:0] ch_out_TDEST;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] scale_factor;
wire   [31:0] width;
wire   [31:0] height;
reg  signed [31:0] height_read_reg_134;
reg  signed [31:0] width_read_reg_139;
reg   [31:0] scale_factor_read_reg_144;
wire   [31:0] grp_fu_130_p2;
reg   [31:0] total_data_reg_149;
wire    ap_CS_fsm_state3;
wire    grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_start;
wire    grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_done;
wire    grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_idle;
wire    grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_ready;
wire    grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TREADY;
wire    grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_in_TREADY;
wire   [31:0] grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TDATA;
wire    grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID;
wire   [3:0] grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TKEEP;
wire   [3:0] grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TSTRB;
wire   [1:0] grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TUSER;
wire   [0:0] grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TLAST;
wire   [4:0] grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TID;
wire   [5:0] grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TDEST;
wire  signed [31:0] grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_din0;
wire  signed [31:0] grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_din1;
wire    grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_ce;
reg    grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg   [31:0] ch_out_TDATA_reg;
reg   [3:0] ch_out_TKEEP_reg;
reg   [3:0] ch_out_TSTRB_reg;
reg   [1:0] ch_out_TUSER_reg;
reg   [0:0] ch_out_TLAST_reg;
reg   [4:0] ch_out_TID_reg;
reg   [5:0] ch_out_TDEST_reg;
reg  signed [31:0] grp_fu_130_p0;
reg  signed [31:0] grp_fu_130_p1;
wire    ap_CS_fsm_state2;
reg    grp_fu_130_ce;
wire    ap_CS_fsm_state6;
wire    regslice_both_ch_out_V_data_V_U_apdone_blk;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    regslice_both_ch_in_V_data_V_U_apdone_blk;
wire   [31:0] ch_in_TDATA_int_regslice;
wire    ch_in_TVALID_int_regslice;
reg    ch_in_TREADY_int_regslice;
wire    regslice_both_ch_in_V_data_V_U_ack_in;
wire    regslice_both_ch_in_V_keep_V_U_apdone_blk;
wire   [3:0] ch_in_TKEEP_int_regslice;
wire    regslice_both_ch_in_V_keep_V_U_vld_out;
wire    regslice_both_ch_in_V_keep_V_U_ack_in;
wire    regslice_both_ch_in_V_strb_V_U_apdone_blk;
wire   [3:0] ch_in_TSTRB_int_regslice;
wire    regslice_both_ch_in_V_strb_V_U_vld_out;
wire    regslice_both_ch_in_V_strb_V_U_ack_in;
wire    regslice_both_ch_in_V_user_V_U_apdone_blk;
wire   [1:0] ch_in_TUSER_int_regslice;
wire    regslice_both_ch_in_V_user_V_U_vld_out;
wire    regslice_both_ch_in_V_user_V_U_ack_in;
wire    regslice_both_ch_in_V_last_V_U_apdone_blk;
wire   [0:0] ch_in_TLAST_int_regslice;
wire    regslice_both_ch_in_V_last_V_U_vld_out;
wire    regslice_both_ch_in_V_last_V_U_ack_in;
wire    regslice_both_ch_in_V_id_V_U_apdone_blk;
wire   [4:0] ch_in_TID_int_regslice;
wire    regslice_both_ch_in_V_id_V_U_vld_out;
wire    regslice_both_ch_in_V_id_V_U_ack_in;
wire    regslice_both_ch_in_V_dest_V_U_apdone_blk;
wire   [5:0] ch_in_TDEST_int_regslice;
wire    regslice_both_ch_in_V_dest_V_U_vld_out;
wire    regslice_both_ch_in_V_dest_V_U_ack_in;
reg   [31:0] ch_out_TDATA_int_regslice;
wire    ch_out_TVALID_int_regslice;
wire    ch_out_TREADY_int_regslice;
wire    regslice_both_ch_out_V_data_V_U_vld_out;
wire    regslice_both_ch_out_V_keep_V_U_apdone_blk;
reg   [3:0] ch_out_TKEEP_int_regslice;
wire    regslice_both_ch_out_V_keep_V_U_ack_in_dummy;
wire    regslice_both_ch_out_V_keep_V_U_vld_out;
wire    regslice_both_ch_out_V_strb_V_U_apdone_blk;
reg   [3:0] ch_out_TSTRB_int_regslice;
wire    regslice_both_ch_out_V_strb_V_U_ack_in_dummy;
wire    regslice_both_ch_out_V_strb_V_U_vld_out;
wire    regslice_both_ch_out_V_user_V_U_apdone_blk;
reg   [1:0] ch_out_TUSER_int_regslice;
wire    regslice_both_ch_out_V_user_V_U_ack_in_dummy;
wire    regslice_both_ch_out_V_user_V_U_vld_out;
wire    regslice_both_ch_out_V_last_V_U_apdone_blk;
reg   [0:0] ch_out_TLAST_int_regslice;
wire    regslice_both_ch_out_V_last_V_U_ack_in_dummy;
wire    regslice_both_ch_out_V_last_V_U_vld_out;
wire    regslice_both_ch_out_V_id_V_U_apdone_blk;
reg   [4:0] ch_out_TID_int_regslice;
wire    regslice_both_ch_out_V_id_V_U_ack_in_dummy;
wire    regslice_both_ch_out_V_id_V_U_vld_out;
wire    regslice_both_ch_out_V_dest_V_U_apdone_blk;
reg   [5:0] ch_out_TDEST_int_regslice;
wire    regslice_both_ch_out_V_dest_V_U_ack_in_dummy;
wire    regslice_both_ch_out_V_dest_V_U_vld_out;
wire    ap_ce_reg;
wire   [31:0] ap_return;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_start_reg = 1'b0;
end

scale_scale_Pipeline_VITIS_LOOP_26_1 grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_start),
    .ap_done(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_done),
    .ap_idle(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_idle),
    .ap_ready(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_ready),
    .ch_in_TVALID(ch_in_TVALID_int_regslice),
    .ch_out_TREADY(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TREADY),
    .total_data(total_data_reg_149),
    .ch_in_TDATA(ch_in_TDATA_int_regslice),
    .ch_in_TREADY(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_in_TREADY),
    .ch_in_TKEEP(ch_in_TKEEP_int_regslice),
    .ch_in_TSTRB(ch_in_TSTRB_int_regslice),
    .ch_in_TUSER(ch_in_TUSER_int_regslice),
    .ch_in_TLAST(ch_in_TLAST_int_regslice),
    .ch_in_TID(ch_in_TID_int_regslice),
    .ch_in_TDEST(ch_in_TDEST_int_regslice),
    .scale_factor(scale_factor_read_reg_144),
    .ch_out_TDATA(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TDATA),
    .ch_out_TVALID(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID),
    .ch_out_TKEEP(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TKEEP),
    .ch_out_TSTRB(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TSTRB),
    .ch_out_TUSER(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TUSER),
    .ch_out_TLAST(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TLAST),
    .ch_out_TID(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TID),
    .ch_out_TDEST(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TDEST),
    .grp_fu_130_p_din0(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_din0),
    .grp_fu_130_p_din1(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_din1),
    .grp_fu_130_p_dout0(grp_fu_130_p2),
    .grp_fu_130_p_ce(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_ce)
);

scale_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_return(32'd0),
    .scale_factor(scale_factor),
    .width(width),
    .height(height)
);

scale_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_130_p0),
    .din1(grp_fu_130_p1),
    .ce(grp_fu_130_ce),
    .dout(grp_fu_130_p2)
);

scale_regslice_both #(
    .DataWidth( 32 ))
regslice_both_ch_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ch_in_TDATA),
    .vld_in(ch_in_TVALID),
    .ack_in(regslice_both_ch_in_V_data_V_U_ack_in),
    .data_out(ch_in_TDATA_int_regslice),
    .vld_out(ch_in_TVALID_int_regslice),
    .ack_out(ch_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_ch_in_V_data_V_U_apdone_blk)
);

scale_regslice_both #(
    .DataWidth( 4 ))
regslice_both_ch_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ch_in_TKEEP),
    .vld_in(ch_in_TVALID),
    .ack_in(regslice_both_ch_in_V_keep_V_U_ack_in),
    .data_out(ch_in_TKEEP_int_regslice),
    .vld_out(regslice_both_ch_in_V_keep_V_U_vld_out),
    .ack_out(ch_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_ch_in_V_keep_V_U_apdone_blk)
);

scale_regslice_both #(
    .DataWidth( 4 ))
regslice_both_ch_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ch_in_TSTRB),
    .vld_in(ch_in_TVALID),
    .ack_in(regslice_both_ch_in_V_strb_V_U_ack_in),
    .data_out(ch_in_TSTRB_int_regslice),
    .vld_out(regslice_both_ch_in_V_strb_V_U_vld_out),
    .ack_out(ch_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_ch_in_V_strb_V_U_apdone_blk)
);

scale_regslice_both #(
    .DataWidth( 2 ))
regslice_both_ch_in_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ch_in_TUSER),
    .vld_in(ch_in_TVALID),
    .ack_in(regslice_both_ch_in_V_user_V_U_ack_in),
    .data_out(ch_in_TUSER_int_regslice),
    .vld_out(regslice_both_ch_in_V_user_V_U_vld_out),
    .ack_out(ch_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_ch_in_V_user_V_U_apdone_blk)
);

scale_regslice_both #(
    .DataWidth( 1 ))
regslice_both_ch_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ch_in_TLAST),
    .vld_in(ch_in_TVALID),
    .ack_in(regslice_both_ch_in_V_last_V_U_ack_in),
    .data_out(ch_in_TLAST_int_regslice),
    .vld_out(regslice_both_ch_in_V_last_V_U_vld_out),
    .ack_out(ch_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_ch_in_V_last_V_U_apdone_blk)
);

scale_regslice_both #(
    .DataWidth( 5 ))
regslice_both_ch_in_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ch_in_TID),
    .vld_in(ch_in_TVALID),
    .ack_in(regslice_both_ch_in_V_id_V_U_ack_in),
    .data_out(ch_in_TID_int_regslice),
    .vld_out(regslice_both_ch_in_V_id_V_U_vld_out),
    .ack_out(ch_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_ch_in_V_id_V_U_apdone_blk)
);

scale_regslice_both #(
    .DataWidth( 6 ))
regslice_both_ch_in_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ch_in_TDEST),
    .vld_in(ch_in_TVALID),
    .ack_in(regslice_both_ch_in_V_dest_V_U_ack_in),
    .data_out(ch_in_TDEST_int_regslice),
    .vld_out(regslice_both_ch_in_V_dest_V_U_vld_out),
    .ack_out(ch_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_ch_in_V_dest_V_U_apdone_blk)
);

scale_regslice_both #(
    .DataWidth( 32 ))
regslice_both_ch_out_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ch_out_TDATA_int_regslice),
    .vld_in(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID),
    .ack_in(ch_out_TREADY_int_regslice),
    .data_out(ch_out_TDATA),
    .vld_out(regslice_both_ch_out_V_data_V_U_vld_out),
    .ack_out(ch_out_TREADY),
    .apdone_blk(regslice_both_ch_out_V_data_V_U_apdone_blk)
);

scale_regslice_both #(
    .DataWidth( 4 ))
regslice_both_ch_out_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ch_out_TKEEP_int_regslice),
    .vld_in(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID),
    .ack_in(regslice_both_ch_out_V_keep_V_U_ack_in_dummy),
    .data_out(ch_out_TKEEP),
    .vld_out(regslice_both_ch_out_V_keep_V_U_vld_out),
    .ack_out(ch_out_TREADY),
    .apdone_blk(regslice_both_ch_out_V_keep_V_U_apdone_blk)
);

scale_regslice_both #(
    .DataWidth( 4 ))
regslice_both_ch_out_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ch_out_TSTRB_int_regslice),
    .vld_in(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID),
    .ack_in(regslice_both_ch_out_V_strb_V_U_ack_in_dummy),
    .data_out(ch_out_TSTRB),
    .vld_out(regslice_both_ch_out_V_strb_V_U_vld_out),
    .ack_out(ch_out_TREADY),
    .apdone_blk(regslice_both_ch_out_V_strb_V_U_apdone_blk)
);

scale_regslice_both #(
    .DataWidth( 2 ))
regslice_both_ch_out_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ch_out_TUSER_int_regslice),
    .vld_in(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID),
    .ack_in(regslice_both_ch_out_V_user_V_U_ack_in_dummy),
    .data_out(ch_out_TUSER),
    .vld_out(regslice_both_ch_out_V_user_V_U_vld_out),
    .ack_out(ch_out_TREADY),
    .apdone_blk(regslice_both_ch_out_V_user_V_U_apdone_blk)
);

scale_regslice_both #(
    .DataWidth( 1 ))
regslice_both_ch_out_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ch_out_TLAST_int_regslice),
    .vld_in(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID),
    .ack_in(regslice_both_ch_out_V_last_V_U_ack_in_dummy),
    .data_out(ch_out_TLAST),
    .vld_out(regslice_both_ch_out_V_last_V_U_vld_out),
    .ack_out(ch_out_TREADY),
    .apdone_blk(regslice_both_ch_out_V_last_V_U_apdone_blk)
);

scale_regslice_both #(
    .DataWidth( 5 ))
regslice_both_ch_out_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ch_out_TID_int_regslice),
    .vld_in(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID),
    .ack_in(regslice_both_ch_out_V_id_V_U_ack_in_dummy),
    .data_out(ch_out_TID),
    .vld_out(regslice_both_ch_out_V_id_V_U_vld_out),
    .ack_out(ch_out_TREADY),
    .apdone_blk(regslice_both_ch_out_V_id_V_U_apdone_blk)
);

scale_regslice_both #(
    .DataWidth( 6 ))
regslice_both_ch_out_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ch_out_TDEST_int_regslice),
    .vld_in(grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID),
    .ack_in(regslice_both_ch_out_V_dest_V_U_ack_in_dummy),
    .data_out(ch_out_TDEST),
    .vld_out(regslice_both_ch_out_V_dest_V_U_vld_out),
    .ack_out(ch_out_TREADY),
    .apdone_blk(regslice_both_ch_out_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_start_reg <= 1'b1;
        end else if ((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_ready == 1'b1)) begin
            grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        ch_out_TDATA_reg <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TDATA;
        ch_out_TDEST_reg <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TDEST;
        ch_out_TID_reg <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TID;
        ch_out_TKEEP_reg <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TKEEP;
        ch_out_TLAST_reg <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TLAST;
        ch_out_TSTRB_reg <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TSTRB;
        ch_out_TUSER_reg <= grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        height_read_reg_134 <= height;
        scale_factor_read_reg_144 <= scale_factor;
        width_read_reg_139 <= width;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        total_data_reg_149 <= grp_fu_130_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_ch_out_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (regslice_both_ch_out_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (regslice_both_ch_out_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ch_in_TREADY_int_regslice = grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_in_TREADY;
    end else begin
        ch_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        ch_out_TDATA_int_regslice = grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TDATA;
    end else begin
        ch_out_TDATA_int_regslice = ch_out_TDATA_reg;
    end
end

always @ (*) begin
    if (((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        ch_out_TDEST_int_regslice = grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TDEST;
    end else begin
        ch_out_TDEST_int_regslice = ch_out_TDEST_reg;
    end
end

always @ (*) begin
    if (((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        ch_out_TID_int_regslice = grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TID;
    end else begin
        ch_out_TID_int_regslice = ch_out_TID_reg;
    end
end

always @ (*) begin
    if (((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        ch_out_TKEEP_int_regslice = grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TKEEP;
    end else begin
        ch_out_TKEEP_int_regslice = ch_out_TKEEP_reg;
    end
end

always @ (*) begin
    if (((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        ch_out_TLAST_int_regslice = grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TLAST;
    end else begin
        ch_out_TLAST_int_regslice = ch_out_TLAST_reg;
    end
end

always @ (*) begin
    if (((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        ch_out_TSTRB_int_regslice = grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TSTRB;
    end else begin
        ch_out_TSTRB_int_regslice = ch_out_TSTRB_reg;
    end
end

always @ (*) begin
    if (((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        ch_out_TUSER_int_regslice = grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TUSER;
    end else begin
        ch_out_TUSER_int_regslice = ch_out_TUSER_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_130_ce = grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_ce;
    end else begin
        grp_fu_130_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_130_p0 = grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_130_p0 = height_read_reg_134;
    end else begin
        grp_fu_130_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_130_p1 = grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_grp_fu_130_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_130_p1 = width_read_reg_139;
    end else begin
        grp_fu_130_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (regslice_both_ch_out_V_data_V_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ch_in_TREADY = regslice_both_ch_in_V_data_V_U_ack_in;

assign ch_out_TVALID = regslice_both_ch_out_V_data_V_U_vld_out;

assign ch_out_TVALID_int_regslice = grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TVALID;

assign grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_start = grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ap_start_reg;

assign grp_scale_Pipeline_VITIS_LOOP_26_1_fu_96_ch_out_TREADY = (ch_out_TREADY_int_regslice & ap_CS_fsm_state5);


reg find_kernel_block = 0;
// synthesis translate_off
`include "scale_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //scale

