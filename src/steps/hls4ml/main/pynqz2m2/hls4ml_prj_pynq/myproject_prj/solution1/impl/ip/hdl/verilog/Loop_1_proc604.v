// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_1_proc604 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_local_V_data_0_V_din,
        in_local_V_data_0_V_full_n,
        in_local_V_data_0_V_write,
        in_local_V_data_1_V_din,
        in_local_V_data_1_V_full_n,
        in_local_V_data_1_V_write,
        in_local_V_data_2_V_din,
        in_local_V_data_2_V_full_n,
        in_local_V_data_2_V_write,
        in_r_TLAST,
        in_r_TVALID,
        in_r_TREADY,
        in_r_TDATA,
        is_last_0_i_out_out_din,
        is_last_0_i_out_out_full_n,
        is_last_0_i_out_out_write
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
output  [15:0] in_local_V_data_0_V_din;
input   in_local_V_data_0_V_full_n;
output   in_local_V_data_0_V_write;
output  [15:0] in_local_V_data_1_V_din;
input   in_local_V_data_1_V_full_n;
output   in_local_V_data_1_V_write;
output  [15:0] in_local_V_data_2_V_din;
input   in_local_V_data_2_V_full_n;
output   in_local_V_data_2_V_write;
input  [0:0] in_r_TLAST;
input   in_r_TVALID;
output   in_r_TREADY;
input  [31:0] in_r_TDATA;
output  [0:0] is_last_0_i_out_out_din;
input   is_last_0_i_out_out_full_n;
output   is_last_0_i_out_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_local_V_data_0_V_write;
reg in_local_V_data_1_V_write;
reg in_local_V_data_2_V_write;
reg in_r_TREADY;
reg is_last_0_i_out_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    in_local_V_data_0_V_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln20_fu_212_p2;
reg    in_local_V_data_1_V_blk_n;
reg    in_local_V_data_2_V_blk_n;
reg    in_r_TDATA_blk_n;
reg    is_last_0_i_out_out_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln17_fu_200_p2;
wire   [10:0] i_fu_206_p2;
reg   [10:0] i_reg_685;
reg    ap_block_state2;
wire   [1:0] j_fu_218_p2;
reg   [1:0] j_reg_693;
wire    io_acc_block_signal_op47;
reg    ap_block_state3;
reg   [31:0] in_data_tmp_reg_698;
wire   [62:0] trunc_ln556_fu_275_p1;
reg   [62:0] trunc_ln556_reg_704;
wire    ap_CS_fsm_state5;
reg   [0:0] p_Result_s_reg_709;
reg   [10:0] exp_tmp_V_reg_714;
wire   [51:0] trunc_ln565_fu_297_p1;
reg   [51:0] trunc_ln565_reg_719;
wire   [53:0] man_V_2_fu_321_p3;
reg   [53:0] man_V_2_reg_724;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln571_fu_328_p2;
reg   [0:0] icmp_ln571_reg_729;
wire   [0:0] icmp_ln581_fu_339_p2;
reg   [0:0] icmp_ln581_reg_735;
wire  signed [11:0] sh_amt_fu_357_p3;
reg  signed [11:0] sh_amt_reg_741;
wire   [0:0] icmp_ln582_fu_365_p2;
reg   [0:0] icmp_ln582_reg_748;
wire   [15:0] trunc_ln583_fu_371_p1;
reg   [15:0] trunc_ln583_reg_754;
reg   [7:0] tmp_reg_760;
wire    ap_CS_fsm_state7;
wire   [0:0] and_ln585_fu_447_p2;
reg   [0:0] and_ln585_reg_770;
wire   [0:0] and_ln603_fu_470_p2;
reg   [0:0] and_ln603_reg_775;
wire   [0:0] or_ln603_fu_476_p2;
reg   [0:0] or_ln603_reg_780;
wire   [15:0] select_ln603_1_fu_482_p3;
reg   [15:0] select_ln603_1_reg_786;
wire   [53:0] grp_fu_402_p2;
reg   [53:0] ashr_ln586_reg_791;
wire    ap_CS_fsm_state8;
wire   [0:0] or_ln603_2_fu_504_p2;
reg   [0:0] or_ln603_2_reg_796;
wire   [15:0] select_ln603_2_fu_527_p3;
reg   [15:0] select_ln603_2_reg_801;
wire    ap_CS_fsm_state9;
wire   [5:0] shl_ln_fu_533_p3;
reg   [5:0] shl_ln_reg_806;
wire   [5:0] empty_449_fu_541_p2;
reg   [5:0] empty_449_reg_813;
wire   [0:0] icmp_ln203_fu_547_p2;
reg   [0:0] icmp_ln203_reg_819;
wire   [5:0] sub_ln203_fu_553_p2;
reg   [5:0] sub_ln203_reg_827;
wire   [5:0] sub_ln203_1_fu_579_p2;
reg   [5:0] sub_ln203_1_reg_832;
wire    ap_CS_fsm_state10;
wire   [47:0] shl_ln203_fu_589_p2;
reg   [47:0] shl_ln203_reg_837;
reg   [10:0] i_0_i_i_reg_162;
reg    ap_block_state1;
reg   [1:0] j_0_i_i_reg_173;
wire    ap_CS_fsm_state11;
reg   [0:0] is_last_1_fu_126;
wire   [0:0] is_last_fu_233_p2;
reg   [47:0] ctype_data_V_fu_130;
wire   [47:0] ctype_data_V_1_fu_658_p2;
wire   [63:0] grp_fu_185_p1;
wire   [63:0] ireg_V_fu_271_p1;
wire   [52:0] tmp_171_i_fu_304_p3;
wire   [53:0] p_Result_9_fu_311_p1;
wire   [53:0] man_V_1_fu_315_p2;
wire   [11:0] zext_ln461_fu_301_p1;
wire   [11:0] F2_fu_333_p2;
wire   [11:0] add_ln581_fu_345_p2;
wire   [11:0] sub_ln581_fu_351_p2;
wire  signed [31:0] sext_ln581_fu_385_p1;
wire   [53:0] grp_fu_402_p1;
wire   [31:0] bitcast_ln696_fu_407_p1;
wire   [0:0] tmp_16_fu_410_p3;
wire   [0:0] or_ln582_fu_426_p2;
wire   [0:0] xor_ln582_fu_430_p2;
wire   [0:0] icmp_ln585_fu_388_p2;
wire   [0:0] and_ln581_fu_436_p2;
wire   [0:0] xor_ln585_fu_441_p2;
wire   [0:0] or_ln581_fu_459_p2;
wire   [0:0] icmp_ln603_fu_393_p2;
wire   [0:0] xor_ln581_fu_464_p2;
wire   [0:0] and_ln585_1_fu_453_p2;
wire   [15:0] select_ln588_fu_418_p3;
wire   [0:0] xor_ln571_fu_489_p2;
wire   [0:0] and_ln582_fu_494_p2;
wire   [0:0] or_ln603_1_fu_499_p2;
wire  signed [15:0] sext_ln581_1_fu_509_p1;
wire   [15:0] shl_ln604_fu_515_p2;
wire   [15:0] trunc_ln586_fu_512_p1;
wire   [15:0] select_ln603_fu_520_p3;
wire   [15:0] select_ln603_3_fu_559_p3;
wire   [5:0] select_ln203_fu_569_p3;
wire   [5:0] select_ln203_2_fu_574_p3;
wire   [47:0] zext_ln203_fu_565_p1;
wire   [47:0] zext_ln203_1_fu_585_p1;
wire   [5:0] select_ln203_1_fu_595_p3;
reg   [47:0] tmp_17_fu_607_p4;
wire   [47:0] zext_ln203_2_fu_600_p1;
wire   [47:0] zext_ln203_3_fu_604_p1;
wire   [47:0] shl_ln203_1_fu_622_p2;
wire   [47:0] lshr_ln203_fu_628_p2;
wire   [47:0] and_ln203_fu_634_p2;
wire   [47:0] xor_ln203_fu_640_p2;
wire   [47:0] select_ln203_3_fu_616_p3;
wire   [47:0] and_ln203_1_fu_646_p2;
wire   [47:0] and_ln203_2_fu_652_p2;
reg    grp_fu_185_ce;
wire    ap_CS_fsm_state4;
reg   [10:0] ap_NS_fsm;
wire    regslice_both_in_last_V_U_apdone_blk;
wire   [0:0] in_r_TLAST_int;
wire    in_r_TVALID_int;
reg    in_r_TREADY_int;
wire    regslice_both_in_last_V_U_ack_in;
wire    regslice_both_in_data_U_apdone_blk;
wire   [31:0] in_r_TDATA_int;
wire    regslice_both_in_data_U_vld_out;
wire    regslice_both_in_data_U_ack_in;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 11'd1;
end

myproject_axi_fpext_32ns_64_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
myproject_axi_fpext_32ns_64_3_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_r_TDATA_int),
    .ce(grp_fu_185_ce),
    .dout(grp_fu_185_p1)
);

myproject_axi_ashr_54ns_32ns_54_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 2 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 54 ))
myproject_axi_ashr_54ns_32ns_54_2_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(man_V_2_reg_724),
    .din1(grp_fu_402_p1),
    .ce(1'b1),
    .dout(grp_fu_402_p2)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_r_TLAST),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_last_V_U_ack_in),
    .data_out(in_r_TLAST_int),
    .vld_out(in_r_TVALID_int),
    .ack_out(in_r_TREADY_int),
    .apdone_blk(regslice_both_in_last_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_r_TDATA),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_data_U_ack_in),
    .data_out(in_r_TDATA_int),
    .vld_out(regslice_both_in_data_U_vld_out),
    .ack_out(in_r_TREADY_int),
    .apdone_blk(regslice_both_in_data_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((icmp_ln17_fu_200_p2 == 1'd1) & (is_last_0_i_out_out_full_n == 1'b0)) & (icmp_ln17_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln20_fu_212_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln20_fu_212_p2 == 1'd1) & (io_acc_block_signal_op47 == 1'b0))) & (icmp_ln20_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_i_i_reg_162 <= i_reg_685;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_i_reg_162 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln20_fu_212_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln20_fu_212_p2 == 1'd1) & (io_acc_block_signal_op47 == 1'b0))) & (icmp_ln20_fu_212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        is_last_1_fu_126 <= is_last_fu_233_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        is_last_1_fu_126 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        j_0_i_i_reg_173 <= j_reg_693;
    end else if ((~((icmp_ln17_fu_200_p2 == 1'd1) & (is_last_0_i_out_out_full_n == 1'b0)) & (icmp_ln17_fu_200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_i_i_reg_173 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        and_ln585_reg_770 <= and_ln585_fu_447_p2;
        and_ln603_reg_775 <= and_ln603_fu_470_p2;
        or_ln603_reg_780 <= or_ln603_fu_476_p2;
        select_ln603_1_reg_786 <= select_ln603_1_fu_482_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ashr_ln586_reg_791 <= grp_fu_402_p2;
        or_ln603_2_reg_796 <= or_ln603_2_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ctype_data_V_fu_130 <= ctype_data_V_1_fu_658_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        empty_449_reg_813[5 : 4] <= empty_449_fu_541_p2[5 : 4];
        icmp_ln203_reg_819 <= icmp_ln203_fu_547_p2;
        shl_ln_reg_806[5 : 4] <= shl_ln_fu_533_p3[5 : 4];
        sub_ln203_reg_827[5 : 4] <= sub_ln203_fu_553_p2[5 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        exp_tmp_V_reg_714 <= {{ireg_V_fu_271_p1[62:52]}};
        p_Result_s_reg_709 <= ireg_V_fu_271_p1[32'd63];
        trunc_ln556_reg_704 <= trunc_ln556_fu_275_p1;
        trunc_ln565_reg_719 <= trunc_ln565_fu_297_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln17_fu_200_p2 == 1'd1) & (is_last_0_i_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_685 <= i_fu_206_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln571_reg_729 <= icmp_ln571_fu_328_p2;
        icmp_ln581_reg_735 <= icmp_ln581_fu_339_p2;
        icmp_ln582_reg_748 <= icmp_ln582_fu_365_p2;
        man_V_2_reg_724 <= man_V_2_fu_321_p3;
        sh_amt_reg_741 <= sh_amt_fu_357_p3;
        tmp_reg_760 <= {{sh_amt_fu_357_p3[11:4]}};
        trunc_ln583_reg_754 <= trunc_ln583_fu_371_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln20_fu_212_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln20_fu_212_p2 == 1'd1) & (io_acc_block_signal_op47 == 1'b0))) & (icmp_ln20_fu_212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        in_data_tmp_reg_698 <= in_r_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln20_fu_212_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln20_fu_212_p2 == 1'd1) & (io_acc_block_signal_op47 == 1'b0))) & (1'b1 == ap_CS_fsm_state3))) begin
        j_reg_693 <= j_fu_218_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln603_2_reg_796 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        select_ln603_2_reg_801 <= select_ln603_2_fu_527_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        shl_ln203_reg_837 <= shl_ln203_fu_589_p2;
        sub_ln203_1_reg_832 <= sub_ln203_1_fu_579_p2;
    end
end

always @ (*) begin
    if ((~((icmp_ln17_fu_200_p2 == 1'd1) & (is_last_0_i_out_out_full_n == 1'b0)) & (icmp_ln17_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (~(((icmp_ln20_fu_212_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln20_fu_212_p2 == 1'd1) & (io_acc_block_signal_op47 == 1'b0))) & (1'b1 == ap_CS_fsm_state3)))) begin
        grp_fu_185_ce = 1'b1;
    end else begin
        grp_fu_185_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln20_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_0_V_blk_n = in_local_V_data_0_V_full_n;
    end else begin
        in_local_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((icmp_ln20_fu_212_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln20_fu_212_p2 == 1'd1) & (io_acc_block_signal_op47 == 1'b0))) & (icmp_ln20_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_0_V_write = 1'b1;
    end else begin
        in_local_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln20_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_1_V_blk_n = in_local_V_data_1_V_full_n;
    end else begin
        in_local_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((icmp_ln20_fu_212_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln20_fu_212_p2 == 1'd1) & (io_acc_block_signal_op47 == 1'b0))) & (icmp_ln20_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_1_V_write = 1'b1;
    end else begin
        in_local_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln20_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_2_V_blk_n = in_local_V_data_2_V_full_n;
    end else begin
        in_local_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((icmp_ln20_fu_212_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln20_fu_212_p2 == 1'd1) & (io_acc_block_signal_op47 == 1'b0))) & (icmp_ln20_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_2_V_write = 1'b1;
    end else begin
        in_local_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln20_fu_212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        in_r_TDATA_blk_n = in_r_TVALID_int;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((in_r_TVALID == 1'b1) & (regslice_both_in_last_V_U_ack_in == 1'b1))) begin
        in_r_TREADY = 1'b1;
    end else begin
        in_r_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln20_fu_212_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln20_fu_212_p2 == 1'd1) & (io_acc_block_signal_op47 == 1'b0))) & (icmp_ln20_fu_212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        in_r_TREADY_int = 1'b1;
    end else begin
        in_r_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln17_fu_200_p2 == 1'd1) & (is_last_0_i_out_out_full_n == 1'b0)) & (icmp_ln17_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln17_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        is_last_0_i_out_out_blk_n = is_last_0_i_out_out_full_n;
    end else begin
        is_last_0_i_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln17_fu_200_p2 == 1'd1) & (is_last_0_i_out_out_full_n == 1'b0)) & (icmp_ln17_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        is_last_0_i_out_out_write = 1'b1;
    end else begin
        is_last_0_i_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((icmp_ln17_fu_200_p2 == 1'd1) & (is_last_0_i_out_out_full_n == 1'b0)) & (icmp_ln17_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((icmp_ln17_fu_200_p2 == 1'd1) & (is_last_0_i_out_out_full_n == 1'b0)) & (icmp_ln17_fu_200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~(((icmp_ln20_fu_212_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln20_fu_212_p2 == 1'd1) & (io_acc_block_signal_op47 == 1'b0))) & (icmp_ln20_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~(((icmp_ln20_fu_212_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln20_fu_212_p2 == 1'd1) & (io_acc_block_signal_op47 == 1'b0))) & (icmp_ln20_fu_212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_333_p2 = (12'd1075 - zext_ln461_fu_301_p1);

assign add_ln581_fu_345_p2 = ($signed(12'd4086) + $signed(F2_fu_333_p2));

assign and_ln203_1_fu_646_p2 = (xor_ln203_fu_640_p2 & ctype_data_V_fu_130);

assign and_ln203_2_fu_652_p2 = (select_ln203_3_fu_616_p3 & and_ln203_fu_634_p2);

assign and_ln203_fu_634_p2 = (shl_ln203_1_fu_622_p2 & lshr_ln203_fu_628_p2);

assign and_ln581_fu_436_p2 = (xor_ln582_fu_430_p2 & icmp_ln581_reg_735);

assign and_ln582_fu_494_p2 = (xor_ln571_fu_489_p2 & icmp_ln582_reg_748);

assign and_ln585_1_fu_453_p2 = (icmp_ln585_fu_388_p2 & and_ln581_fu_436_p2);

assign and_ln585_fu_447_p2 = (xor_ln585_fu_441_p2 & and_ln581_fu_436_p2);

assign and_ln603_fu_470_p2 = (xor_ln581_fu_464_p2 & icmp_ln603_fu_393_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2 = ((icmp_ln17_fu_200_p2 == 1'd1) & (is_last_0_i_out_out_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state3 = (((icmp_ln20_fu_212_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln20_fu_212_p2 == 1'd1) & (io_acc_block_signal_op47 == 1'b0)));
end

assign ap_ready = internal_ap_ready;

assign bitcast_ln696_fu_407_p1 = in_data_tmp_reg_698;

assign ctype_data_V_1_fu_658_p2 = (and_ln203_2_fu_652_p2 | and_ln203_1_fu_646_p2);

assign empty_449_fu_541_p2 = (shl_ln_fu_533_p3 | 6'd15);

assign grp_fu_402_p1 = $unsigned(sext_ln581_fu_385_p1);

assign i_fu_206_p2 = (i_0_i_i_reg_162 + 11'd1);

assign icmp_ln17_fu_200_p2 = ((i_0_i_i_reg_162 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln203_fu_547_p2 = ((shl_ln_fu_533_p3 > empty_449_fu_541_p2) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_212_p2 = ((j_0_i_i_reg_173 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_328_p2 = ((trunc_ln556_reg_704 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_339_p2 = (($signed(F2_fu_333_p2) > $signed(12'd10)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_365_p2 = ((F2_fu_333_p2 == 12'd10) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_388_p2 = ((sh_amt_reg_741 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_393_p2 = ((tmp_reg_760 == 8'd0) ? 1'b1 : 1'b0);

assign in_local_V_data_0_V_din = ctype_data_V_fu_130[15:0];

assign in_local_V_data_1_V_din = {{ctype_data_V_fu_130[31:16]}};

assign in_local_V_data_2_V_din = {{ctype_data_V_fu_130[47:32]}};

assign io_acc_block_signal_op47 = (in_local_V_data_2_V_full_n & in_local_V_data_1_V_full_n & in_local_V_data_0_V_full_n);

assign ireg_V_fu_271_p1 = grp_fu_185_p1;

assign is_last_0_i_out_out_din = is_last_1_fu_126;

assign is_last_fu_233_p2 = (is_last_1_fu_126 | in_r_TLAST_int);

assign j_fu_218_p2 = (j_0_i_i_reg_173 + 2'd1);

assign lshr_ln203_fu_628_p2 = 48'd281474976710655 >> zext_ln203_3_fu_604_p1;

assign man_V_1_fu_315_p2 = (54'd0 - p_Result_9_fu_311_p1);

assign man_V_2_fu_321_p3 = ((p_Result_s_reg_709[0:0] === 1'b1) ? man_V_1_fu_315_p2 : p_Result_9_fu_311_p1);

assign or_ln581_fu_459_p2 = (or_ln582_fu_426_p2 | icmp_ln581_reg_735);

assign or_ln582_fu_426_p2 = (icmp_ln582_reg_748 | icmp_ln571_reg_729);

assign or_ln603_1_fu_499_p2 = (and_ln585_reg_770 | and_ln582_fu_494_p2);

assign or_ln603_2_fu_504_p2 = (or_ln603_reg_780 | or_ln603_1_fu_499_p2);

assign or_ln603_fu_476_p2 = (and_ln603_fu_470_p2 | and_ln585_1_fu_453_p2);

assign p_Result_9_fu_311_p1 = tmp_171_i_fu_304_p3;

assign select_ln203_1_fu_595_p3 = ((icmp_ln203_reg_819[0:0] === 1'b1) ? empty_449_reg_813 : shl_ln_reg_806);

assign select_ln203_2_fu_574_p3 = ((icmp_ln203_reg_819[0:0] === 1'b1) ? sub_ln203_reg_827 : shl_ln_reg_806);

assign select_ln203_3_fu_616_p3 = ((icmp_ln203_reg_819[0:0] === 1'b1) ? tmp_17_fu_607_p4 : shl_ln203_reg_837);

assign select_ln203_fu_569_p3 = ((icmp_ln203_reg_819[0:0] === 1'b1) ? shl_ln_reg_806 : empty_449_reg_813);

assign select_ln588_fu_418_p3 = ((tmp_16_fu_410_p3[0:0] === 1'b1) ? 16'd65535 : 16'd0);

assign select_ln603_1_fu_482_p3 = ((and_ln585_fu_447_p2[0:0] === 1'b1) ? select_ln588_fu_418_p3 : trunc_ln583_reg_754);

assign select_ln603_2_fu_527_p3 = ((or_ln603_reg_780[0:0] === 1'b1) ? select_ln603_fu_520_p3 : select_ln603_1_reg_786);

assign select_ln603_3_fu_559_p3 = ((or_ln603_2_reg_796[0:0] === 1'b1) ? select_ln603_2_reg_801 : 16'd0);

assign select_ln603_fu_520_p3 = ((and_ln603_reg_775[0:0] === 1'b1) ? shl_ln604_fu_515_p2 : trunc_ln586_fu_512_p1);

assign sext_ln581_1_fu_509_p1 = sh_amt_reg_741;

assign sext_ln581_fu_385_p1 = sh_amt_reg_741;

assign sh_amt_fu_357_p3 = ((icmp_ln581_fu_339_p2[0:0] === 1'b1) ? add_ln581_fu_345_p2 : sub_ln581_fu_351_p2);

assign shl_ln203_1_fu_622_p2 = 48'd281474976710655 << zext_ln203_2_fu_600_p1;

assign shl_ln203_fu_589_p2 = zext_ln203_fu_565_p1 << zext_ln203_1_fu_585_p1;

assign shl_ln604_fu_515_p2 = trunc_ln583_reg_754 << sext_ln581_1_fu_509_p1;

assign shl_ln_fu_533_p3 = {{j_0_i_i_reg_173}, {4'd0}};

assign start_out = real_start;

assign sub_ln203_1_fu_579_p2 = ($signed(6'd47) - $signed(select_ln203_fu_569_p3));

assign sub_ln203_fu_553_p2 = ($signed(6'd47) - $signed(shl_ln_fu_533_p3));

assign sub_ln581_fu_351_p2 = (12'd10 - F2_fu_333_p2);

assign tmp_16_fu_410_p3 = bitcast_ln696_fu_407_p1[32'd31];

assign tmp_171_i_fu_304_p3 = {{1'd1}, {trunc_ln565_reg_719}};

integer ap_tvar_int_0;

always @ (shl_ln203_reg_837) begin
    for (ap_tvar_int_0 = 48 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 47 - 0) begin
            tmp_17_fu_607_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_17_fu_607_p4[ap_tvar_int_0] = shl_ln203_reg_837[47 - ap_tvar_int_0];
        end
    end
end

assign trunc_ln556_fu_275_p1 = ireg_V_fu_271_p1[62:0];

assign trunc_ln565_fu_297_p1 = ireg_V_fu_271_p1[51:0];

assign trunc_ln583_fu_371_p1 = man_V_2_fu_321_p3[15:0];

assign trunc_ln586_fu_512_p1 = ashr_ln586_reg_791[15:0];

assign xor_ln203_fu_640_p2 = (48'd281474976710655 ^ and_ln203_fu_634_p2);

assign xor_ln571_fu_489_p2 = (icmp_ln571_reg_729 ^ 1'd1);

assign xor_ln581_fu_464_p2 = (or_ln581_fu_459_p2 ^ 1'd1);

assign xor_ln582_fu_430_p2 = (or_ln582_fu_426_p2 ^ 1'd1);

assign xor_ln585_fu_441_p2 = (icmp_ln585_fu_388_p2 ^ 1'd1);

assign zext_ln203_1_fu_585_p1 = select_ln203_2_fu_574_p3;

assign zext_ln203_2_fu_600_p1 = select_ln203_1_fu_595_p3;

assign zext_ln203_3_fu_604_p1 = sub_ln203_1_reg_832;

assign zext_ln203_fu_565_p1 = select_ln603_3_fu_559_p3;

assign zext_ln461_fu_301_p1 = exp_tmp_V_reg_714;

always @ (posedge ap_clk) begin
    shl_ln_reg_806[3:0] <= 4'b0000;
    empty_449_reg_813[3:0] <= 4'b1111;
    sub_ln203_reg_827[3:0] <= 4'b1111;
end

endmodule //Loop_1_proc604
