-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Loop_1_proc700 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in_local_V_data_0_V_din : OUT STD_LOGIC_VECTOR (3 downto 0);
    in_local_V_data_0_V_full_n : IN STD_LOGIC;
    in_local_V_data_0_V_write : OUT STD_LOGIC;
    in_local_V_data_1_V_din : OUT STD_LOGIC_VECTOR (3 downto 0);
    in_local_V_data_1_V_full_n : IN STD_LOGIC;
    in_local_V_data_1_V_write : OUT STD_LOGIC;
    in_local_V_data_2_V_din : OUT STD_LOGIC_VECTOR (3 downto 0);
    in_local_V_data_2_V_full_n : IN STD_LOGIC;
    in_local_V_data_2_V_write : OUT STD_LOGIC;
    in_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    in_r_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    is_last_0_i_out_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    is_last_0_i_out_out_full_n : IN STD_LOGIC;
    is_last_0_i_out_out_write : OUT STD_LOGIC );
end;


architecture behav of Loop_1_proc700 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv13_1000 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv12_FFE : STD_LOGIC_VECTOR (11 downto 0) := "111111111110";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in_local_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln20_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_local_V_data_1_V_blk_n : STD_LOGIC;
    signal in_local_V_data_2_V_blk_n : STD_LOGIC;
    signal in_r_TDATA_blk_n : STD_LOGIC;
    signal is_last_0_i_out_out_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln17_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_204_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_reg_692 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal j_fu_216_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_reg_700 : STD_LOGIC_VECTOR (1 downto 0);
    signal io_acc_block_signal_op46 : STD_LOGIC;
    signal ap_block_state3 : BOOLEAN;
    signal in_data_tmp_reg_705 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln556_fu_273_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln556_reg_711 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal p_Result_s_reg_716 : STD_LOGIC_VECTOR (0 downto 0);
    signal exp_tmp_V_reg_721 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_fu_295_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln565_reg_726 : STD_LOGIC_VECTOR (51 downto 0);
    signal man_V_2_fu_319_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_2_reg_731 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln571_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_736 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_reg_742 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_355_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_748 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_reg_755 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_fu_369_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln583_reg_761 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_reg_767 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal and_ln585_fu_445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_reg_777 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_reg_782 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_reg_787 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_1_fu_480_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln603_1_reg_793 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_400_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_reg_798 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal or_ln603_2_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_2_reg_803 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_2_fu_529_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln603_2_reg_808 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal shl_ln_fu_535_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln_reg_813 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_486_fu_543_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_486_reg_819 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln203_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln203_reg_824 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln203_fu_555_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln203_reg_831 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln203_1_fu_569_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln203_1_reg_836 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_0_i_i_reg_160 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal j_0_i_i_reg_171 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal is_last_1_fu_124 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_last_fu_231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctype_data_V_fu_128 : STD_LOGIC_VECTOR (11 downto 0);
    signal ctype_data_V_1_fu_665_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_183_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_269_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4313_i_fu_302_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_9_fu_309_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_313_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal zext_ln461_fu_299_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_331_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_fu_343_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_349_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln581_fu_383_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_400_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln696_fu_405_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_408_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_1_fu_451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_fu_416_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln571_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln582_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_1_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln581_fu_507_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln581cast_fu_513_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln604_fu_517_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln586_fu_510_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln603_fu_522_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln203_fu_561_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln603_3_fu_575_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln203_2_fu_590_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln203_1_fu_585_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln203_fu_581_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln203_1_fu_595_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln203_fu_606_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_11_fu_612_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln203_2_fu_599_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln203_3_fu_603_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln203_1_fu_629_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lshr_ln203_fu_635_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal and_ln203_fu_641_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal xor_ln203_fu_647_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln203_3_fu_622_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal and_ln203_1_fu_653_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal and_ln203_2_fu_659_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_183_ce : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal regslice_both_in_last_V_U_apdone_blk : STD_LOGIC;
    signal in_r_TLAST_int : STD_LOGIC_VECTOR (0 downto 0);
    signal in_r_TVALID_int : STD_LOGIC;
    signal in_r_TREADY_int : STD_LOGIC;
    signal regslice_both_in_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_data_U_apdone_blk : STD_LOGIC;
    signal in_r_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal regslice_both_in_data_U_vld_out : STD_LOGIC;
    signal regslice_both_in_data_U_ack_in : STD_LOGIC;

    component myproject_axi_fpext_32ns_64_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component myproject_axi_ashr_54ns_32ns_54_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        OP : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (53 downto 0);
        din1 : IN STD_LOGIC_VECTOR (53 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (53 downto 0) );
    end component;


    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    myproject_axi_fpext_32ns_64_3_1_U1 : component myproject_axi_fpext_32ns_64_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => in_r_TDATA_int,
        ce => grp_fu_183_ce,
        dout => grp_fu_183_p1);

    myproject_axi_ashr_54ns_32ns_54_2_1_U2 : component myproject_axi_ashr_54ns_32ns_54_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        OP => 2,
        din0_WIDTH => 54,
        din1_WIDTH => 32,
        dout_WIDTH => 54)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => man_V_2_reg_731,
        din1 => grp_fu_400_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_400_p2);

    regslice_both_in_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_r_TLAST,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_last_V_U_ack_in,
        data_out => in_r_TLAST_int,
        vld_out => in_r_TVALID_int,
        ack_out => in_r_TREADY_int,
        apdone_blk => regslice_both_in_last_V_U_apdone_blk);

    regslice_both_in_data_U : component regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_r_TDATA,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_data_U_ack_in,
        data_out => in_r_TDATA_int,
        vld_out => regslice_both_in_data_U_vld_out,
        ack_out => in_r_TREADY_int,
        apdone_blk => regslice_both_in_data_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((icmp_ln17_fu_198_p2 = ap_const_lv1_1) and (is_last_0_i_out_out_full_n = ap_const_logic_0))) and (icmp_ln17_fu_198_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_i_i_reg_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((icmp_ln20_fu_210_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (io_acc_block_signal_op46 = ap_const_logic_0)))) and (icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_0_i_i_reg_160 <= i_reg_692;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_i_i_reg_160 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    is_last_1_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((icmp_ln20_fu_210_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (io_acc_block_signal_op46 = ap_const_logic_0)))) and (icmp_ln20_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                is_last_1_fu_124 <= is_last_fu_231_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                is_last_1_fu_124 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    j_0_i_i_reg_171_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                j_0_i_i_reg_171 <= j_reg_700;
            elsif ((not(((icmp_ln17_fu_198_p2 = ap_const_lv1_1) and (is_last_0_i_out_out_full_n = ap_const_logic_0))) and (icmp_ln17_fu_198_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_0_i_i_reg_171 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                and_ln585_reg_777 <= and_ln585_fu_445_p2;
                and_ln603_reg_782 <= and_ln603_fu_468_p2;
                or_ln603_reg_787 <= or_ln603_fu_474_p2;
                select_ln603_1_reg_793 <= select_ln603_1_fu_480_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                ashr_ln586_reg_798 <= grp_fu_400_p2;
                or_ln603_2_reg_803 <= or_ln603_2_fu_502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                ctype_data_V_fu_128 <= ctype_data_V_1_fu_665_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                    empty_486_reg_819(3 downto 2) <= empty_486_fu_543_p2(3 downto 2);
                icmp_ln203_reg_824 <= icmp_ln203_fu_549_p2;
                    shl_ln_reg_813(3 downto 2) <= shl_ln_fu_535_p3(3 downto 2);
                sub_ln203_1_reg_836 <= sub_ln203_1_fu_569_p2;
                    sub_ln203_reg_831(3 downto 2) <= sub_ln203_fu_555_p2(3 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                exp_tmp_V_reg_721 <= ireg_V_fu_269_p1(62 downto 52);
                p_Result_s_reg_716 <= ireg_V_fu_269_p1(63 downto 63);
                trunc_ln556_reg_711 <= trunc_ln556_fu_273_p1;
                trunc_ln565_reg_726 <= trunc_ln565_fu_295_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln17_fu_198_p2 = ap_const_lv1_1) and (is_last_0_i_out_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                i_reg_692 <= i_fu_204_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                icmp_ln571_reg_736 <= icmp_ln571_fu_326_p2;
                icmp_ln581_reg_742 <= icmp_ln581_fu_337_p2;
                icmp_ln582_reg_755 <= icmp_ln582_fu_363_p2;
                man_V_2_reg_731 <= man_V_2_fu_319_p3;
                sh_amt_reg_748 <= sh_amt_fu_355_p3;
                tmp_reg_767 <= sh_amt_fu_355_p3(11 downto 2);
                trunc_ln583_reg_761 <= trunc_ln583_fu_369_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((icmp_ln20_fu_210_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (io_acc_block_signal_op46 = ap_const_logic_0)))) and (icmp_ln20_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                in_data_tmp_reg_705 <= in_r_TDATA_int;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((icmp_ln20_fu_210_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (io_acc_block_signal_op46 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                j_reg_700 <= j_fu_216_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln603_2_reg_803 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                select_ln603_2_reg_808 <= select_ln603_2_fu_529_p3;
            end if;
        end if;
    end process;
    shl_ln_reg_813(1 downto 0) <= "00";
    empty_486_reg_819(1 downto 0) <= "11";
    sub_ln203_reg_831(1 downto 0) <= "11";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, is_last_0_i_out_out_full_n, ap_CS_fsm_state3, icmp_ln20_fu_210_p2, ap_CS_fsm_state2, icmp_ln17_fu_198_p2, io_acc_block_signal_op46, in_r_TVALID_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((icmp_ln17_fu_198_p2 = ap_const_lv1_1) and (is_last_0_i_out_out_full_n = ap_const_logic_0))) and (icmp_ln17_fu_198_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((icmp_ln17_fu_198_p2 = ap_const_lv1_1) and (is_last_0_i_out_out_full_n = ap_const_logic_0))) and (icmp_ln17_fu_198_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not((((icmp_ln20_fu_210_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (io_acc_block_signal_op46 = ap_const_logic_0)))) and (icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not((((icmp_ln20_fu_210_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (io_acc_block_signal_op46 = ap_const_logic_0)))) and (icmp_ln20_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    F2_fu_331_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_fu_299_p1));
    add_ln581_fu_343_p2 <= std_logic_vector(signed(ap_const_lv12_FFE) + signed(F2_fu_331_p2));
    and_ln203_1_fu_653_p2 <= (xor_ln203_fu_647_p2 and ctype_data_V_fu_128);
    and_ln203_2_fu_659_p2 <= (select_ln203_3_fu_622_p3 and and_ln203_fu_641_p2);
    and_ln203_fu_641_p2 <= (shl_ln203_1_fu_629_p2 and lshr_ln203_fu_635_p2);
    and_ln581_fu_434_p2 <= (xor_ln582_fu_428_p2 and icmp_ln581_reg_742);
    and_ln582_fu_492_p2 <= (xor_ln571_fu_487_p2 and icmp_ln582_reg_755);
    and_ln585_1_fu_451_p2 <= (icmp_ln585_fu_386_p2 and and_ln581_fu_434_p2);
    and_ln585_fu_445_p2 <= (xor_ln585_fu_439_p2 and and_ln581_fu_434_p2);
    and_ln603_fu_468_p2 <= (xor_ln581_fu_462_p2 and icmp_ln603_fu_391_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_assign_proc : process(is_last_0_i_out_out_full_n, icmp_ln17_fu_198_p2)
    begin
                ap_block_state2 <= ((icmp_ln17_fu_198_p2 = ap_const_lv1_1) and (is_last_0_i_out_out_full_n = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(icmp_ln20_fu_210_p2, io_acc_block_signal_op46, in_r_TVALID_int)
    begin
                ap_block_state3 <= (((icmp_ln20_fu_210_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (io_acc_block_signal_op46 = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, is_last_0_i_out_out_full_n, ap_CS_fsm_state2, icmp_ln17_fu_198_p2)
    begin
        if ((not(((icmp_ln17_fu_198_p2 = ap_const_lv1_1) and (is_last_0_i_out_out_full_n = ap_const_logic_0))) and (icmp_ln17_fu_198_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    bitcast_ln696_fu_405_p1 <= in_data_tmp_reg_705;
    ctype_data_V_1_fu_665_p2 <= (and_ln203_2_fu_659_p2 or and_ln203_1_fu_653_p2);
    empty_486_fu_543_p2 <= (shl_ln_fu_535_p3 or ap_const_lv4_3);

    grp_fu_183_ce_assign_proc : process(ap_CS_fsm_state3, icmp_ln20_fu_210_p2, io_acc_block_signal_op46, ap_CS_fsm_state5, ap_CS_fsm_state4, in_r_TVALID_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state5) or (not((((icmp_ln20_fu_210_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (io_acc_block_signal_op46 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_fu_183_ce <= ap_const_logic_1;
        else 
            grp_fu_183_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_fu_383_p1),54));
    i_fu_204_p2 <= std_logic_vector(unsigned(i_0_i_i_reg_160) + unsigned(ap_const_lv13_1));
    icmp_ln17_fu_198_p2 <= "1" when (i_0_i_i_reg_160 = ap_const_lv13_1000) else "0";
    icmp_ln203_fu_549_p2 <= "1" when (unsigned(shl_ln_fu_535_p3) > unsigned(empty_486_fu_543_p2)) else "0";
    icmp_ln20_fu_210_p2 <= "1" when (j_0_i_i_reg_171 = ap_const_lv2_3) else "0";
    icmp_ln571_fu_326_p2 <= "1" when (trunc_ln556_reg_711 = ap_const_lv63_0) else "0";
    icmp_ln581_fu_337_p2 <= "1" when (signed(F2_fu_331_p2) > signed(ap_const_lv12_2)) else "0";
    icmp_ln582_fu_363_p2 <= "1" when (F2_fu_331_p2 = ap_const_lv12_2) else "0";
    icmp_ln585_fu_386_p2 <= "1" when (unsigned(sh_amt_reg_748) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln603_fu_391_p2 <= "1" when (tmp_reg_767 = ap_const_lv10_0) else "0";

    in_local_V_data_0_V_blk_n_assign_proc : process(in_local_V_data_0_V_full_n, ap_CS_fsm_state3, icmp_ln20_fu_210_p2)
    begin
        if (((icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            in_local_V_data_0_V_blk_n <= in_local_V_data_0_V_full_n;
        else 
            in_local_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_0_V_din <= ctype_data_V_fu_128(4 - 1 downto 0);

    in_local_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state3, icmp_ln20_fu_210_p2, io_acc_block_signal_op46, in_r_TVALID_int)
    begin
        if ((not((((icmp_ln20_fu_210_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (io_acc_block_signal_op46 = ap_const_logic_0)))) and (icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            in_local_V_data_0_V_write <= ap_const_logic_1;
        else 
            in_local_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_local_V_data_1_V_blk_n_assign_proc : process(in_local_V_data_1_V_full_n, ap_CS_fsm_state3, icmp_ln20_fu_210_p2)
    begin
        if (((icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            in_local_V_data_1_V_blk_n <= in_local_V_data_1_V_full_n;
        else 
            in_local_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_1_V_din <= ctype_data_V_fu_128(7 downto 4);

    in_local_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state3, icmp_ln20_fu_210_p2, io_acc_block_signal_op46, in_r_TVALID_int)
    begin
        if ((not((((icmp_ln20_fu_210_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (io_acc_block_signal_op46 = ap_const_logic_0)))) and (icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            in_local_V_data_1_V_write <= ap_const_logic_1;
        else 
            in_local_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_local_V_data_2_V_blk_n_assign_proc : process(in_local_V_data_2_V_full_n, ap_CS_fsm_state3, icmp_ln20_fu_210_p2)
    begin
        if (((icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            in_local_V_data_2_V_blk_n <= in_local_V_data_2_V_full_n;
        else 
            in_local_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_local_V_data_2_V_din <= ctype_data_V_fu_128(11 downto 8);

    in_local_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state3, icmp_ln20_fu_210_p2, io_acc_block_signal_op46, in_r_TVALID_int)
    begin
        if ((not((((icmp_ln20_fu_210_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (io_acc_block_signal_op46 = ap_const_logic_0)))) and (icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            in_local_V_data_2_V_write <= ap_const_logic_1;
        else 
            in_local_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state3, icmp_ln20_fu_210_p2, in_r_TVALID_int)
    begin
        if (((icmp_ln20_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            in_r_TDATA_blk_n <= in_r_TVALID_int;
        else 
            in_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_r_TREADY_assign_proc : process(in_r_TVALID, regslice_both_in_last_V_U_ack_in)
    begin
        if (((in_r_TVALID = ap_const_logic_1) and (regslice_both_in_last_V_U_ack_in = ap_const_logic_1))) then 
            in_r_TREADY <= ap_const_logic_1;
        else 
            in_r_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    in_r_TREADY_int_assign_proc : process(ap_CS_fsm_state3, icmp_ln20_fu_210_p2, io_acc_block_signal_op46, in_r_TVALID_int)
    begin
        if ((not((((icmp_ln20_fu_210_p2 = ap_const_lv1_0) and (in_r_TVALID_int = ap_const_logic_0)) or ((icmp_ln20_fu_210_p2 = ap_const_lv1_1) and (io_acc_block_signal_op46 = ap_const_logic_0)))) and (icmp_ln20_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            in_r_TREADY_int <= ap_const_logic_1;
        else 
            in_r_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(is_last_0_i_out_out_full_n, ap_CS_fsm_state2, icmp_ln17_fu_198_p2)
    begin
        if ((not(((icmp_ln17_fu_198_p2 = ap_const_lv1_1) and (is_last_0_i_out_out_full_n = ap_const_logic_0))) and (icmp_ln17_fu_198_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op46 <= (in_local_V_data_2_V_full_n and in_local_V_data_1_V_full_n and in_local_V_data_0_V_full_n);
    ireg_V_fu_269_p1 <= grp_fu_183_p1;

    is_last_0_i_out_out_blk_n_assign_proc : process(is_last_0_i_out_out_full_n, ap_CS_fsm_state2, icmp_ln17_fu_198_p2)
    begin
        if (((icmp_ln17_fu_198_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            is_last_0_i_out_out_blk_n <= is_last_0_i_out_out_full_n;
        else 
            is_last_0_i_out_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    is_last_0_i_out_out_din <= is_last_1_fu_124;

    is_last_0_i_out_out_write_assign_proc : process(is_last_0_i_out_out_full_n, ap_CS_fsm_state2, icmp_ln17_fu_198_p2)
    begin
        if ((not(((icmp_ln17_fu_198_p2 = ap_const_lv1_1) and (is_last_0_i_out_out_full_n = ap_const_logic_0))) and (icmp_ln17_fu_198_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            is_last_0_i_out_out_write <= ap_const_logic_1;
        else 
            is_last_0_i_out_out_write <= ap_const_logic_0;
        end if; 
    end process;

    is_last_fu_231_p2 <= (is_last_1_fu_124 or in_r_TLAST_int);
    j_fu_216_p2 <= std_logic_vector(unsigned(j_0_i_i_reg_171) + unsigned(ap_const_lv2_1));
    lshr_ln203_fu_635_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv12_FFF),to_integer(unsigned('0' & zext_ln203_3_fu_603_p1(12-1 downto 0)))));
    man_V_1_fu_313_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_9_fu_309_p1));
    man_V_2_fu_319_p3 <= 
        man_V_1_fu_313_p2 when (p_Result_s_reg_716(0) = '1') else 
        p_Result_9_fu_309_p1;
    or_ln581_fu_457_p2 <= (or_ln582_fu_424_p2 or icmp_ln581_reg_742);
    or_ln582_fu_424_p2 <= (icmp_ln582_reg_755 or icmp_ln571_reg_736);
    or_ln603_1_fu_497_p2 <= (and_ln585_reg_777 or and_ln582_fu_492_p2);
    or_ln603_2_fu_502_p2 <= (or_ln603_reg_787 or or_ln603_1_fu_497_p2);
    or_ln603_fu_474_p2 <= (and_ln603_fu_468_p2 or and_ln585_1_fu_451_p2);
    p_Result_9_fu_309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4313_i_fu_302_p3),54));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    select_ln203_1_fu_585_p3 <= 
        empty_486_reg_819 when (icmp_ln203_reg_824(0) = '1') else 
        shl_ln_reg_813;
    select_ln203_2_fu_590_p3 <= 
        sub_ln203_reg_831 when (icmp_ln203_reg_824(0) = '1') else 
        shl_ln_reg_813;
    select_ln203_3_fu_622_p3 <= 
        tmp_11_fu_612_p4 when (icmp_ln203_reg_824(0) = '1') else 
        shl_ln203_fu_606_p2;
    select_ln203_fu_561_p3 <= 
        shl_ln_fu_535_p3 when (icmp_ln203_fu_549_p2(0) = '1') else 
        empty_486_fu_543_p2;
    select_ln588_fu_416_p3 <= 
        ap_const_lv4_F when (tmp_10_fu_408_p3(0) = '1') else 
        ap_const_lv4_0;
    select_ln603_1_fu_480_p3 <= 
        select_ln588_fu_416_p3 when (and_ln585_fu_445_p2(0) = '1') else 
        trunc_ln583_reg_761;
    select_ln603_2_fu_529_p3 <= 
        select_ln603_fu_522_p3 when (or_ln603_reg_787(0) = '1') else 
        select_ln603_1_reg_793;
    select_ln603_3_fu_575_p3 <= 
        select_ln603_2_reg_808 when (or_ln603_2_reg_803(0) = '1') else 
        ap_const_lv4_0;
    select_ln603_fu_522_p3 <= 
        shl_ln604_fu_517_p2 when (and_ln603_reg_782(0) = '1') else 
        trunc_ln586_fu_510_p1;
        sext_ln581_fu_383_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_748),32));

    sh_amt_fu_355_p3 <= 
        add_ln581_fu_343_p2 when (icmp_ln581_fu_337_p2(0) = '1') else 
        sub_ln581_fu_349_p2;
    shl_ln203_1_fu_629_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv12_FFF),to_integer(unsigned('0' & zext_ln203_2_fu_599_p1(12-1 downto 0)))));
    shl_ln203_fu_606_p2 <= std_logic_vector(shift_left(unsigned(zext_ln203_fu_581_p1),to_integer(unsigned('0' & zext_ln203_1_fu_595_p1(12-1 downto 0)))));
    shl_ln604_fu_517_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_reg_761),to_integer(unsigned('0' & trunc_ln581cast_fu_513_p1(4-1 downto 0)))));
    shl_ln_fu_535_p3 <= (j_0_i_i_reg_171 & ap_const_lv2_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln203_1_fu_569_p2 <= std_logic_vector(signed(ap_const_lv4_B) - signed(select_ln203_fu_561_p3));
    sub_ln203_fu_555_p2 <= std_logic_vector(signed(ap_const_lv4_B) - signed(shl_ln_fu_535_p3));
    sub_ln581_fu_349_p2 <= std_logic_vector(unsigned(ap_const_lv12_2) - unsigned(F2_fu_331_p2));
    tmp_10_fu_408_p3 <= bitcast_ln696_fu_405_p1(31 downto 31);
    
    tmp_11_fu_612_p4_proc : process(shl_ln203_fu_606_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(12+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(12+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(12 - 1 downto 0);
    variable tmp_11_fu_612_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(12 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(12 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(12 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_B(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := shl_ln203_fu_606_p2;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(12-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(12-1-unsigned(ap_const_lv32_B(4-1 downto 0)));
            for tmp_11_fu_612_p4_i in 0 to 12-1 loop
                v0_cpy(tmp_11_fu_612_p4_i) := shl_ln203_fu_606_p2(12-1-tmp_11_fu_612_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(12-1 downto 0)))));
        res_mask := res_mask(12-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_11_fu_612_p4 <= resvalue(12-1 downto 0);
    end process;

    tmp_4313_i_fu_302_p3 <= (ap_const_lv1_1 & trunc_ln565_reg_726);
    trunc_ln556_fu_273_p1 <= ireg_V_fu_269_p1(63 - 1 downto 0);
    trunc_ln565_fu_295_p1 <= ireg_V_fu_269_p1(52 - 1 downto 0);
    trunc_ln581_fu_507_p1 <= sh_amt_reg_748(7 - 1 downto 0);
    trunc_ln581cast_fu_513_p1 <= trunc_ln581_fu_507_p1(4 - 1 downto 0);
    trunc_ln583_fu_369_p1 <= man_V_2_fu_319_p3(4 - 1 downto 0);
    trunc_ln586_fu_510_p1 <= ashr_ln586_reg_798(4 - 1 downto 0);
    xor_ln203_fu_647_p2 <= (ap_const_lv12_FFF xor and_ln203_fu_641_p2);
    xor_ln571_fu_487_p2 <= (icmp_ln571_reg_736 xor ap_const_lv1_1);
    xor_ln581_fu_462_p2 <= (or_ln581_fu_457_p2 xor ap_const_lv1_1);
    xor_ln582_fu_428_p2 <= (or_ln582_fu_424_p2 xor ap_const_lv1_1);
    xor_ln585_fu_439_p2 <= (icmp_ln585_fu_386_p2 xor ap_const_lv1_1);
    zext_ln203_1_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln203_2_fu_590_p3),12));
    zext_ln203_2_fu_599_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln203_1_fu_585_p3),12));
    zext_ln203_3_fu_603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln203_1_reg_836),12));
    zext_ln203_fu_581_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln603_3_fu_575_p3),12));
    zext_ln461_fu_299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_reg_721),12));
end behav;
